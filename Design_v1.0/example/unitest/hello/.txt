
/home/jmqiao/Desktop/Update_Spinake_Project/Test_Case/Design_v1.0/example/unitest/hello/no-os/hello.elf:     file format elf32-littlearm
/home/jmqiao/Desktop/Update_Spinake_Project/Test_Case/Design_v1.0/example/unitest/hello/no-os/hello.elf
architecture: armv5te, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00001c34 memsz 0x00001c34 flags r-x
    LOAD off    0x00010000 vaddr 0x00400000 paddr 0x00400000 align 2**15
         filesz 0x00000008 memsz 0x000006b8 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 RO_DATA       00001c34  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 RW_DATA       00000008  00400000  00400000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 ZI_DATA       000006b0  00400008  00400008  00010008  2**2
                  ALLOC
  3 .debug_info   00000f3e  00000000  00000000  00010008  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000201  00000000  00000000  00010f46  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_loc    0000002d  00000000  00000000  00011147  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000038  00000000  00000000  00011174  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000106  00000000  00000000  000111ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000006a6  00000000  00000000  000112b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .comment      00000030  00000000  00000000  00011958  2**0
                  CONTENTS, READONLY
 10 .ARM.attributes 00000027  00000000  00000000  00011988  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00000028  00000000  00000000  000119b0  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  RO_DATA	00000000 RO_DATA
00400000 l    d  RW_DATA	00000000 RW_DATA
00400008 l    d  ZI_DATA	00000000 ZI_DATA
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 libsark.o
00000001 l       *ABS*	00000000 GNU
00000000 l       *ABS*	00000000 NULL
80000000 l       *ABS*	00000000 BIT_31
00000001 l       *ABS*	00000000 BUF_WRITE
00000012 l       *ABS*	00000000 NUM_CPUS
00000006 l       *ABS*	00000000 NUM_LINKS
00000000 l       *ABS*	00000000 ITCM_BASE
00008000 l       *ABS*	00000000 ITCM_SIZE
00008000 l       *ABS*	00000000 ITCM_TOP
00400000 l       *ABS*	00000000 DTCM_BASE
00010000 l       *ABS*	00000000 DTCM_SIZE
00410000 l       *ABS*	00000000 DTCM_TOP
70000000 l       *ABS*	00000000 SDRAM_BASE_UNBUF
60000000 l       *ABS*	00000000 SDRAM_BASE_BUF
60000000 l       *ABS*	00000000 SDRAM_BASE
08000000 l       *ABS*	00000000 SDRAM_SIZE
68000000 l       *ABS*	00000000 SDRAM_TOP
f5000000 l       *ABS*	00000000 SYSRAM_BASE_UNBUF
e5000000 l       *ABS*	00000000 SYSRAM_BASE_BUF
e5000000 l       *ABS*	00000000 SYSRAM_BASE
00008000 l       *ABS*	00000000 SYSRAM_SIZE
e5008000 l       *ABS*	00000000 SYSRAM_TOP
f6000000 l       *ABS*	00000000 ROM_BASE
00008000 l       *ABS*	00000000 ROM_SIZE
f6008000 l       *ABS*	00000000 ROM_TOP
10000000 l       *ABS*	00000000 CC_BASE_UNBUF
20000000 l       *ABS*	00000000 CC_BASE_BUF
20000000 l       *ABS*	00000000 CC_BASE
00000000 l       *ABS*	00000000 CC_TCR
00000004 l       *ABS*	00000000 CC_TXDATA
00000008 l       *ABS*	00000000 CC_TXKEY
0000000c l       *ABS*	00000000 CC_RSR
00000010 l       *ABS*	00000000 CC_RXDATA
00000014 l       *ABS*	00000000 CC_RXKEY
00000018 l       *ABS*	00000000 CC_SAR
0000001c l       *ABS*	00000000 CC_TEST
11000000 l       *ABS*	00000000 TIMER_BASE_UNBUF
21000000 l       *ABS*	00000000 TIMER_BASE_BUF
21000000 l       *ABS*	00000000 TIMER_BASE
00000020 l       *ABS*	00000000 TIMER_OFFSET
21000000 l       *ABS*	00000000 TIMER1_BASE
21000020 l       *ABS*	00000000 TIMER2_BASE
00000000 l       *ABS*	00000000 TC_LOAD
00000004 l       *ABS*	00000000 TC_COUNT
00000008 l       *ABS*	00000000 TC_CONTROL
0000000c l       *ABS*	00000000 TC_INT_CLR
00000010 l       *ABS*	00000000 TC_RAW_INT
00000014 l       *ABS*	00000000 TC_MASK_INT
00000018 l       *ABS*	00000000 TC_BG_LOAD
00000000 l       *ABS*	00000000 T1_LOAD
00000004 l       *ABS*	00000000 T1_COUNT
00000008 l       *ABS*	00000000 T1_CONTROL
0000000c l       *ABS*	00000000 T1_INT_CLR
00000010 l       *ABS*	00000000 T1_RAW_INT
00000014 l       *ABS*	00000000 T1_MASK_INT
00000018 l       *ABS*	00000000 T1_BG_LOAD
00000020 l       *ABS*	00000000 T2_LOAD
00000024 l       *ABS*	00000000 T2_COUNT
00000028 l       *ABS*	00000000 T2_CONTROL
0000002c l       *ABS*	00000000 T2_INT_CLR
00000030 l       *ABS*	00000000 T2_RAW_INT
00000034 l       *ABS*	00000000 T2_MASK_INT
00000038 l       *ABS*	00000000 T2_BG_LOAD
1f000000 l       *ABS*	00000000 VIC_BASE_UNBUF
2f000000 l       *ABS*	00000000 VIC_BASE_BUF
2f000000 l       *ABS*	00000000 VIC_BASE
00000000 l       *ABS*	00000000 VIC_IRQST
00000004 l       *ABS*	00000000 VIC_FIQST
00000008 l       *ABS*	00000000 VIC_RAW
0000000c l       *ABS*	00000000 VIC_SELECT
00000010 l       *ABS*	00000000 VIC_ENABLE
00000014 l       *ABS*	00000000 VIC_DISABLE
00000018 l       *ABS*	00000000 VIC_SOFT_SET
0000001c l       *ABS*	00000000 VIC_SOFT_CLR
00000020 l       *ABS*	00000000 VIC_PROTECT
00000030 l       *ABS*	00000000 VIC_VADDR
00000034 l       *ABS*	00000000 VIC_DEFADDR
00000100 l       *ABS*	00000000 VIC_ADDR
00000100 l       *ABS*	00000000 VIC_ADDR0
00000104 l       *ABS*	00000000 VIC_ADDR1
00000108 l       *ABS*	00000000 VIC_ADDR2
0000010c l       *ABS*	00000000 VIC_ADDR3
00000110 l       *ABS*	00000000 VIC_ADDR4
00000114 l       *ABS*	00000000 VIC_ADDR5
00000118 l       *ABS*	00000000 VIC_ADDR6
0000011c l       *ABS*	00000000 VIC_ADDR7
00000120 l       *ABS*	00000000 VIC_ADDR8
00000124 l       *ABS*	00000000 VIC_ADDR9
00000128 l       *ABS*	00000000 VIC_ADDR10
0000012c l       *ABS*	00000000 VIC_ADDR11
00000130 l       *ABS*	00000000 VIC_ADDR12
00000134 l       *ABS*	00000000 VIC_ADDR13
00000138 l       *ABS*	00000000 VIC_ADDR14
0000013c l       *ABS*	00000000 VIC_ADDR15
00000200 l       *ABS*	00000000 VIC_CNTL
00000200 l       *ABS*	00000000 VIC_CNTL0
00000204 l       *ABS*	00000000 VIC_CNTL1
00000208 l       *ABS*	00000000 VIC_CNTL2
0000020c l       *ABS*	00000000 VIC_CNTL3
00000210 l       *ABS*	00000000 VIC_CNTL4
00000214 l       *ABS*	00000000 VIC_CNTL5
00000218 l       *ABS*	00000000 VIC_CNTL6
0000021c l       *ABS*	00000000 VIC_CNTL7
00000220 l       *ABS*	00000000 VIC_CNTL8
00000224 l       *ABS*	00000000 VIC_CNTL9
00000228 l       *ABS*	00000000 VIC_CNTL10
0000022c l       *ABS*	00000000 VIC_CNTL11
00000230 l       *ABS*	00000000 VIC_CNTL12
00000234 l       *ABS*	00000000 VIC_CNTL13
00000238 l       *ABS*	00000000 VIC_CNTL14
0000023c l       *ABS*	00000000 VIC_CNTL15
00000000 l       *ABS*	00000000 WDOG_INT
00000001 l       *ABS*	00000000 SOFTWARE_INT
00000002 l       *ABS*	00000000 COMM_RX_INT
00000003 l       *ABS*	00000000 COMM_TX_INT
00000004 l       *ABS*	00000000 TIMER1_INT
00000005 l       *ABS*	00000000 TIMER2_INT
00000006 l       *ABS*	00000000 CC_RDY_INT
00000007 l       *ABS*	00000000 CC_RPE_INT
00000008 l       *ABS*	00000000 CC_RFE_INT
00000009 l       *ABS*	00000000 CC_TFL_INT
0000000a l       *ABS*	00000000 CC_TOV_INT
0000000b l       *ABS*	00000000 CC_TMT_INT
0000000c l       *ABS*	00000000 DMA_DONE_INT
0000000d l       *ABS*	00000000 DMA_ERR_INT
0000000e l       *ABS*	00000000 DMA_TO_INT
0000000f l       *ABS*	00000000 RTR_DIAG_INT
00000010 l       *ABS*	00000000 RTR_DUMP_INT
00000011 l       *ABS*	00000000 RTR_ERR_INT
00000012 l       *ABS*	00000000 CPU_INT
00000013 l       *ABS*	00000000 ETH_TX_INT
00000014 l       *ABS*	00000000 ETH_RX_INT
00000015 l       *ABS*	00000000 ETH_PHY_INT
00000016 l       *ABS*	00000000 SLOW_CLK_INT
00000017 l       *ABS*	00000000 CC_TNF_INT
00000018 l       *ABS*	00000000 CC_MC_INT
00000019 l       *ABS*	00000000 CC_P2P_INT
0000001a l       *ABS*	00000000 CC_NN_INT
0000001b l       *ABS*	00000000 CC_FR_INT
0000001c l       *ABS*	00000000 INT0_INT
0000001d l       *ABS*	00000000 INT1_INT
0000001e l       *ABS*	00000000 GPIO8_INT
0000001f l       *ABS*	00000000 GPIO9_INT
30000000 l       *ABS*	00000000 DMA_BASE_UNBUF
40000000 l       *ABS*	00000000 DMA_BASE_BUF
40000000 l       *ABS*	00000000 DMA_BASE
00000004 l       *ABS*	00000000 DMA_ADRS
00000008 l       *ABS*	00000000 DMA_ADRT
0000000c l       *ABS*	00000000 DMA_DESC
00000010 l       *ABS*	00000000 DMA_CTRL
00000014 l       *ABS*	00000000 DMA_STAT
00000018 l       *ABS*	00000000 DMA_GCTL
0000001c l       *ABS*	00000000 DMA_CRCC
00000020 l       *ABS*	00000000 DMA_CRCR
00000024 l       *ABS*	00000000 DMA_TMTV
00000028 l       *ABS*	00000000 DMA_SCTL
00000040 l       *ABS*	00000000 DMA_STAT0
00000044 l       *ABS*	00000000 DMA_STAT1
00000048 l       *ABS*	00000000 DMA_STAT2
0000004c l       *ABS*	00000000 DMA_STAT3
00000050 l       *ABS*	00000000 DMA_STAT4
00000054 l       *ABS*	00000000 DMA_STAT5
00000058 l       *ABS*	00000000 DMA_STAT6
0000005c l       *ABS*	00000000 DMA_STAT7
00000104 l       *ABS*	00000000 DMA_AD2S
00000108 l       *ABS*	00000000 DMA_AD2T
0000010c l       *ABS*	00000000 DMA_DES2
00000180 l       *ABS*	00000000 DMA_CRCT
f0000000 l       *ABS*	00000000 PL340_BASE_UNBUF
e0000000 l       *ABS*	00000000 PL340_BASE_BUF
e0000000 l       *ABS*	00000000 PL340_BASE
00000000 l       *ABS*	00000000 MC_STAT
00000004 l       *ABS*	00000000 MC_CMD
00000008 l       *ABS*	00000000 MC_DIRC
0000000c l       *ABS*	00000000 MC_MCFG
00000010 l       *ABS*	00000000 MC_REFP
00000014 l       *ABS*	00000000 MC_CASL
00000018 l       *ABS*	00000000 MC_DQSS
0000001c l       *ABS*	00000000 MC_MRD
00000020 l       *ABS*	00000000 MC_RAS
00000024 l       *ABS*	00000000 MC_RC
00000028 l       *ABS*	00000000 MC_RCD
0000002c l       *ABS*	00000000 MC_RFC
00000030 l       *ABS*	00000000 MC_RP
00000034 l       *ABS*	00000000 MC_RRD
00000038 l       *ABS*	00000000 MC_WR
0000003c l       *ABS*	00000000 MC_WTR
00000040 l       *ABS*	00000000 MC_XP
00000044 l       *ABS*	00000000 MC_XSR
00000048 l       *ABS*	00000000 MC_ESR
0000004c l       *ABS*	00000000 MC_MCFG2
00000050 l       *ABS*	00000000 MC_MCFG3
00000100 l       *ABS*	00000000 MC_QOS0
00000104 l       *ABS*	00000000 MC_QOS1
00000108 l       *ABS*	00000000 MC_QOS2
0000010c l       *ABS*	00000000 MC_QOS3
00000110 l       *ABS*	00000000 MC_QOS4
00000114 l       *ABS*	00000000 MC_QOS5
00000118 l       *ABS*	00000000 MC_QOS6
0000011c l       *ABS*	00000000 MC_QOS7
00000120 l       *ABS*	00000000 MC_QOS8
00000124 l       *ABS*	00000000 MC_QOS9
00000128 l       *ABS*	00000000 MC_QOS10
0000012c l       *ABS*	00000000 MC_QOS11
00000130 l       *ABS*	00000000 MC_QOS12
00000134 l       *ABS*	00000000 MC_QOS13
00000138 l       *ABS*	00000000 MC_QOS14
0000013c l       *ABS*	00000000 MC_QOS15
00000200 l       *ABS*	00000000 MC_CCFG0
00000204 l       *ABS*	00000000 MC_CCFG1
00000208 l       *ABS*	00000000 MC_CCFG2
0000020c l       *ABS*	00000000 MC_CCFG3
00000300 l       *ABS*	00000000 DLL_STATUS
00000304 l       *ABS*	00000000 DLL_CONFIG0
00000308 l       *ABS*	00000000 DLL_CONFIG1
f1000000 l       *ABS*	00000000 RTR_BASE_UNBUF
e1000000 l       *ABS*	00000000 RTR_BASE_BUF
e1000000 l       *ABS*	00000000 RTR_BASE
00000000 l       *ABS*	00000000 RTR_CONTROL
00000004 l       *ABS*	00000000 RTR_STATUS
00000008 l       *ABS*	00000000 RTR_EHDR
0000000c l       *ABS*	00000000 RTR_EKEY
00000010 l       *ABS*	00000000 RTR_EDAT
00000014 l       *ABS*	00000000 RTR_ESTAT
00000018 l       *ABS*	00000000 RTR_DHDR
0000001c l       *ABS*	00000000 RTR_DKEY
00000020 l       *ABS*	00000000 RTR_DDAT
00000024 l       *ABS*	00000000 RTR_DLINK
00000028 l       *ABS*	00000000 RTR_DSTAT
0000002c l       *ABS*	00000000 RTR_DGEN
00000200 l       *ABS*	00000000 RTR_DGF0
00000204 l       *ABS*	00000000 RTR_DGF1
00000208 l       *ABS*	00000000 RTR_DGF2
0000020c l       *ABS*	00000000 RTR_DGF3
00000210 l       *ABS*	00000000 RTR_DGF4
00000214 l       *ABS*	00000000 RTR_DGF5
00000218 l       *ABS*	00000000 RTR_DGF6
0000021c l       *ABS*	00000000 RTR_DGF7
00000220 l       *ABS*	00000000 RTR_DGF8
00000224 l       *ABS*	00000000 RTR_DGF9
00000228 l       *ABS*	00000000 RTR_DGF10
0000022c l       *ABS*	00000000 RTR_DGF11
00000230 l       *ABS*	00000000 RTR_DGF12
00000234 l       *ABS*	00000000 RTR_DGF13
00000238 l       *ABS*	00000000 RTR_DGF14
0000023c l       *ABS*	00000000 RTR_DGF15
00000300 l       *ABS*	00000000 RTR_DGC0
00000304 l       *ABS*	00000000 RTR_DGC1
00000308 l       *ABS*	00000000 RTR_DGC2
0000030c l       *ABS*	00000000 RTR_DGC3
00000310 l       *ABS*	00000000 RTR_DGC4
00000314 l       *ABS*	00000000 RTR_DGC5
00000318 l       *ABS*	00000000 RTR_DGC6
0000031c l       *ABS*	00000000 RTR_DGC7
00000320 l       *ABS*	00000000 RTR_DGC8
00000324 l       *ABS*	00000000 RTR_DGC9
00000328 l       *ABS*	00000000 RTR_DGC10
0000032c l       *ABS*	00000000 RTR_DGC11
00000330 l       *ABS*	00000000 RTR_DGC12
00000334 l       *ABS*	00000000 RTR_DGC13
00000338 l       *ABS*	00000000 RTR_DGC14
0000033c l       *ABS*	00000000 RTR_DGC15
00000f00 l       *ABS*	00000000 RTR_TST1
00000f04 l       *ABS*	00000000 RTR_TST2
00002000 l       *ABS*	00000000 P2P_TABLE_SIZE
00000400 l       *ABS*	00000000 MC_TABLE_SIZE
00000018 l       *ABS*	00000000 MC_RAM_WIDTH
00ffffff l       *ABS*	00000000 MC_RAM_MASK
00000008 l       *ABS*	00000000 P2P_EPW
00000003 l       *ABS*	00000000 P2P_LOG_EPW
00000007 l       *ABS*	00000000 P2P_EMASK
00000003 l       *ABS*	00000000 P2P_BPE
00000007 l       *ABS*	00000000 P2P_BMASK
00db6db6 l       *ABS*	00000000 P2P_INIT
e1004000 l       *ABS*	00000000 RTR_MCRAM_BASE
e1005000 l       *ABS*	00000000 RTR_MCRAM_TOP
e1008000 l       *ABS*	00000000 RTR_MCKEY_BASE
e1009000 l       *ABS*	00000000 RTR_MCKEY_TOP
e100c000 l       *ABS*	00000000 RTR_MCMASK_BASE
e100d000 l       *ABS*	00000000 RTR_MCMASK_TOP
e1010000 l       *ABS*	00000000 RTR_P2P_BASE
e1018000 l       *ABS*	00000000 RTR_P2P_TOP
00000020 l       *ABS*	00000000 MC_CAM_WIDTH
f2000000 l       *ABS*	00000000 SYSCTL_BASE_UNBUF
e2000000 l       *ABS*	00000000 SYSCTL_BASE_BUF
e2000000 l       *ABS*	00000000 SYSCTL_BASE
5ec00000 l       *ABS*	00000000 SC_CODE
59111012 l       *ABS*	00000000 CHIP_ID_CODE
00000000 l       *ABS*	00000000 SC_CHIP_ID
00000004 l       *ABS*	00000000 SC_CPU_DIS
00000008 l       *ABS*	00000000 SC_SET_IRQ
0000000c l       *ABS*	00000000 SC_CLR_IRQ
00000010 l       *ABS*	00000000 SC_SET_OK
00000010 l       *ABS*	00000000 SC_CPU_OK
00000014 l       *ABS*	00000000 SC_CLR_OK
00000018 l       *ABS*	00000000 SC_SOFT_RST_L
0000001c l       *ABS*	00000000 SC_HARD_RST_L
00000020 l       *ABS*	00000000 SC_SUBS_RST_L
00000024 l       *ABS*	00000000 SC_SOFT_RST_P
00000028 l       *ABS*	00000000 SC_HARD_RST_P
0000002c l       *ABS*	00000000 SC_SUBS_RST_P
00000030 l       *ABS*	00000000 SC_RST_CODE
00000034 l       *ABS*	00000000 SC_MON_ID
00000038 l       *ABS*	00000000 SC_MISC_CTRL
0000003c l       *ABS*	00000000 GPIO_RES
00000040 l       *ABS*	00000000 GPIO_PORT
00000044 l       *ABS*	00000000 GPIO_DIR
00000048 l       *ABS*	00000000 GPIO_SET
0000004c l       *ABS*	00000000 GPIO_CLR
00000048 l       *ABS*	00000000 GPIO_READ
00000050 l       *ABS*	00000000 SC_PLL1
00000054 l       *ABS*	00000000 SC_PLL2
00000058 l       *ABS*	00000000 SC_FLAG
00000058 l       *ABS*	00000000 SC_SETFLAG
0000005c l       *ABS*	00000000 SC_CLRFLAG
00000060 l       *ABS*	00000000 SC_CLKMUX
00000064 l       *ABS*	00000000 SC_SLEEP
00000068 l       *ABS*	00000000 SC_TS0
0000006c l       *ABS*	00000000 SC_TS1
00000070 l       *ABS*	00000000 SC_TS2
00000080 l       *ABS*	00000000 SC_ARB0
00000100 l       *ABS*	00000000 SC_TAS0
00000180 l       *ABS*	00000000 SC_TAC0
00000200 l       *ABS*	00000000 SC_LINK_DIS
00000000 l       *ABS*	00000000 RST_POR
00000001 l       *ABS*	00000000 RST_WDT
00000002 l       *ABS*	00000000 RST_USER
00000003 l       *ABS*	00000000 RST_SW
00000004 l       *ABS*	00000000 RST_WDI
f3000000 l       *ABS*	00000000 WDOG_BASE_UNBUF
e3000000 l       *ABS*	00000000 WDOG_BASE_BUF
e3000000 l       *ABS*	00000000 WDOG_BASE
00000000 l       *ABS*	00000000 WD_LOAD
00000004 l       *ABS*	00000000 WD_COUNT
00000008 l       *ABS*	00000000 WD_CTRL
0000000c l       *ABS*	00000000 WD_INTCLR
00000010 l       *ABS*	00000000 WD_RAWINT
00000014 l       *ABS*	00000000 WD_MSKINT
00000c00 l       *ABS*	00000000 WD_LOCK
1acce551 l       *ABS*	00000000 WD_CODE
00000001 l       *ABS*	00000000 WD_INT_B
00000002 l       *ABS*	00000000 WD_RST_B
f4000000 l       *ABS*	00000000 ETH_BASE_UNBUF
e4000000 l       *ABS*	00000000 ETH_BASE_BUF
e4000000 l       *ABS*	00000000 ETH_BASE
e4000000 l       *ABS*	00000000 ETH_TX_BASE
00000600 l       *ABS*	00000000 ETH_TX_SIZE
e4000600 l       *ABS*	00000000 ETH_TX_TOP
e4004000 l       *ABS*	00000000 ETH_RX_BASE
00000c00 l       *ABS*	00000000 ETH_RX_SIZE
e4004c00 l       *ABS*	00000000 ETH_RX_TOP
e4008000 l       *ABS*	00000000 ETH_RX_DESC_RAM
e400c000 l       *ABS*	00000000 ETH_REGS
00000000 l       *ABS*	00000000 ETH_CONTROL
00000004 l       *ABS*	00000000 ETH_STATUS
00000008 l       *ABS*	00000000 ETH_TX_LEN
0000000c l       *ABS*	00000000 ETH_TX_CMD
00000010 l       *ABS*	00000000 ETH_RX_CMD
00000014 l       *ABS*	00000000 ETH_MAC_LO
00000018 l       *ABS*	00000000 ETH_MAC_HI
0000001c l       *ABS*	00000000 ETH_PHY_CTRL
00000020 l       *ABS*	00000000 ETH_INT_CLR
00000024 l       *ABS*	00000000 ETH_RX_BUF_RP
0000002c l       *ABS*	00000000 ETH_RX_DESC_RP
00000001 l       *ABS*	00000000 ETH_TX_CLR
00000010 l       *ABS*	00000000 ETH_RX_CLR
00000001 l       *ABS*	00000000 PHY_CTRL_NRST
00000002 l       *ABS*	00000000 PHY_CTRL_DIN
00000004 l       *ABS*	00000000 PHY_CTRL_DOUT
00000008 l       *ABS*	00000000 PHY_CTRL_OE
00000010 l       *ABS*	00000000 PHY_CTRL_CLK
00000000 l       *ABS*	00000000 PKT_MC
00400000 l       *ABS*	00000000 PKT_P2P
00800000 l       *ABS*	00000000 PKT_NN
00a00000 l       *ABS*	00000000 PKT_NND
00c00000 l       *ABS*	00000000 PKT_FR
00020000 l       *ABS*	00000000 PKT_PL
00020000 l       *ABS*	00000000 PKT_MC_PL
00420000 l       *ABS*	00000000 PKT_P2P_PL
00820000 l       *ABS*	00000000 PKT_NN_PL
00c20000 l       *ABS*	00000000 PKT_FR_PL
0000000a l       *ABS*	00000000 CLK_XTAL_MHZ
0007011a l       *ABS*	00000000 PLL_260
0007011e l       *ABS*	00000000 PLL_300
00070121 l       *ABS*	00000000 PLL_330
00070128 l       *ABS*	00000000 PLL_400
00000050 l       *ABS*	00000000 PLL_LOCK_TIME
809488a5 l       *ABS*	00000000 PLL_CLK_SEL
00000020 l       *ABS*	00000000 SERIAL_NCS
00000010 l       *ABS*	00000000 SERIAL_CLK
00000008 l       *ABS*	00000000 SERIAL_SI
00000004 l       *ABS*	00000000 SERIAL_SO
00000038 l       *ABS*	00000000 SERIAL_OE
80000000 l       *ABS*	00000000 SDRAM_TQ
40000000 l       *ABS*	00000000 SDRAM_DPD
20000000 l       *ABS*	00000000 SDRAM_HERE
00000001 l       *ABS*	00000000 LED_0
00000010 l       *ABS*	00000000 MODE_USER
00000011 l       *ABS*	00000000 MODE_FIQ
00000012 l       *ABS*	00000000 MODE_IRQ
00000013 l       *ABS*	00000000 MODE_SVC
00000017 l       *ABS*	00000000 MODE_ABT
0000001b l       *ABS*	00000000 MODE_UND
0000001f l       *ABS*	00000000 MODE_SYS
00000020 l       *ABS*	00000000 THUMB_BIT
00000080 l       *ABS*	00000000 IMASK_IRQ
00000040 l       *ABS*	00000000 IMASK_FIQ
000000c0 l       *ABS*	00000000 IMASK_ALL
00000001 l       *ABS*	00000000 SARK_EVENT
00000180 l       *ABS*	00000000 SVC_STACK
00000100 l       *ABS*	00000000 IRQ_STACK
00000100 l       *ABS*	00000000 FIQ_STACK
00000004 l       *ABS*	00000000 NUM_SDP_MSGS
0000000f l       *ABS*	00000000 SARK_SLOT
00000010 l       *ABS*	00000000 INIT_EVENTS
deaddead l       *ABS*	00000000 DEAD_WORD
00000001 l       *ABS*	00000000 APLX_ACOPY
00000002 l       *ABS*	00000000 APLX_RCOPY
00000003 l       *ABS*	00000000 APLX_FILL
00000004 l       *ABS*	00000000 APLX_EXEC
000000ff l       *ABS*	00000000 APLX_END
00000010 l       *ABS*	00000000 APLX_ENTRY_SIZE
00000040 l       *ABS*	00000000 APLX_BUF_SIZE
00007fc0 l       *ABS*	00000000 APLX_BUFFER
000000ff l       *ABS*	00000000 TAG_NONE
00000000 l       *ABS*	00000000 TAG_HOST
00000001 l       *ABS*	00000000 RTR_ALLOC_FIRST
00000400 l       *ABS*	00000000 RTR_ALLOC_LAST
000003ff l       *ABS*	00000000 RTR_ALLOC_MAX
00000001 l       *ABS*	00000000 ALLOC_LOCK
00000002 l       *ABS*	00000000 ALLOC_ID
00000005 l       *ABS*	00000000 A_LOCK_SEMA
00000001 l       *ABS*	00000000 A_RTE_RESET
00000002 l       *ABS*	00000000 A_RTE_UNDEF
00000003 l       *ABS*	00000000 A_RTE_SVC
00000004 l       *ABS*	00000000 A_RTE_PABT
00000005 l       *ABS*	00000000 A_RTE_DABT
00000006 l       *ABS*	00000000 A_RTE_IRQ
00000007 l       *ABS*	00000000 A_RTE_FIQ
00000008 l       *ABS*	00000000 A_RTE_VIC
00000002 l       *ABS*	00000000 A_STATE_RTE
00000006 l       *ABS*	00000000 EVENT_COUNT
00000000 l       *ABS*	00000000 CMD_VER
00000001 l       *ABS*	00000000 CMD_RUN
00000002 l       *ABS*	00000000 CMD_READ
00000003 l       *ABS*	00000000 CMD_WRITE
00000004 l       *ABS*	00000000 CMD_APLX
00000005 l       *ABS*	00000000 CMD_FILL
00000010 l       *ABS*	00000000 CMD_REMAP
00000011 l       *ABS*	00000000 CMD_LINK_READ
00000012 l       *ABS*	00000000 CMD_LINK_WRITE
00000013 l       *ABS*	00000000 CMD_AR
00000014 l       *ABS*	00000000 CMD_NNP
00000015 l       *ABS*	00000000 CMD_P2PC
00000016 l       *ABS*	00000000 CMD_SIG
00000017 l       *ABS*	00000000 CMD_FFD
00000018 l       *ABS*	00000000 CMD_AS
00000019 l       *ABS*	00000000 CMD_LED
0000001a l       *ABS*	00000000 CMD_IPTAG
0000001b l       *ABS*	00000000 CMD_SROM
0000001c l       *ABS*	00000000 CMD_ALLOC
0000001d l       *ABS*	00000000 CMD_RTR
00000040 l       *ABS*	00000000 CMD_TUBE
00000080 l       *ABS*	00000000 RC_OK
00000081 l       *ABS*	00000000 RC_LEN
00000082 l       *ABS*	00000000 RC_SUM
00000083 l       *ABS*	00000000 RC_CMD
00000084 l       *ABS*	00000000 RC_ARG
00000085 l       *ABS*	00000000 RC_PORT
00000086 l       *ABS*	00000000 RC_TIMEOUT
00000087 l       *ABS*	00000000 RC_ROUTE
00000088 l       *ABS*	00000000 RC_CPU
00000089 l       *ABS*	00000000 RC_DEAD
0000008a l       *ABS*	00000000 RC_BUF
0000008b l       *ABS*	00000000 RC_P2P_NOREPLY
0000008c l       *ABS*	00000000 RC_P2P_REJECT
0000008d l       *ABS*	00000000 RC_P2P_BUSY
0000008e l       *ABS*	00000000 RC_P2P_TIMEOUT
0000008f l       *ABS*	00000000 RC_PKT_TX
00000000 l       *ABS*	00000000 TYPE_BYTE
00000001 l       *ABS*	00000000 TYPE_HALF
00000002 l       *ABS*	00000000 TYPE_WORD
00000005 l       *ABS*	00000000 PORT_SHIFT
000000e0 l       *ABS*	00000000 PORT_MASK
0000001f l       *ABS*	00000000 CPU_MASK
000000ff l       *ABS*	00000000 PORT_ETH
00000100 l       *ABS*	00000000 SDP_BUF_SIZE
00000080 l       *ABS*	00000000 VCPU_SIZE
0000002c l       *ABS*	00000000 VCPU_RT_CODE
0000002d l       *ABS*	00000000 VCPU_CPU_FLAGS
0000002e l       *ABS*	00000000 VCPU_CPU_STATE
0000002f l       *ABS*	00000000 VCPU_APP_ID
0000001c l       *ABS*	00000000 SARK_MSG_INT
0000001d l       *ABS*	00000000 SARK_SIG_INT
00000000 l       *ABS*	00000000 SARK_VIRT_CPU
00000008 l       *ABS*	00000000 SARK_RANDOM
00000030 l       *ABS*	00000000 SARK_CPU_CLK
00000020 l       *ABS*	00000000 SV_SSIZE
00000060 l       *ABS*	00000000 SV_USIZE
00000080 l       *ABS*	00000000 SV_ISIZE
00000020 l       *ABS*	00000000 SV_VSIZE
00000040 l       *ABS*	00000000 SV_RSIZE
00001000 l       *ABS*	00000000 SV_SIZE
e5007fe0 l       *ABS*	00000000 SV_SROM
e5007f80 l       *ABS*	00000000 SV_UBASE
e5007f00 l       *ABS*	00000000 SV_IBASE
e5007f00 l       *ABS*	00000000 SV_SV
00000100 l       *ABS*	00000000 SYS_BOOT
e5007000 l       *ABS*	00000000 SYS_USER_TOP
e5000100 l       *ABS*	00000000 SYS_USER_BASE
e5007ee0 l       *ABS*	00000000 SV_VECTORS
e5007ea0 l       *ABS*	00000000 SV_RANDOM
e5007000 l       *ABS*	00000000 SV_VCPU
e5007900 l       *ABS*	00000000 SV_SPARE
000005a0 l       *ABS*	00000000 SPARE_SIZE
e5007fe0 l       *ABS*	00000000 SROM_FLAG_BASE
e5007f80 l       *ABS*	00000000 STATUS_MAP_BASE
e5007ee0 l       *ABS*	00000000 RST_BLOCK_BASE
00008000 l       *ABS*	00000000 SRF_PRESENT
000000f0 l       *ABS*	00000000 SRF_HW_VER
00000008 l       *ABS*	00000000 SRF_PHY_INIT
00000004 l       *ABS*	00000000 SRF_PHY_RST
00000002 l       *ABS*	00000000 SRF_PHY_WAIT
00000001 l       *ABS*	00000000 SRF_ETH
00000000 l       *ABS*	00000000 SRF_NONE
00000020 l       RO_DATA	00000000 reset_vec
00000004 l       RO_DATA	00000000 undef
00000024 l       RO_DATA	00000000 undef_vec
00000028 l       RO_DATA	00000000 svc_vec
0000002c l       RO_DATA	00000000 pabt_vec
00000030 l       RO_DATA	00000000 dabt_vec
0000003c l       RO_DATA	00000000 fiq_vec
00000078 l       RO_DATA	00000000 reset_entry
000000d8 l       RO_DATA	00000000 undef_error
000000e0 l       RO_DATA	00000000 svc_error
000000e8 l       RO_DATA	00000000 pabt_error
000000f0 l       RO_DATA	00000000 dabt_error
00000034 l       RO_DATA	00000000 aplx_proc
00000038 l       RO_DATA	00000000 irq_vec
000000f8 l       RO_DATA	00000000 irq_error
00000100 l       RO_DATA	00000000 fiq_error
00000040 l       RO_DATA	00000000 svc_stack
00000042 l       RO_DATA	00000000 irq_stack
00000044 l       RO_DATA	00000000 fiq_stack
00000046 l       RO_DATA	00000000 stack_size
00000048 l       RO_DATA	00000000 code_top
0000004c l       RO_DATA	00000000 heap_base
00000050 l       RO_DATA	00000000 stack_top
00000054 l       RO_DATA	00000000 stack_fill
00000058 l       RO_DATA	00000000 num_msgs
00000059 l       RO_DATA	00000000 sark_slot
0000005a l       RO_DATA	00000000 num_events
0000005b l       RO_DATA	00000000 api
0000005c l       RO_DATA	00000000 app_id
0000005d l       RO_DATA	00000000 app_flags
0000005e l       RO_DATA	00000000 __PAD
00000060 l       RO_DATA	00000000 event_vec
000000d0 l       RO_DATA	00000000 reset_error
00000114 l       RO_DATA	00000000 exc_error
00000138 l       RO_DATA	00000000 cc_error
000001ec l       RO_DATA	00000000 lg1
00000228 l       RO_DATA	00000000 ws1
00000288 l       RO_DATA	00000000 wc2
00000270 l       RO_DATA	00000000 wc1
00000368 l       RO_DATA	00000000 aplx_buffer
0000036c l       RO_DATA	00000000 aplx_loader
00000358 l       RO_DATA	00000000 aplx_l0
00000384 l       RO_DATA	00000000 aplx_copy
00000380 l       RO_DATA	00000000 aplx_rcopy
00000392 l       RO_DATA	00000000 aplx_fill
000003a2 l       RO_DATA	00000000 aplx_exec
00000398 l       RO_DATA	00000000 aplx_l1
00000000 l    df *ABS*	00000000 sark_base.c
00000000 l    df *ABS*	00000000 sark_event.c
00000000 l    df *ABS*	00000000 sark_timer.c
00000000 l    df *ABS*	00000000 sark_hw.c
00000000 l    df *ABS*	00000000 sark_isr.c
00000000 l    df *ABS*	00000000 sark_alloc.c
00000000 l    df *ABS*	00000000 sark_io.c
00000c28 l     F RO_DATA	00000040 io_buf_init
00000d5c l     F RO_DATA	000000c2 io_put_fixed
00400008 l     O ZI_DATA	00000004 io_msg
00001a83 l     O RO_DATA	00000011 hex
0040000c l     O ZI_DATA	00000004 io_buf
00400010 l     O ZI_DATA	00000004 buf_ptr
00400014 l     O ZI_DATA	00000004 sp_ptr
00000000 l    df *ABS*	00000000 sark_pkt.c
00000000 l    df *ABS*	00000000 
00000000 l    df *ABS*	00000000 hello.c
00000000 l    df *ABS*	00000000 spin1_api.c
00400018 l     O ZI_DATA	00000004 warnings
00400000 l     O RW_DATA	00000004 dma_id
0040001c l     O ZI_DATA	00000004 fullq
00400020 l     O ZI_DATA	00000004 timer_tick
00400024 l     O ZI_DATA	00000004 pfull
00400028 l     O ZI_DATA	00000004 dfull
00400030 l     O ZI_DATA	00000004 exit_val
00400034 l     O ZI_DATA	00000320 task_queue
00400354 l     O ZI_DATA	00000004 run
00000000 l    df *ABS*	00000000 spin1_isr.c
00000000 l    df *ABS*	00000000 sark_build.c
00000000 l    df *ABS*	00000000 
00000040 l       *ABS*	00000000 RO_FROM
00000010 l       *ABS*	00000000 APLX_ENTRY
00001c64 l       *ABS*	00000000 RW_FROM
00000000 l       *UND*	00000000 __deregister_frame_info
00000000 l       *UND*	00000000 _ITM_registerTMCloneTable
00400000 l       *ABS*	00000000 DTCM_BASE
00400000 l       *ABS*	00000000 RW_BASE
00000008 l       *ABS*	00000000 RW_LENGTH
00000040 l       *ABS*	00000000 APLX_SIZE
00000000 l       *UND*	00000000 _ITM_deregisterTMCloneTable
00400008 l       *ABS*	00000000 ZI_BASE
00000000 l       *ABS*	00000000 RO_BASE
00000000 l       *ABS*	00000000 ITCM_BASE
00000000 l       *UND*	00000000 _Jv_RegisterClasses
00000000 l       *UND*	00000000 __register_frame_info
000006b0 l       *ABS*	00000000 ZI_LENGTH
0040042c g     O ZI_DATA	00000004 old_vector
00001424 g     F RO_DATA	000000f0 spin1_start
000001d8 g     F RO_DATA	00000000 sark_lock_get
0000157c g     F RO_DATA	0000002c sark_pre_main
0000049c g     F RO_DATA	00000034 sark_shmsg_get
000001a8 g     F RO_DATA	00000000 spin1_int_enable
00000800 g       *ABS*	00000000 STACK_SIZE
0000033e g     F RO_DATA	00000000 sark_bx
00001954 g     F RO_DATA	0000001c buffer_full_isr
00000248 g     F RO_DATA	00000000 sark_msg_cpy
00000a34 g     F RO_DATA	0000003c event_alloc
000012f0 g     F RO_DATA	0000006c clean_up
0000042c g     F RO_DATA	0000001e sark_block_init
00001804 g     F RO_DATA	00000058 timer1_isr
00000b08 g     F RO_DATA	00000028 sark_fiq_han
0000047c g     F RO_DATA	00000020 sark_msg_free
0000189c g     F RO_DATA	00000068 soft_int_isr
000010d4 g     F RO_DATA	00000028 configure_dma_controller
000003a8 g     F RO_DATA	00000054 c_main
000007e8 g     F RO_DATA	000001ac sark_int
0000112c g     F RO_DATA	00000148 configure_vic
000002dc g     F RO_DATA	00000000 sark_int_han
00000994 g     F RO_DATA	0000005c event_wait
000007d4 g     F RO_DATA	00000012 sark_wait
000001c8 g     F RO_DATA	00000000 spin1_mode_restore
000007c4 g     F RO_DATA	00000010 sark_cmd_fill
00000a70 g     F RO_DATA	00000050 sark_vic_init
0000178c g     F RO_DATA	00000078 dma_done_fiqsr
0000016c g     F RO_DATA	00000000 cpu_shutdown
000001c8 g     F RO_DATA	00000000 cpu_int_restore
00400430 g     O ZI_DATA	0000002c diagnostics
00410000 g       *ABS*	00000000 STACK_TOP
004006b8 g       ZI_DATA	00000000 HEAP_BASE
00000b30 g     F RO_DATA	000000c8 sark_xalloc
0040045c g     O ZI_DATA	00000004 old_enable
000010fc g     F RO_DATA	00000030 configure_timer1
00000340 g     F RO_DATA	00000000 __gnu_thumb1_case_uqi
00400460 g     O ZI_DATA	00000004 user_arg1
000004d0 g     F RO_DATA	00000024 sark_shmsg_free
00000310 g     F RO_DATA	00000000 schedule
00001674 g     F RO_DATA	0000008c cc_tx_empty_isr
0000012c g       RO_DATA	00000000 rt_error
0000163c g     F RO_DATA	00000038 cc_rx_ready_fiqsr
00000408 g     F RO_DATA	00000010 sark_cpu_state
0040002c g     O ZI_DATA	00000001 user_pending
000015a8 g     F RO_DATA	0000000a sark_post_main
00000000 g       RO_DATA	00000000 cpu_reset
000002ac g     F RO_DATA	00000000 sark_div10
00000108 g       RO_DATA	00000000 vic_error
000019c0 g     O RO_DATA	00000010 build_name
0000033c  w    F RO_DATA	00000000 sark_config
000009f0 g     F RO_DATA	0000002c event_pause
000019d0 g     O RO_DATA	00000004 build_date
000001fc g     F RO_DATA	00000000 sark_lock_free
00000bf8 g     F RO_DATA	00000018 sark_alloc
00001904 g     F RO_DATA	00000050 soft_int_fiqsr
00001274 g     F RO_DATA	0000007c dispatch
00000190 g     F RO_DATA	00000000 cpu_init_mode
00000258 g     F RO_DATA	00000000 sark_word_cpy
0000017c g     F RO_DATA	00000000 cpu_sleep
00400004 g     O RW_DATA	00000004 fiq_event
00400464 g     O ZI_DATA	00000001 leadAp
00400358 g     O ZI_DATA	0000003c sark
000005f0 g     F RO_DATA	000000c4 sark_msg_send
000001d0 g     F RO_DATA	00000000 spin1_wfi
000006b4 g     F RO_DATA	00000040 sark_cmd_ver
000001d0 g     F RO_DATA	00000000 cpu_wfi
00000a1c g     F RO_DATA	00000018 event_stop
000001b8 g     F RO_DATA	00000000 cpu_int_disable
00000ac0 g     F RO_DATA	00000048 sark_vic_set
00400468 g     O ZI_DATA	00000004 thrown
00000c10 g     F RO_DATA	00000018 sark_heap_init
00400394 g     O ZI_DATA	00000098 event
0000075a g     F RO_DATA	0000006a sark_cmd_write
000015b4 g     F RO_DATA	00000088 cc_rx_ready_isr
000004f4  w    F RO_DATA	000000fc sark_init
000003fc  w    F RO_DATA	0000000c rte_handler
00000350 g     F RO_DATA	00000000 sark_aplx
0000135c g     F RO_DATA	0000006c report_debug
00000e20 g     F RO_DATA	000002b4 io_printf
0040046c g     O ZI_DATA	00000148 dma_queue
00000224 g     F RO_DATA	00000000 sark_word_set
004005b4 g     O ZI_DATA	00000004 old_select
000013c8 g     F RO_DATA	0000005c report_warns
00001700 g     F RO_DATA	0000008c dma_done_isr
004005b8 g     O ZI_DATA	00000004 ticks
0000030c g     F RO_DATA	00000000 null_int_han
00001514 g     F RO_DATA	00000068 schedule_sysmode
0000185c g     F RO_DATA	00000040 timer1_fiqsr
00000210 g     F RO_DATA	00000000 sark_str_cpy
000001a8 g     F RO_DATA	00000000 cpu_int_enable
004005bc g     O ZI_DATA	00000004 user_arg0
00000418 g     F RO_DATA	00000014 sark_app_lead
004005c0 g     O ZI_DATA	00000030 callback
00000c68 g     F RO_DATA	000000f4 io_put_char
000001b8 g     F RO_DATA	00000000 spin1_int_disable
000006f4 g     F RO_DATA	00000066 sark_cmd_read
00001c34 g       *ABS*	00000000 RO_LENGTH
0000044c g     F RO_DATA	00000030 sark_msg_get
004005f0 g     O ZI_DATA	000000c8 tx_packet_queue



Disassembly of section RO_DATA:

00000000 <cpu_reset>:
       0:	e59ff018 	ldr	pc, [pc, #24]	; 20 <reset_vec>

00000004 <undef>:
       4:	e59ff018 	ldr	pc, [pc, #24]	; 24 <undef_vec>
       8:	e59ff018 	ldr	pc, [pc, #24]	; 28 <svc_vec>
       c:	e59ff018 	ldr	pc, [pc, #24]	; 2c <pabt_vec>
      10:	e59ff018 	ldr	pc, [pc, #24]	; 30 <dabt_vec>
      14:	ebfffffa 	bl	4 <undef>
      18:	e51ffff0 	ldr	pc, [pc, #-4080]	; fffff030 <ROM_TOP+0x9ff7030>
      1c:	e59ff018 	ldr	pc, [pc, #24]	; 3c <fiq_vec>

00000020 <reset_vec>:
      20:	00000078 	.word	0x00000078

00000024 <undef_vec>:
      24:	000000d8 	.word	0x000000d8

00000028 <svc_vec>:
      28:	000000e0 	.word	0x000000e0

0000002c <pabt_vec>:
      2c:	000000e8 	.word	0x000000e8

00000030 <dabt_vec>:
      30:	000000f0 	.word	0x000000f0

00000034 <aplx_proc>:
      34:	00000351 	.word	0x00000351

00000038 <irq_vec>:
      38:	000000f8 	.word	0x000000f8

0000003c <fiq_vec>:
      3c:	00000100 	.word	0x00000100

00000040 <svc_stack>:
      40:	0060      	.short	0x0060

00000042 <irq_stack>:
      42:	0040      	.short	0x0040

00000044 <fiq_stack>:
      44:	0040      	.short	0x0040

00000046 <stack_size>:
      46:	0800      	.short	0x0800

00000048 <code_top>:
      48:	00001c34 	.word	0x00001c34

0000004c <heap_base>:
      4c:	004006b8 	.word	0x004006b8

00000050 <stack_top>:
      50:	00410000 	.word	0x00410000

00000054 <stack_fill>:
      54:	deaddead 	.word	0xdeaddead

00000058 <num_msgs>:
      58:	04          	.byte	0x04

00000059 <sark_slot>:
      59:	0f          	.byte	0x0f

0000005a <num_events>:
      5a:	10          	.byte	0x10

0000005b <api>:
	...

0000005c <app_id>:
	...

0000005d <app_flags>:
	...

0000005e <__PAD>:
	...

00000060 <event_vec>:
	...

00000078 <reset_entry>:
      78:	e24f1060 	sub	r1, pc, #96	; 0x60
      7c:	e1c103bc 	strh	r0, [r1, #60]	; 0x3c
      80:	e28f0048 	add	r0, pc, #72	; 0x48
      84:	e5810000 	str	r0, [r1]
      88:	e59f00f4 	ldr	r0, [pc, #244]	; 184 <DMA_CRCT+0x4>
      8c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
      90:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
      94:	e3a0d902 	mov	sp, #32768	; 0x8000
      98:	fa0000a7 	blx	33c <sark_config>
      9c:	e51fd054 	ldr	sp, [pc, #-84]	; 50 <stack_top>
      a0:	e15f26b2 	ldrh	r2, [pc, #-98]	; 46 <stack_size>
      a4:	e51f1058 	ldr	r1, [pc, #-88]	; 54 <stack_fill>
      a8:	e04d0002 	sub	r0, sp, r2
      ac:	eb00005c 	bl	224 <sark_word_set>
      b0:	e1a0000d 	mov	r0, sp
      b4:	fa00010e 	blx	4f4 <sark_init>
      b8:	e121f000 	msr	CPSR_c, r0
      bc:	fa0001c4 	blx	7d4 <sark_wait>
      c0:	fa00052d 	blx	157c <sark_pre_main>
      c4:	eb0000b7 	bl	3a8 <c_main>
      c8:	fa000536 	blx	15a8 <sark_post_main>
      cc:	eb00002a 	bl	17c <cpu_sleep>

000000d0 <reset_error>:
      d0:	e3a00001 	mov	r0, #1
      d4:	ea000014 	b	12c <rt_error>

000000d8 <undef_error>:
      d8:	e3a0b002 	mov	fp, #2
      dc:	ea00000c 	b	114 <exc_error>

000000e0 <svc_error>:
      e0:	e3a0b003 	mov	fp, #3
      e4:	ea00000a 	b	114 <exc_error>

000000e8 <pabt_error>:
      e8:	e3a0b004 	mov	fp, #4
      ec:	ea000008 	b	114 <exc_error>

000000f0 <dabt_error>:
      f0:	e3a0b005 	mov	fp, #5
      f4:	ea000006 	b	114 <exc_error>

000000f8 <irq_error>:
      f8:	e3a0b006 	mov	fp, #6
      fc:	ea000004 	b	114 <exc_error>

00000100 <fiq_error>:
     100:	e3a0b007 	mov	fp, #7
     104:	ea000002 	b	114 <exc_error>

00000108 <vic_error>:
     108:	e3a0b008 	mov	fp, #8
     10c:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     110:	e5900030 	ldr	r0, [r0, #48]	; 0x30

00000114 <exc_error>:
     114:	e1a0a00e 	mov	sl, lr
     118:	e14f8000 	mrs	r8, SPSR
     11c:	e38890c0 	orr	r9, r8, #192	; 0xc0
     120:	e3c99020 	bic	r9, r9, #32
     124:	e12ff009 	msr	CPSR_fsxc, r9
     128:	ea000002 	b	138 <cc_error>

0000012c <rt_error>:
     12c:	e1a0b000 	mov	fp, r0
     130:	e10f8000 	mrs	r8, CPSR
     134:	e1a0a00e 	mov	sl, lr

00000138 <cc_error>:
     138:	e59fc048 	ldr	ip, [pc, #72]	; 188 <DMA_CRCT+0x8>
     13c:	e59cc000 	ldr	ip, [ip]
     140:	e3a09080 	mov	r9, #128	; 0x80
     144:	e59fe040 	ldr	lr, [pc, #64]	; 18c <DMA_CRCT+0xc>
     148:	e02ee99c 	mla	lr, ip, r9, lr
     14c:	e1a0900d 	mov	r9, sp
     150:	e88e07ff 	stm	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl}
     154:	e5ceb02c 	strb	fp, [lr, #44]	; 0x2c
     158:	e3a08002 	mov	r8, #2
     15c:	e5ce802e 	strb	r8, [lr, #46]	; 0x2e
     160:	e1a0000b 	mov	r0, fp
     164:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
     168:	fa0000a3 	blx	3fc <rte_handler>

0000016c <cpu_shutdown>:
     16c:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
     170:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     174:	e3e01000 	mvn	r1, #0
     178:	e5801014 	str	r1, [r0, #20]

0000017c <cpu_sleep>:
     17c:	ee070f90 	mcr	15, 0, r0, cr7, cr0, {4}
     180:	eafffffd 	b	17c <cpu_sleep>
     184:	00001f7e 	.word	0x00001f7e
     188:	00400358 	.word	0x00400358
     18c:	e5007000 	.word	0xe5007000

00000190 <cpu_init_mode>:
     190:	e10f3000 	mrs	r3, CPSR
     194:	e121f001 	msr	CPSR_c, r1
     198:	e1a0d000 	mov	sp, r0
     19c:	e12ff003 	msr	CPSR_fsxc, r3
     1a0:	e0400102 	sub	r0, r0, r2, lsl #2
     1a4:	e12fff1e 	bx	lr

000001a8 <cpu_int_enable>:
     1a8:	e10f0000 	mrs	r0, CPSR
     1ac:	e3c010c0 	bic	r1, r0, #192	; 0xc0
     1b0:	e121f001 	msr	CPSR_c, r1
     1b4:	e12fff1e 	bx	lr

000001b8 <cpu_int_disable>:
     1b8:	e10f0000 	mrs	r0, CPSR
     1bc:	e38010c0 	orr	r1, r0, #192	; 0xc0
     1c0:	e121f001 	msr	CPSR_c, r1
     1c4:	e12fff1e 	bx	lr

000001c8 <cpu_int_restore>:
     1c8:	e12ff000 	msr	CPSR_fsxc, r0
     1cc:	e12fff1e 	bx	lr

000001d0 <cpu_wfi>:
     1d0:	ee070f90 	mcr	15, 0, r0, cr7, cr0, {4}
     1d4:	e12fff1e 	bx	lr

000001d8 <sark_lock_get>:
     1d8:	e3a0c4e2 	mov	ip, #-503316480	; 0xe2000000
     1dc:	e08cc100 	add	ip, ip, r0, lsl #2
     1e0:	e10f0000 	mrs	r0, CPSR
     1e4:	e38010c0 	orr	r1, r0, #192	; 0xc0
     1e8:	e121f001 	msr	CPSR_c, r1

000001ec <lg1>:
     1ec:	e59c1100 	ldr	r1, [ip, #256]	; 0x100
     1f0:	e3110102 	tst	r1, #-2147483648	; 0x80000000
     1f4:	1afffffc 	bne	1ec <lg1>
     1f8:	e12fff1e 	bx	lr

000001fc <sark_lock_free>:
     1fc:	e3a0c4e2 	mov	ip, #-503316480	; 0xe2000000
     200:	e08c1101 	add	r1, ip, r1, lsl #2
     204:	e5911180 	ldr	r1, [r1, #384]	; 0x180
     208:	e121f000 	msr	CPSR_c, r0
     20c:	e12fff1e 	bx	lr

00000210 <sark_str_cpy>:
     210:	e4d12001 	ldrb	r2, [r1], #1
     214:	e3520000 	cmp	r2, #0
     218:	e4c02001 	strb	r2, [r0], #1
     21c:	1afffffb 	bne	210 <sark_str_cpy>
     220:	e12fff1e 	bx	lr

00000224 <sark_word_set>:
     224:	e1a03001 	mov	r3, r1

00000228 <ws1>:
     228:	e2522010 	subs	r2, r2, #16
     22c:	28a0000a 	stmiacs	r0!, {r1, r3}
     230:	28a0000a 	stmiacs	r0!, {r1, r3}
     234:	2afffffb 	bcs	228 <ws1>
     238:	e1b02e82 	lsls	r2, r2, #29
     23c:	28a0000a 	stmiacs	r0!, {r1, r3}
     240:	48a00002 	stmiami	r0!, {r1}
     244:	e12fff1e 	bx	lr

00000248 <sark_msg_cpy>:
     248:	e2800004 	add	r0, r0, #4
     24c:	e2811004 	add	r1, r1, #4
     250:	e1d120b0 	ldrh	r2, [r1]
     254:	e2822004 	add	r2, r2, #4

00000258 <sark_word_cpy>:
     258:	e3120003 	tst	r2, #3
     25c:	13c22003 	bicne	r2, r2, #3
     260:	12822004 	addne	r2, r2, #4
     264:	e92d4010 	push	{r4, lr}
     268:	e2522020 	subs	r2, r2, #32
     26c:	3a000005 	bcc	288 <wc2>

00000270 <wc1>:
     270:	e8b15018 	ldm	r1!, {r3, r4, ip, lr}
     274:	e8a05018 	stmia	r0!, {r3, r4, ip, lr}
     278:	e8b15018 	ldm	r1!, {r3, r4, ip, lr}
     27c:	e8a05018 	stmia	r0!, {r3, r4, ip, lr}
     280:	e2522020 	subs	r2, r2, #32
     284:	2afffff9 	bcs	270 <wc1>

00000288 <wc2>:
     288:	e1b0ce02 	lsls	ip, r2, #28
     28c:	28b15018 	ldmcs	r1!, {r3, r4, ip, lr}
     290:	28a05018 	stmiacs	r0!, {r3, r4, ip, lr}
     294:	48b10018 	ldmmi	r1!, {r3, r4}
     298:	48a00018 	stmiami	r0!, {r3, r4}
     29c:	e1b0cf02 	lsls	ip, r2, #30
     2a0:	24913004 	ldrcs	r3, [r1], #4
     2a4:	24803004 	strcs	r3, [r0], #4
     2a8:	e8bd8010 	pop	{r4, pc}

000002ac <sark_div10>:
     2ac:	e241200a 	sub	r2, r1, #10
     2b0:	e0411121 	sub	r1, r1, r1, lsr #2
     2b4:	e0811221 	add	r1, r1, r1, lsr #4
     2b8:	e0811421 	add	r1, r1, r1, lsr #8
     2bc:	e0811821 	add	r1, r1, r1, lsr #16
     2c0:	e1a011a1 	lsr	r1, r1, #3
     2c4:	e0813101 	add	r3, r1, r1, lsl #2
     2c8:	e0522083 	subs	r2, r2, r3, lsl #1
     2cc:	52811001 	addpl	r1, r1, #1
     2d0:	4282200a 	addmi	r2, r2, #10
     2d4:	e8800006 	stm	r0, {r1, r2}
     2d8:	e12fff1e 	bx	lr

000002dc <sark_int_han>:
     2dc:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
     2e0:	e24e0004 	sub	r0, lr, #4
     2e4:	e14fc000 	mrs	ip, SPSR
     2e8:	e321f01f 	msr	CPSR_c, #31
     2ec:	e92d5000 	push	{ip, lr}
     2f0:	fa00013c 	blx	7e8 <sark_int>
     2f4:	e8bd5000 	pop	{ip, lr}
     2f8:	e321f092 	msr	CPSR_c, #146	; 0x92
     2fc:	e16ff00c 	msr	SPSR_fsxc, ip
     300:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     304:	e5800030 	str	r0, [r0, #48]	; 0x30
     308:	e8bd500f 	pop	{r0, r1, r2, r3, ip, lr}

0000030c <null_int_han>:
     30c:	e25ef004 	subs	pc, lr, #4

00000310 <schedule>:
     310:	e92d5000 	push	{ip, lr}
     314:	e10fc000 	mrs	ip, CPSR
     318:	e3cce01f 	bic	lr, ip, #31
     31c:	e38ee01f 	orr	lr, lr, #31
     320:	e121f00e 	msr	CPSR_c, lr
     324:	e92d5000 	push	{ip, lr}
     328:	fa000479 	blx	1514 <schedule_sysmode>
     32c:	e8bd5000 	pop	{ip, lr}
     330:	e121f00c 	msr	CPSR_c, ip
     334:	e8bd5000 	pop	{ip, lr}
     338:	e12fff1e 	bx	lr

0000033c <sark_config>:
     33c:	4770      	bx	lr

0000033e <sark_bx>:
     33e:	4700      	bx	r0

00000340 <__gnu_thumb1_case_uqi>:
     340:	468c      	mov	ip, r1
     342:	4671      	mov	r1, lr
     344:	3901      	subs	r1, #1
     346:	5c09      	ldrb	r1, [r1, r0]
     348:	0049      	lsls	r1, r1, #1
     34a:	448e      	add	lr, r1
     34c:	4661      	mov	r1, ip
     34e:	4770      	bx	lr

00000350 <sark_aplx>:
     350:	b5f2      	push	{r1, r4, r5, r6, r7, lr}
     352:	4905      	ldr	r1, [pc, #20]	; (368 <aplx_buffer>)
     354:	a605      	add	r6, pc, #20	; (adr r6, 36c <aplx_loader>)
     356:	2740      	movs	r7, #64	; 0x40

00000358 <aplx_l0>:
     358:	ce3c      	ldmia	r6!, {r2, r3, r4, r5}
     35a:	c13c      	stmia	r1!, {r2, r3, r4, r5}
     35c:	3f10      	subs	r7, #16
     35e:	d1fb      	bne.n	358 <aplx_l0>
     360:	1c04      	adds	r4, r0, #0
     362:	393f      	subs	r1, #63	; 0x3f
     364:	4708      	bx	r1
	...

00000368 <aplx_buffer>:
     368:	00007fc0 	.word	0x00007fc0

0000036c <aplx_loader>:
     36c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
     36e:	2801      	cmp	r0, #1
     370:	d008      	beq.n	384 <aplx_copy>
     372:	2802      	cmp	r0, #2
     374:	d004      	beq.n	380 <aplx_rcopy>
     376:	2803      	cmp	r0, #3
     378:	d00b      	beq.n	392 <aplx_fill>
     37a:	2804      	cmp	r0, #4
     37c:	d011      	beq.n	3a2 <aplx_exec>
     37e:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

00000380 <aplx_rcopy>:
     380:	1912      	adds	r2, r2, r4
     382:	3a10      	subs	r2, #16

00000384 <aplx_copy>:
     384:	cae1      	ldmia	r2!, {r0, r5, r6, r7}
     386:	c1e1      	stmia	r1!, {r0, r5, r6, r7}
     388:	cae1      	ldmia	r2!, {r0, r5, r6, r7}
     38a:	c1e1      	stmia	r1!, {r0, r5, r6, r7}
     38c:	3b20      	subs	r3, #32
     38e:	d8f9      	bhi.n	384 <aplx_copy>
     390:	e7ec      	b.n	36c <aplx_loader>

00000392 <aplx_fill>:
     392:	1c1d      	adds	r5, r3, #0
     394:	1c1e      	adds	r6, r3, #0
     396:	1c1f      	adds	r7, r3, #0

00000398 <aplx_l1>:
     398:	c1e8      	stmia	r1!, {r3, r5, r6, r7}
     39a:	c1e8      	stmia	r1!, {r3, r5, r6, r7}
     39c:	3a20      	subs	r2, #32
     39e:	d8fb      	bhi.n	398 <aplx_l1>
     3a0:	e7e4      	b.n	36c <aplx_loader>

000003a2 <aplx_exec>:
     3a2:	9800      	ldr	r0, [sp, #0]
     3a4:	4788      	blx	r1
     3a6:	e7e1      	b.n	36c <aplx_loader>

000003a8 <c_main>:
     3a8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
     3ac:	e3a00000 	mov	r0, #0
     3b0:	e24dd044 	sub	sp, sp, #68	; 0x44
     3b4:	fa00041a 	blx	1424 <spin1_start>
     3b8:	e3a00000 	mov	r0, #0
     3bc:	e59f102c 	ldr	r1, [pc, #44]	; 3f0 <c_main+0x48>
     3c0:	fa000296 	blx	e20 <io_printf>
     3c4:	e3a00002 	mov	r0, #2
     3c8:	e59f1024 	ldr	r1, [pc, #36]	; 3f4 <c_main+0x4c>
     3cc:	fa000293 	blx	e20 <io_printf>
     3d0:	e1a0000d 	mov	r0, sp
     3d4:	e59f101c 	ldr	r1, [pc, #28]	; 3f8 <c_main+0x50>
     3d8:	fa000290 	blx	e20 <io_printf>
     3dc:	e3a00002 	mov	r0, #2
     3e0:	e1a0100d 	mov	r1, sp
     3e4:	fa00028d 	blx	e20 <io_printf>
     3e8:	e28dd044 	add	sp, sp, #68	; 0x44
     3ec:	e8bd8000 	ldmfd	sp!, {pc}
     3f0:	00001970 	.word	0x00001970
     3f4:	00001988 	.word	0x00001988
     3f8:	000019a2 	.word	0x000019a2

000003fc <rte_handler>:
     3fc:	4b01      	ldr	r3, [pc, #4]	; (404 <MC_TABLE_SIZE+0x4>)
     3fe:	2208      	movs	r2, #8
     400:	701a      	strb	r2, [r3, #0]
     402:	4770      	bx	lr
     404:	e5007f2b 	.word	0xe5007f2b

00000408 <sark_cpu_state>:
     408:	4b02      	ldr	r3, [pc, #8]	; (414 <sark_cpu_state+0xc>)
     40a:	69db      	ldr	r3, [r3, #28]
     40c:	332e      	adds	r3, #46	; 0x2e
     40e:	7018      	strb	r0, [r3, #0]
     410:	4770      	bx	lr
     412:	46c0      	nop			; (mov r8, r8)
     414:	00400358 	.word	0x00400358

00000418 <sark_app_lead>:
     418:	235c      	movs	r3, #92	; 0x5c
     41a:	4a03      	ldr	r2, [pc, #12]	; (428 <sark_app_lead+0x10>)
     41c:	781b      	ldrb	r3, [r3, #0]
     41e:	6812      	ldr	r2, [r2, #0]
     420:	00db      	lsls	r3, r3, #3
     422:	18d3      	adds	r3, r2, r3
     424:	78d8      	ldrb	r0, [r3, #3]
     426:	4770      	bx	lr
     428:	e5007fe4 	.word	0xe5007fe4

0000042c <sark_block_init>:
     42c:	b530      	push	{r4, r5, lr}
     42e:	1c0b      	adds	r3, r1, #0
     430:	1c04      	adds	r4, r0, #0
     432:	e002      	b.n	43a <sark_block_init+0xe>
     434:	18a5      	adds	r5, r4, r2
     436:	6025      	str	r5, [r4, #0]
     438:	1c2c      	adds	r4, r5, #0
     43a:	3b01      	subs	r3, #1
     43c:	2b00      	cmp	r3, #0
     43e:	d1f9      	bne.n	434 <sark_block_init+0x8>
     440:	3901      	subs	r1, #1
     442:	434a      	muls	r2, r1
     444:	1880      	adds	r0, r0, r2
     446:	6003      	str	r3, [r0, #0]
     448:	bd30      	pop	{r4, r5, pc}
	...

0000044c <sark_msg_get>:
     44c:	b510      	push	{r4, lr}
     44e:	f7ff eeb4 	blx	1b8 <cpu_int_disable>
     452:	4b09      	ldr	r3, [pc, #36]	; (478 <sark_msg_get+0x2c>)
     454:	6a1c      	ldr	r4, [r3, #32]
     456:	2c00      	cmp	r4, #0
     458:	d00a      	beq.n	470 <sark_msg_get+0x24>
     45a:	6822      	ldr	r2, [r4, #0]
     45c:	621a      	str	r2, [r3, #32]
     45e:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
     460:	8cd9      	ldrh	r1, [r3, #38]	; 0x26
     462:	3201      	adds	r2, #1
     464:	0412      	lsls	r2, r2, #16
     466:	0c12      	lsrs	r2, r2, #16
     468:	849a      	strh	r2, [r3, #36]	; 0x24
     46a:	4291      	cmp	r1, r2
     46c:	d200      	bcs.n	470 <sark_msg_get+0x24>
     46e:	84da      	strh	r2, [r3, #38]	; 0x26
     470:	f7ff eeaa 	blx	1c8 <cpu_int_restore>
     474:	1c20      	adds	r0, r4, #0
     476:	bd10      	pop	{r4, pc}
     478:	00400358 	.word	0x00400358

0000047c <sark_msg_free>:
     47c:	b510      	push	{r4, lr}
     47e:	1c04      	adds	r4, r0, #0
     480:	f7ff ee9a 	blx	1b8 <cpu_int_disable>
     484:	4b04      	ldr	r3, [pc, #16]	; (498 <sark_msg_free+0x1c>)
     486:	6a1a      	ldr	r2, [r3, #32]
     488:	6022      	str	r2, [r4, #0]
     48a:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
     48c:	621c      	str	r4, [r3, #32]
     48e:	3a01      	subs	r2, #1
     490:	849a      	strh	r2, [r3, #36]	; 0x24
     492:	f7ff ee9a 	blx	1c8 <cpu_int_restore>
     496:	bd10      	pop	{r4, pc}
     498:	00400358 	.word	0x00400358

0000049c <sark_shmsg_get>:
     49c:	b510      	push	{r4, lr}
     49e:	2000      	movs	r0, #0
     4a0:	f7ff ee9a 	blx	1d8 <sark_lock_get>
     4a4:	4b09      	ldr	r3, [pc, #36]	; (4cc <sark_shmsg_get+0x30>)
     4a6:	681c      	ldr	r4, [r3, #0]
     4a8:	2c00      	cmp	r4, #0
     4aa:	d00a      	beq.n	4c2 <sark_shmsg_get+0x26>
     4ac:	6822      	ldr	r2, [r4, #0]
     4ae:	601a      	str	r2, [r3, #0]
     4b0:	889a      	ldrh	r2, [r3, #4]
     4b2:	88d9      	ldrh	r1, [r3, #6]
     4b4:	3201      	adds	r2, #1
     4b6:	0412      	lsls	r2, r2, #16
     4b8:	0c12      	lsrs	r2, r2, #16
     4ba:	809a      	strh	r2, [r3, #4]
     4bc:	4291      	cmp	r1, r2
     4be:	d200      	bcs.n	4c2 <sark_shmsg_get+0x26>
     4c0:	80da      	strh	r2, [r3, #6]
     4c2:	2100      	movs	r1, #0
     4c4:	f7ff ee9a 	blx	1fc <sark_lock_free>
     4c8:	1c20      	adds	r0, r4, #0
     4ca:	bd10      	pop	{r4, pc}
     4cc:	e5007f68 	.word	0xe5007f68

000004d0 <sark_shmsg_free>:
     4d0:	b510      	push	{r4, lr}
     4d2:	1c04      	adds	r4, r0, #0
     4d4:	2000      	movs	r0, #0
     4d6:	f7ff ee80 	blx	1d8 <sark_lock_get>
     4da:	4b05      	ldr	r3, [pc, #20]	; (4f0 <sark_shmsg_free+0x20>)
     4dc:	2100      	movs	r1, #0
     4de:	681a      	ldr	r2, [r3, #0]
     4e0:	6022      	str	r2, [r4, #0]
     4e2:	889a      	ldrh	r2, [r3, #4]
     4e4:	601c      	str	r4, [r3, #0]
     4e6:	3a01      	subs	r2, #1
     4e8:	809a      	strh	r2, [r3, #4]
     4ea:	f7ff ee88 	blx	1fc <sark_lock_free>
     4ee:	bd10      	pop	{r4, pc}
     4f0:	e5007f68 	.word	0xe5007f68

000004f4 <sark_init>:
     4f4:	b570      	push	{r4, r5, r6, lr}
     4f6:	2520      	movs	r5, #32
     4f8:	1c04      	adds	r4, r0, #0
     4fa:	8c28      	ldrh	r0, [r5, #32]
     4fc:	8c6a      	ldrh	r2, [r5, #34]	; 0x22
     4fe:	0080      	lsls	r0, r0, #2
     500:	1a20      	subs	r0, r4, r0
     502:	21d2      	movs	r1, #210	; 0xd2
     504:	f7ff ee44 	blx	190 <cpu_init_mode>
     508:	8caa      	ldrh	r2, [r5, #36]	; 0x24
     50a:	21d1      	movs	r1, #209	; 0xd1
     50c:	f7ff ee40 	blx	190 <cpu_init_mode>
     510:	2200      	movs	r2, #0
     512:	21df      	movs	r1, #223	; 0xdf
     514:	f7ff ee3c 	blx	190 <cpu_init_mode>
     518:	8ce9      	ldrh	r1, [r5, #38]	; 0x26
     51a:	2658      	movs	r6, #88	; 0x58
     51c:	0889      	lsrs	r1, r1, #2
     51e:	0089      	lsls	r1, r1, #2
     520:	1a61      	subs	r1, r4, r1
     522:	4c2a      	ldr	r4, [pc, #168]	; (5cc <SPARE_SIZE+0x2c>)
     524:	6121      	str	r1, [r4, #16]
     526:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
     528:	6160      	str	r0, [r4, #20]
     52a:	f000 fb71 	bl	c10 <sark_heap_init>
     52e:	4b28      	ldr	r3, [pc, #160]	; (5d0 <SPARE_SIZE+0x30>)
     530:	4a28      	ldr	r2, [pc, #160]	; (5d4 <SPARE_SIZE+0x34>)
     532:	681b      	ldr	r3, [r3, #0]
     534:	4d28      	ldr	r5, [pc, #160]	; (5d8 <SPARE_SIZE+0x38>)
     536:	0e1b      	lsrs	r3, r3, #24
     538:	6063      	str	r3, [r4, #4]
     53a:	189b      	adds	r3, r3, r2
     53c:	2192      	movs	r1, #146	; 0x92
     53e:	0049      	lsls	r1, r1, #1
     540:	61a0      	str	r0, [r4, #24]
     542:	791b      	ldrb	r3, [r3, #4]
     544:	6023      	str	r3, [r4, #0]
     546:	8cab      	ldrh	r3, [r5, #36]	; 0x24
     548:	8623      	strh	r3, [r4, #48]	; 0x30
     54a:	4b24      	ldr	r3, [pc, #144]	; (5dc <SPARE_SIZE+0x3c>)
     54c:	60a3      	str	r3, [r4, #8]
     54e:	7830      	ldrb	r0, [r6, #0]
     550:	f000 fb52 	bl	bf8 <sark_alloc>
     554:	2292      	movs	r2, #146	; 0x92
     556:	0052      	lsls	r2, r2, #1
     558:	6220      	str	r0, [r4, #32]
     55a:	7831      	ldrb	r1, [r6, #0]
     55c:	f7ff ff66 	bl	42c <sark_block_init>
     560:	6823      	ldr	r3, [r4, #0]
     562:	2b11      	cmp	r3, #17
     564:	d81d      	bhi.n	5a2 <SPARE_SIZE+0x2>
     566:	4a1e      	ldr	r2, [pc, #120]	; (5e0 <SPARE_SIZE+0x40>)
     568:	01d8      	lsls	r0, r3, #7
     56a:	1880      	adds	r0, r0, r2
     56c:	6daa      	ldr	r2, [r5, #88]	; 0x58
     56e:	61e0      	str	r0, [r4, #28]
     570:	4353      	muls	r3, r2
     572:	6d6a      	ldr	r2, [r5, #84]	; 0x54
     574:	009b      	lsls	r3, r3, #2
     576:	18d3      	adds	r3, r2, r3
     578:	2100      	movs	r1, #0
     57a:	2270      	movs	r2, #112	; 0x70
     57c:	6363      	str	r3, [r4, #52]	; 0x34
     57e:	f7ff ee52 	blx	224 <sark_word_set>
     582:	69e0      	ldr	r0, [r4, #28]
     584:	2205      	movs	r2, #5
     586:	1c03      	adds	r3, r0, #0
     588:	332e      	adds	r3, #46	; 0x2e
     58a:	701a      	strb	r2, [r3, #0]
     58c:	235c      	movs	r3, #92	; 0x5c
     58e:	781a      	ldrb	r2, [r3, #0]
     590:	1c03      	adds	r3, r0, #0
     592:	332f      	adds	r3, #47	; 0x2f
     594:	701a      	strb	r2, [r3, #0]
     596:	69ed      	ldr	r5, [r5, #28]
     598:	6445      	str	r5, [r0, #68]	; 0x44
     59a:	4912      	ldr	r1, [pc, #72]	; (5e4 <SPARE_SIZE+0x44>)
     59c:	3048      	adds	r0, #72	; 0x48
     59e:	f7ff ee38 	blx	210 <sark_str_cpy>
     5a2:	f000 fa65 	bl	a70 <sark_vic_init>
     5a6:	2359      	movs	r3, #89	; 0x59
     5a8:	7818      	ldrb	r0, [r3, #0]
     5aa:	2112      	movs	r1, #18
     5ac:	2201      	movs	r2, #1
     5ae:	4b0e      	ldr	r3, [pc, #56]	; (5e8 <SPARE_SIZE+0x48>)
     5b0:	f000 fa86 	bl	ac0 <sark_vic_set>
     5b4:	2106      	movs	r1, #6
     5b6:	2201      	movs	r2, #1
     5b8:	2010      	movs	r0, #16
     5ba:	4b0c      	ldr	r3, [pc, #48]	; (5ec <SPARE_SIZE+0x4c>)
     5bc:	f000 fa80 	bl	ac0 <sark_vic_set>
     5c0:	235a      	movs	r3, #90	; 0x5a
     5c2:	7818      	ldrb	r0, [r3, #0]
     5c4:	f000 fa36 	bl	a34 <event_alloc>
     5c8:	201f      	movs	r0, #31
     5ca:	bd70      	pop	{r4, r5, r6, pc}
     5cc:	00400358 	.word	0x00400358
     5d0:	40000014 	.word	0x40000014
     5d4:	e5007f90 	.word	0xe5007f90
     5d8:	e5007f00 	.word	0xe5007f00
     5dc:	deaddead 	.word	0xdeaddead
     5e0:	e5007000 	.word	0xe5007000
     5e4:	000019c0 	.word	0x000019c0
     5e8:	000002dc 	.word	0x000002dc
     5ec:	00000b08 	.word	0x00000b08

000005f0 <sark_msg_send>:
     5f0:	b5f0      	push	{r4, r5, r6, r7, lr}
     5f2:	b085      	sub	sp, #20
     5f4:	1c05      	adds	r5, r0, #0
     5f6:	9103      	str	r1, [sp, #12]
     5f8:	f7ff ff50 	bl	49c <sark_shmsg_get>
     5fc:	1c04      	adds	r4, r0, #0
     5fe:	3800      	subs	r0, #0
     600:	d047      	beq.n	692 <ETH_TX_SIZE+0x92>
     602:	1c29      	adds	r1, r5, #0
     604:	f7ff ee20 	blx	248 <sark_msg_cpy>
     608:	4e23      	ldr	r6, [pc, #140]	; (698 <ETH_TX_SIZE+0x98>)
     60a:	2501      	movs	r5, #1
     60c:	69f3      	ldr	r3, [r6, #28]
     60e:	1c28      	adds	r0, r5, #0
     610:	635c      	str	r4, [r3, #52]	; 0x34
     612:	3339      	adds	r3, #57	; 0x39
     614:	701d      	strb	r5, [r3, #0]
     616:	f7ff ede0 	blx	1d8 <sark_lock_get>
     61a:	6831      	ldr	r1, [r6, #0]
     61c:	4a1f      	ldr	r2, [pc, #124]	; (69c <ETH_TX_SIZE+0x9c>)
     61e:	6813      	ldr	r3, [r2, #0]
     620:	1c07      	adds	r7, r0, #0
     622:	1c28      	adds	r0, r5, #0
     624:	4088      	lsls	r0, r1
     626:	1c01      	adds	r1, r0, #0
     628:	4319      	orrs	r1, r3
     62a:	6011      	str	r1, [r2, #0]
     62c:	491c      	ldr	r1, [pc, #112]	; (6a0 <ETH_TX_SIZE+0xa0>)
     62e:	2b00      	cmp	r3, #0
     630:	d105      	bne.n	63e <ETH_TX_SIZE+0x3e>
     632:	481c      	ldr	r0, [pc, #112]	; (6a4 <ETH_TX_SIZE+0xa4>)
     634:	4e1c      	ldr	r6, [pc, #112]	; (6a8 <ETH_TX_SIZE+0xa8>)
     636:	7800      	ldrb	r0, [r0, #0]
     638:	4085      	lsls	r5, r0
     63a:	19ad      	adds	r5, r5, r6
     63c:	600d      	str	r5, [r1, #0]
     63e:	6809      	ldr	r1, [r1, #0]
     640:	6812      	ldr	r2, [r2, #0]
     642:	2002      	movs	r0, #2
     644:	9100      	str	r1, [sp, #0]
     646:	4919      	ldr	r1, [pc, #100]	; (6ac <ETH_TX_SIZE+0xac>)
     648:	f000 fbea 	bl	e20 <io_printf>
     64c:	1c38      	adds	r0, r7, #0
     64e:	2101      	movs	r1, #1
     650:	f7ff edd4 	blx	1fc <sark_lock_free>
     654:	4b10      	ldr	r3, [pc, #64]	; (698 <ETH_TX_SIZE+0x98>)
     656:	4a16      	ldr	r2, [pc, #88]	; (6b0 <ZI_LENGTH>)
     658:	69db      	ldr	r3, [r3, #28]
     65a:	6815      	ldr	r5, [r2, #0]
     65c:	1c18      	adds	r0, r3, #0
     65e:	3039      	adds	r0, #57	; 0x39
     660:	e009      	b.n	676 <ETH_TX_SIZE+0x76>
     662:	6811      	ldr	r1, [r2, #0]
     664:	9e03      	ldr	r6, [sp, #12]
     666:	1b49      	subs	r1, r1, r5
     668:	42b1      	cmp	r1, r6
     66a:	d904      	bls.n	676 <ETH_TX_SIZE+0x76>
     66c:	3339      	adds	r3, #57	; 0x39
     66e:	781b      	ldrb	r3, [r3, #0]
     670:	2b00      	cmp	r3, #0
     672:	d009      	beq.n	688 <ETH_TX_SIZE+0x88>
     674:	e003      	b.n	67e <ETH_TX_SIZE+0x7e>
     676:	7801      	ldrb	r1, [r0, #0]
     678:	2900      	cmp	r1, #0
     67a:	d1f2      	bne.n	662 <ETH_TX_SIZE+0x62>
     67c:	e7f6      	b.n	66c <ETH_TX_SIZE+0x6c>
     67e:	1c20      	adds	r0, r4, #0
     680:	f7ff ff26 	bl	4d0 <sark_shmsg_free>
     684:	2000      	movs	r0, #0
     686:	e004      	b.n	692 <ETH_TX_SIZE+0x92>
     688:	4b03      	ldr	r3, [pc, #12]	; (698 <ETH_TX_SIZE+0x98>)
     68a:	2001      	movs	r0, #1
     68c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     68e:	3201      	adds	r2, #1
     690:	62da      	str	r2, [r3, #44]	; 0x2c
     692:	b005      	add	sp, #20
     694:	bdf0      	pop	{r4, r5, r6, r7, pc}
     696:	46c0      	nop			; (mov r8, r8)
     698:	00400358 	.word	0x00400358
     69c:	e5007fec 	.word	0xe5007fec
     6a0:	e2000008 	.word	0xe2000008
     6a4:	e5007fa8 	.word	0xe5007fa8
     6a8:	5ec00000 	.word	0x5ec00000
     6ac:	000019d4 	.word	0x000019d4
     6b0:	e5007f10 	.word	0xe5007f10

000006b4 <sark_cmd_ver>:
     6b4:	b508      	push	{r3, lr}
     6b6:	4b0a      	ldr	r3, [pc, #40]	; (6e0 <sark_cmd_ver+0x2c>)
     6b8:	6859      	ldr	r1, [r3, #4]
     6ba:	681b      	ldr	r3, [r3, #0]
     6bc:	020a      	lsls	r2, r1, #8
     6be:	18d3      	adds	r3, r2, r3
     6c0:	4a08      	ldr	r2, [pc, #32]	; (6e4 <sark_cmd_ver+0x30>)
     6c2:	4909      	ldr	r1, [pc, #36]	; (6e8 <sark_cmd_ver+0x34>)
     6c4:	8812      	ldrh	r2, [r2, #0]
     6c6:	0412      	lsls	r2, r2, #16
     6c8:	189b      	adds	r3, r3, r2
     6ca:	6143      	str	r3, [r0, #20]
     6cc:	4b07      	ldr	r3, [pc, #28]	; (6ec <sark_cmd_ver+0x38>)
     6ce:	6183      	str	r3, [r0, #24]
     6d0:	4b07      	ldr	r3, [pc, #28]	; (6f0 <sark_cmd_ver+0x3c>)
     6d2:	681b      	ldr	r3, [r3, #0]
     6d4:	61c3      	str	r3, [r0, #28]
     6d6:	3020      	adds	r0, #32
     6d8:	f7ff ed9a 	blx	210 <sark_str_cpy>
     6dc:	201b      	movs	r0, #27
     6de:	bd08      	pop	{r3, pc}
     6e0:	00400358 	.word	0x00400358
     6e4:	e5007f00 	.word	0xe5007f00
     6e8:	00001a01 	.word	0x00001a01
     6ec:	00850100 	.word	0x00850100
     6f0:	000019d0 	.word	0x000019d0

000006f4 <sark_cmd_read>:
     6f4:	69c1      	ldr	r1, [r0, #28]
     6f6:	b530      	push	{r4, r5, lr}
     6f8:	6983      	ldr	r3, [r0, #24]
     6fa:	2902      	cmp	r1, #2
     6fc:	d803      	bhi.n	706 <sark_cmd_read+0x12>
     6fe:	2280      	movs	r2, #128	; 0x80
     700:	0052      	lsls	r2, r2, #1
     702:	429a      	cmp	r2, r3
     704:	d203      	bcs.n	70e <sark_cmd_read+0x1a>
     706:	2384      	movs	r3, #132	; 0x84
     708:	8203      	strh	r3, [r0, #16]
     70a:	2300      	movs	r3, #0
     70c:	e023      	b.n	756 <sark_cmd_read+0x62>
     70e:	6942      	ldr	r2, [r0, #20]
     710:	3014      	adds	r0, #20
     712:	2900      	cmp	r1, #0
     714:	d108      	bne.n	728 <sark_cmd_read+0x34>
     716:	18d1      	adds	r1, r2, r3
     718:	1a80      	subs	r0, r0, r2
     71a:	e002      	b.n	722 <sark_cmd_read+0x2e>
     71c:	7814      	ldrb	r4, [r2, #0]
     71e:	5484      	strb	r4, [r0, r2]
     720:	3201      	adds	r2, #1
     722:	428a      	cmp	r2, r1
     724:	d1fa      	bne.n	71c <sark_cmd_read+0x28>
     726:	e016      	b.n	756 <sark_cmd_read+0x62>
     728:	2901      	cmp	r1, #1
     72a:	d10a      	bne.n	742 <sark_cmd_read+0x4e>
     72c:	0859      	lsrs	r1, r3, #1
     72e:	0049      	lsls	r1, r1, #1
     730:	1889      	adds	r1, r1, r2
     732:	1a80      	subs	r0, r0, r2
     734:	e002      	b.n	73c <sark_cmd_read+0x48>
     736:	8814      	ldrh	r4, [r2, #0]
     738:	5284      	strh	r4, [r0, r2]
     73a:	3202      	adds	r2, #2
     73c:	428a      	cmp	r2, r1
     73e:	d1fa      	bne.n	736 <sark_cmd_read+0x42>
     740:	e009      	b.n	756 <sark_cmd_read+0x62>
     742:	089c      	lsrs	r4, r3, #2
     744:	00a4      	lsls	r4, r4, #2
     746:	1904      	adds	r4, r0, r4
     748:	1c01      	adds	r1, r0, #0
     74a:	e002      	b.n	752 <sark_cmd_read+0x5e>
     74c:	1a0d      	subs	r5, r1, r0
     74e:	58ad      	ldr	r5, [r5, r2]
     750:	c120      	stmia	r1!, {r5}
     752:	42a1      	cmp	r1, r4
     754:	d1fa      	bne.n	74c <sark_cmd_read+0x58>
     756:	1c18      	adds	r0, r3, #0
     758:	bd30      	pop	{r4, r5, pc}

0000075a <sark_cmd_write>:
     75a:	69c1      	ldr	r1, [r0, #28]
     75c:	b530      	push	{r4, r5, lr}
     75e:	6982      	ldr	r2, [r0, #24]
     760:	2902      	cmp	r1, #2
     762:	d803      	bhi.n	76c <sark_cmd_write+0x12>
     764:	2380      	movs	r3, #128	; 0x80
     766:	005b      	lsls	r3, r3, #1
     768:	4293      	cmp	r3, r2
     76a:	d202      	bcs.n	772 <sark_cmd_write+0x18>
     76c:	2384      	movs	r3, #132	; 0x84
     76e:	8203      	strh	r3, [r0, #16]
     770:	e026      	b.n	7c0 <sark_cmd_write+0x66>
     772:	6943      	ldr	r3, [r0, #20]
     774:	2900      	cmp	r1, #0
     776:	d10b      	bne.n	790 <sark_cmd_write+0x36>
     778:	1881      	adds	r1, r0, r2
     77a:	1c02      	adds	r2, r0, #0
     77c:	e005      	b.n	78a <sark_cmd_write+0x30>
     77e:	1c14      	adds	r4, r2, #0
     780:	3420      	adds	r4, #32
     782:	7825      	ldrb	r5, [r4, #0]
     784:	1a14      	subs	r4, r2, r0
     786:	3201      	adds	r2, #1
     788:	54e5      	strb	r5, [r4, r3]
     78a:	428a      	cmp	r2, r1
     78c:	d1f7      	bne.n	77e <sark_cmd_write+0x24>
     78e:	e017      	b.n	7c0 <sark_cmd_write+0x66>
     790:	3020      	adds	r0, #32
     792:	2901      	cmp	r1, #1
     794:	d10b      	bne.n	7ae <sark_cmd_write+0x54>
     796:	0851      	lsrs	r1, r2, #1
     798:	0049      	lsls	r1, r1, #1
     79a:	1841      	adds	r1, r0, r1
     79c:	1c02      	adds	r2, r0, #0
     79e:	e003      	b.n	7a8 <sark_cmd_write+0x4e>
     7a0:	8815      	ldrh	r5, [r2, #0]
     7a2:	1a14      	subs	r4, r2, r0
     7a4:	3202      	adds	r2, #2
     7a6:	52e5      	strh	r5, [r4, r3]
     7a8:	428a      	cmp	r2, r1
     7aa:	d1f9      	bne.n	7a0 <sark_cmd_write+0x46>
     7ac:	e008      	b.n	7c0 <sark_cmd_write+0x66>
     7ae:	0892      	lsrs	r2, r2, #2
     7b0:	0092      	lsls	r2, r2, #2
     7b2:	18d2      	adds	r2, r2, r3
     7b4:	1ac0      	subs	r0, r0, r3
     7b6:	e001      	b.n	7bc <sark_cmd_write+0x62>
     7b8:	58c1      	ldr	r1, [r0, r3]
     7ba:	c302      	stmia	r3!, {r1}
     7bc:	4293      	cmp	r3, r2
     7be:	d1fb      	bne.n	7b8 <sark_cmd_write+0x5e>
     7c0:	2000      	movs	r0, #0
     7c2:	bd30      	pop	{r4, r5, pc}

000007c4 <sark_cmd_fill>:
     7c4:	b508      	push	{r3, lr}
     7c6:	1c03      	adds	r3, r0, #0
     7c8:	3314      	adds	r3, #20
     7ca:	cb07      	ldmia	r3!, {r0, r1, r2}
     7cc:	f7ff ed2a 	blx	224 <sark_word_set>
     7d0:	2000      	movs	r0, #0
     7d2:	bd08      	pop	{r3, pc}

000007d4 <sark_wait>:
     7d4:	b508      	push	{r3, lr}
     7d6:	e001      	b.n	7dc <sark_wait+0x8>
     7d8:	f7ff ecfa 	blx	1d0 <cpu_wfi>
     7dc:	235d      	movs	r3, #93	; 0x5d
     7de:	781b      	ldrb	r3, [r3, #0]
     7e0:	07da      	lsls	r2, r3, #31
     7e2:	d4f9      	bmi.n	7d8 <sark_wait+0x4>
     7e4:	bd08      	pop	{r3, pc}
	...

000007e8 <sark_int>:
     7e8:	4b5f      	ldr	r3, [pc, #380]	; (968 <STACK_SIZE+0x168>)
     7ea:	2101      	movs	r1, #1
     7ec:	685a      	ldr	r2, [r3, #4]
     7ee:	69db      	ldr	r3, [r3, #28]
     7f0:	4091      	lsls	r1, r2
     7f2:	4a5e      	ldr	r2, [pc, #376]	; (96c <STACK_SIZE+0x16c>)
     7f4:	b570      	push	{r4, r5, r6, lr}
     7f6:	1889      	adds	r1, r1, r2
     7f8:	4a5d      	ldr	r2, [pc, #372]	; (970 <STACK_SIZE+0x170>)
     7fa:	6011      	str	r1, [r2, #0]
     7fc:	1c1a      	adds	r2, r3, #0
     7fe:	3238      	adds	r2, #56	; 0x38
     800:	7814      	ldrb	r4, [r2, #0]
     802:	2c00      	cmp	r4, #0
     804:	d100      	bne.n	808 <STACK_SIZE+0x8>
     806:	e0ad      	b.n	964 <STACK_SIZE+0x164>
     808:	6b1d      	ldr	r5, [r3, #48]	; 0x30
     80a:	2c02      	cmp	r4, #2
     80c:	d100      	bne.n	810 <STACK_SIZE+0x10>
     80e:	6318      	str	r0, [r3, #48]	; 0x30
     810:	2300      	movs	r3, #0
     812:	7013      	strb	r3, [r2, #0]
     814:	2002      	movs	r0, #2
     816:	4957      	ldr	r1, [pc, #348]	; (974 <STACK_SIZE+0x174>)
     818:	1c22      	adds	r2, r4, #0
     81a:	6a2b      	ldr	r3, [r5, #32]
     81c:	f000 fb00 	bl	e20 <io_printf>
     820:	2c03      	cmp	r4, #3
     822:	d124      	bne.n	86e <STACK_SIZE+0x6e>
     824:	1ee8      	subs	r0, r5, #3
     826:	280a      	cmp	r0, #10
     828:	d900      	bls.n	82c <STACK_SIZE+0x2c>
     82a:	e09b      	b.n	964 <STACK_SIZE+0x164>
     82c:	f7ff fd88 	bl	340 <__gnu_thumb1_case_uqi>
     830:	069a9a10 	.word	0x069a9a10
     834:	161b0c08 	.word	0x161b0c08
     838:	1616      	.short	0x1616
     83a:	16          	.byte	0x16
     83b:	00          	.byte	0x00
     83c:	2001      	movs	r0, #1
     83e:	e000      	b.n	842 <STACK_SIZE+0x42>
     840:	2000      	movs	r0, #0
     842:	f000 f8d5 	bl	9f0 <event_pause>
     846:	e08d      	b.n	964 <STACK_SIZE+0x164>
     848:	20ff      	movs	r0, #255	; 0xff
     84a:	f000 f8e7 	bl	a1c <event_stop>
     84e:	e089      	b.n	964 <STACK_SIZE+0x164>
     850:	235d      	movs	r3, #93	; 0x5d
     852:	781a      	ldrb	r2, [r3, #0]
     854:	2101      	movs	r1, #1
     856:	438a      	bics	r2, r1
     858:	701a      	strb	r2, [r3, #0]
     85a:	e083      	b.n	964 <STACK_SIZE+0x164>
     85c:	4b46      	ldr	r3, [pc, #280]	; (978 <STACK_SIZE+0x178>)
     85e:	2280      	movs	r2, #128	; 0x80
     860:	62dd      	str	r5, [r3, #44]	; 0x2c
     862:	0592      	lsls	r2, r2, #22
     864:	e000      	b.n	868 <STACK_SIZE+0x68>
     866:	2210      	movs	r2, #16
     868:	4b44      	ldr	r3, [pc, #272]	; (97c <STACK_SIZE+0x17c>)
     86a:	601a      	str	r2, [r3, #0]
     86c:	e07a      	b.n	964 <STACK_SIZE+0x164>
     86e:	2c01      	cmp	r4, #1
     870:	d178      	bne.n	964 <STACK_SIZE+0x164>
     872:	f7ff fdeb 	bl	44c <sark_msg_get>
     876:	4942      	ldr	r1, [pc, #264]	; (980 <STACK_SIZE+0x180>)
     878:	1c04      	adds	r4, r0, #0
     87a:	2002      	movs	r0, #2
     87c:	f000 fad0 	bl	e20 <io_printf>
     880:	2c00      	cmp	r4, #0
     882:	d06c      	beq.n	95e <STACK_SIZE+0x15e>
     884:	1c29      	adds	r1, r5, #0
     886:	1c20      	adds	r0, r4, #0
     888:	f7ff ecde 	blx	248 <sark_msg_cpy>
     88c:	1c28      	adds	r0, r5, #0
     88e:	f7ff fe1f 	bl	4d0 <sark_shmsg_free>
     892:	4b35      	ldr	r3, [pc, #212]	; (968 <STACK_SIZE+0x168>)
     894:	2002      	movs	r0, #2
     896:	6a9a      	ldr	r2, [r3, #40]	; 0x28
     898:	493a      	ldr	r1, [pc, #232]	; (984 <STACK_SIZE+0x184>)
     89a:	3201      	adds	r2, #1
     89c:	629a      	str	r2, [r3, #40]	; 0x28
     89e:	f000 fabf 	bl	e20 <io_printf>
     8a2:	7aa5      	ldrb	r5, [r4, #10]
     8a4:	231f      	movs	r3, #31
     8a6:	1c28      	adds	r0, r5, #0
     8a8:	4398      	bics	r0, r3
     8aa:	d130      	bne.n	90e <STACK_SIZE+0x10e>
     8ac:	88a3      	ldrh	r3, [r4, #4]
     8ae:	2b17      	cmp	r3, #23
     8b0:	d801      	bhi.n	8b6 <STACK_SIZE+0xb6>
     8b2:	2381      	movs	r3, #129	; 0x81
     8b4:	e01b      	b.n	8ee <STACK_SIZE+0xee>
     8b6:	8a23      	ldrh	r3, [r4, #16]
     8b8:	2280      	movs	r2, #128	; 0x80
     8ba:	8222      	strh	r2, [r4, #16]
     8bc:	2b00      	cmp	r3, #0
     8be:	d103      	bne.n	8c8 <STACK_SIZE+0xc8>
     8c0:	1c20      	adds	r0, r4, #0
     8c2:	f7ff fef7 	bl	6b4 <sark_cmd_ver>
     8c6:	e013      	b.n	8f0 <STACK_SIZE+0xf0>
     8c8:	2b02      	cmp	r3, #2
     8ca:	d103      	bne.n	8d4 <STACK_SIZE+0xd4>
     8cc:	1c20      	adds	r0, r4, #0
     8ce:	f7ff ff11 	bl	6f4 <sark_cmd_read>
     8d2:	e00d      	b.n	8f0 <STACK_SIZE+0xf0>
     8d4:	2b03      	cmp	r3, #3
     8d6:	d103      	bne.n	8e0 <STACK_SIZE+0xe0>
     8d8:	1c20      	adds	r0, r4, #0
     8da:	f7ff ff3e 	bl	75a <sark_cmd_write>
     8de:	e007      	b.n	8f0 <STACK_SIZE+0xf0>
     8e0:	2b05      	cmp	r3, #5
     8e2:	d103      	bne.n	8ec <STACK_SIZE+0xec>
     8e4:	1c20      	adds	r0, r4, #0
     8e6:	f7ff ff6d 	bl	7c4 <sark_cmd_fill>
     8ea:	e001      	b.n	8f0 <STACK_SIZE+0xf0>
     8ec:	2383      	movs	r3, #131	; 0x83
     8ee:	8223      	strh	r3, [r4, #16]
     8f0:	7aa2      	ldrb	r2, [r4, #10]
     8f2:	7ae1      	ldrb	r1, [r4, #11]
     8f4:	89a3      	ldrh	r3, [r4, #12]
     8f6:	300c      	adds	r0, #12
     8f8:	72e2      	strb	r2, [r4, #11]
     8fa:	89e2      	ldrh	r2, [r4, #14]
     8fc:	80a0      	strh	r0, [r4, #4]
     8fe:	72a1      	strb	r1, [r4, #10]
     900:	81a2      	strh	r2, [r4, #12]
     902:	81e3      	strh	r3, [r4, #14]
     904:	1c20      	adds	r0, r4, #0
     906:	210a      	movs	r1, #10
     908:	f7ff fe72 	bl	5f0 <sark_msg_send>
     90c:	e023      	b.n	956 <STACK_SIZE+0x156>
     90e:	235b      	movs	r3, #91	; 0x5b
     910:	781b      	ldrb	r3, [r3, #0]
     912:	2b00      	cmp	r3, #0
     914:	d014      	beq.n	940 <STACK_SIZE+0x140>
     916:	2002      	movs	r0, #2
     918:	491b      	ldr	r1, [pc, #108]	; (988 <STACK_SIZE+0x188>)
     91a:	6a22      	ldr	r2, [r4, #32]
     91c:	f000 fa80 	bl	e20 <io_printf>
     920:	4b1a      	ldr	r3, [pc, #104]	; (98c <STACK_SIZE+0x18c>)
     922:	699b      	ldr	r3, [r3, #24]
     924:	2b00      	cmp	r3, #0
     926:	d016      	beq.n	956 <STACK_SIZE+0x156>
     928:	f7ff ec46 	blx	1b8 <cpu_int_disable>
     92c:	096a      	lsrs	r2, r5, #5
     92e:	1c21      	adds	r1, r4, #0
     930:	1c06      	adds	r6, r0, #0
     932:	2003      	movs	r0, #3
     934:	f000 fdee 	bl	1514 <schedule_sysmode>
     938:	1c30      	adds	r0, r6, #0
     93a:	f7ff ec46 	blx	1c8 <cpu_int_restore>
     93e:	e011      	b.n	964 <STACK_SIZE+0x164>
     940:	4b13      	ldr	r3, [pc, #76]	; (990 <STACK_SIZE+0x190>)
     942:	681a      	ldr	r2, [r3, #0]
     944:	2380      	movs	r3, #128	; 0x80
     946:	055b      	lsls	r3, r3, #21
     948:	421a      	tst	r2, r3
     94a:	d004      	beq.n	956 <STACK_SIZE+0x156>
     94c:	4a0a      	ldr	r2, [pc, #40]	; (978 <STACK_SIZE+0x178>)
     94e:	6294      	str	r4, [r2, #40]	; 0x28
     950:	4a0a      	ldr	r2, [pc, #40]	; (97c <STACK_SIZE+0x17c>)
     952:	6013      	str	r3, [r2, #0]
     954:	e006      	b.n	964 <STACK_SIZE+0x164>
     956:	1c20      	adds	r0, r4, #0
     958:	f7ff fd90 	bl	47c <sark_msg_free>
     95c:	e002      	b.n	964 <STACK_SIZE+0x164>
     95e:	1c28      	adds	r0, r5, #0
     960:	f7ff fdb6 	bl	4d0 <sark_shmsg_free>
     964:	bd70      	pop	{r4, r5, r6, pc}
     966:	46c0      	nop			; (mov r8, r8)
     968:	00400358 	.word	0x00400358
     96c:	5ec00000 	.word	0x5ec00000
     970:	e200000c 	.word	0xe200000c
     974:	00001a10 	.word	0x00001a10
     978:	00400394 	.word	0x00400394
     97c:	1f000018 	.word	0x1f000018
     980:	00001a35 	.word	0x00001a35
     984:	00001a4e 	.word	0x00001a4e
     988:	00001a67 	.word	0x00001a67
     98c:	004005c0 	.word	0x004005c0
     990:	1f000010 	.word	0x1f000010

00000994 <event_wait>:
     994:	4b13      	ldr	r3, [pc, #76]	; (9e4 <event_wait+0x50>)
     996:	b570      	push	{r4, r5, r6, lr}
     998:	681b      	ldr	r3, [r3, #0]
     99a:	4c13      	ldr	r4, [pc, #76]	; (9e8 <event_wait+0x54>)
     99c:	2501      	movs	r5, #1
     99e:	409d      	lsls	r5, r3
     9a0:	7ea3      	ldrb	r3, [r4, #26]
     9a2:	4e12      	ldr	r6, [pc, #72]	; (9ec <event_wait+0x58>)
     9a4:	2b00      	cmp	r3, #0
     9a6:	d012      	beq.n	9ce <event_wait+0x3a>
     9a8:	2009      	movs	r0, #9
     9aa:	f7ff fd2d 	bl	408 <sark_cpu_state>
     9ae:	e001      	b.n	9b4 <event_wait+0x20>
     9b0:	f7ff ec0e 	blx	1d0 <cpu_wfi>
     9b4:	6833      	ldr	r3, [r6, #0]
     9b6:	1c2a      	adds	r2, r5, #0
     9b8:	439a      	bics	r2, r3
     9ba:	1e13      	subs	r3, r2, #0
     9bc:	d1f8      	bne.n	9b0 <event_wait+0x1c>
     9be:	7ea3      	ldrb	r3, [r4, #26]
     9c0:	2201      	movs	r2, #1
     9c2:	4053      	eors	r3, r2
     9c4:	2007      	movs	r0, #7
     9c6:	76a3      	strb	r3, [r4, #26]
     9c8:	f7ff fd1e 	bl	408 <sark_cpu_state>
     9cc:	e009      	b.n	9e2 <event_wait+0x4e>
     9ce:	2008      	movs	r0, #8
     9d0:	f7ff fd1a 	bl	408 <sark_cpu_state>
     9d4:	e001      	b.n	9da <event_wait+0x46>
     9d6:	f7ff ebfc 	blx	1d0 <cpu_wfi>
     9da:	6833      	ldr	r3, [r6, #0]
     9dc:	422b      	tst	r3, r5
     9de:	d1fa      	bne.n	9d6 <event_wait+0x42>
     9e0:	e7ed      	b.n	9be <event_wait+0x2a>
     9e2:	bd70      	pop	{r4, r5, r6, pc}
     9e4:	00400358 	.word	0x00400358
     9e8:	00400394 	.word	0x00400394
     9ec:	e2000058 	.word	0xe2000058

000009f0 <event_pause>:
     9f0:	b538      	push	{r3, r4, r5, lr}
     9f2:	1c05      	adds	r5, r0, #0
     9f4:	4c08      	ldr	r4, [pc, #32]	; (a18 <event_pause+0x28>)
     9f6:	2800      	cmp	r0, #0
     9f8:	d003      	beq.n	a02 <event_pause+0x12>
     9fa:	2301      	movs	r3, #1
     9fc:	7623      	strb	r3, [r4, #24]
     9fe:	200a      	movs	r0, #10
     a00:	e001      	b.n	a06 <event_pause+0x16>
     a02:	7620      	strb	r0, [r4, #24]
     a04:	2007      	movs	r0, #7
     a06:	f7ff fcff 	bl	408 <sark_cpu_state>
     a0a:	6b23      	ldr	r3, [r4, #48]	; 0x30
     a0c:	2b00      	cmp	r3, #0
     a0e:	d002      	beq.n	a16 <event_pause+0x26>
     a10:	6b61      	ldr	r1, [r4, #52]	; 0x34
     a12:	1c28      	adds	r0, r5, #0
     a14:	4798      	blx	r3
     a16:	bd38      	pop	{r3, r4, r5, pc}
     a18:	00400394 	.word	0x00400394

00000a1c <event_stop>:
     a1c:	4b03      	ldr	r3, [pc, #12]	; (a2c <event_stop+0x10>)
     a1e:	2202      	movs	r2, #2
     a20:	761a      	strb	r2, [r3, #24]
     a22:	4a03      	ldr	r2, [pc, #12]	; (a30 <event_stop+0x14>)
     a24:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
     a26:	6011      	str	r1, [r2, #0]
     a28:	6398      	str	r0, [r3, #56]	; 0x38
     a2a:	4770      	bx	lr
     a2c:	00400394 	.word	0x00400394
     a30:	1f000014 	.word	0x1f000014

00000a34 <event_alloc>:
     a34:	b570      	push	{r4, r5, r6, lr}
     a36:	2118      	movs	r1, #24
     a38:	1c06      	adds	r6, r0, #0
     a3a:	f000 f8dd 	bl	bf8 <sark_alloc>
     a3e:	4d0b      	ldr	r5, [pc, #44]	; (a6c <event_alloc+0x38>)
     a40:	1e04      	subs	r4, r0, #0
     a42:	d00d      	beq.n	a60 <event_alloc+0x2c>
     a44:	1c31      	adds	r1, r6, #0
     a46:	2218      	movs	r2, #24
     a48:	f7ff fcf0 	bl	42c <sark_block_init>
     a4c:	1c06      	adds	r6, r0, #0
     a4e:	f7ff ebb4 	blx	1b8 <cpu_int_disable>
     a52:	682a      	ldr	r2, [r5, #0]
     a54:	6032      	str	r2, [r6, #0]
     a56:	602c      	str	r4, [r5, #0]
     a58:	f7ff ebb6 	blx	1c8 <cpu_int_restore>
     a5c:	2001      	movs	r0, #1
     a5e:	e003      	b.n	a68 <event_alloc+0x34>
     a60:	696a      	ldr	r2, [r5, #20]
     a62:	2308      	movs	r3, #8
     a64:	4313      	orrs	r3, r2
     a66:	616b      	str	r3, [r5, #20]
     a68:	bd70      	pop	{r4, r5, r6, pc}
     a6a:	46c0      	nop			; (mov r8, r8)
     a6c:	00400394 	.word	0x00400394

00000a70 <sark_vic_init>:
     a70:	4b0b      	ldr	r3, [pc, #44]	; (aa0 <sark_vic_init+0x30>)
     a72:	2201      	movs	r2, #1
     a74:	4252      	negs	r2, r2
     a76:	b510      	push	{r4, lr}
     a78:	601a      	str	r2, [r3, #0]
     a7a:	4b0a      	ldr	r3, [pc, #40]	; (aa4 <sark_vic_init+0x34>)
     a7c:	2200      	movs	r2, #0
     a7e:	601a      	str	r2, [r3, #0]
     a80:	4b09      	ldr	r3, [pc, #36]	; (aa8 <sark_vic_init+0x38>)
     a82:	4c0a      	ldr	r4, [pc, #40]	; (aac <sark_vic_init+0x3c>)
     a84:	601a      	str	r2, [r3, #0]
     a86:	490a      	ldr	r1, [pc, #40]	; (ab0 <sark_vic_init+0x40>)
     a88:	4b0a      	ldr	r3, [pc, #40]	; (ab4 <sark_vic_init+0x44>)
     a8a:	1e58      	subs	r0, r3, #1
     a8c:	601a      	str	r2, [r3, #0]
     a8e:	38ff      	subs	r0, #255	; 0xff
     a90:	3304      	adds	r3, #4
     a92:	6004      	str	r4, [r0, #0]
     a94:	428b      	cmp	r3, r1
     a96:	d1f8      	bne.n	a8a <sark_vic_init+0x1a>
     a98:	4b07      	ldr	r3, [pc, #28]	; (ab8 <sark_vic_init+0x48>)
     a9a:	4a08      	ldr	r2, [pc, #32]	; (abc <sark_vic_init+0x4c>)
     a9c:	601a      	str	r2, [r3, #0]
     a9e:	bd10      	pop	{r4, pc}
     aa0:	1f000014 	.word	0x1f000014
     aa4:	1f00000c 	.word	0x1f00000c
     aa8:	1f000030 	.word	0x1f000030
     aac:	00000108 	.word	0x00000108
     ab0:	1f000240 	.word	0x1f000240
     ab4:	1f000200 	.word	0x1f000200
     ab8:	1f000034 	.word	0x1f000034
     abc:	0000030c 	.word	0x0000030c

00000ac0 <sark_vic_set>:
     ac0:	b530      	push	{r4, r5, lr}
     ac2:	2810      	cmp	r0, #16
     ac4:	d106      	bne.n	ad4 <sark_vic_set+0x14>
     ac6:	2020      	movs	r0, #32
     ac8:	61c3      	str	r3, [r0, #28]
     aca:	2001      	movs	r0, #1
     acc:	4b0a      	ldr	r3, [pc, #40]	; (af8 <sark_vic_set+0x38>)
     ace:	4088      	lsls	r0, r1
     ad0:	6018      	str	r0, [r3, #0]
     ad2:	e009      	b.n	ae8 <sark_vic_set+0x28>
     ad4:	4d09      	ldr	r5, [pc, #36]	; (afc <sark_vic_set+0x3c>)
     ad6:	0084      	lsls	r4, r0, #2
     ad8:	1964      	adds	r4, r4, r5
     ada:	6023      	str	r3, [r4, #0]
     adc:	4b08      	ldr	r3, [pc, #32]	; (b00 <sark_vic_set+0x40>)
     ade:	0080      	lsls	r0, r0, #2
     ae0:	18c0      	adds	r0, r0, r3
     ae2:	2320      	movs	r3, #32
     ae4:	430b      	orrs	r3, r1
     ae6:	6003      	str	r3, [r0, #0]
     ae8:	2a00      	cmp	r2, #0
     aea:	d004      	beq.n	af6 <sark_vic_set+0x36>
     aec:	2301      	movs	r3, #1
     aee:	408b      	lsls	r3, r1
     af0:	1c19      	adds	r1, r3, #0
     af2:	4b04      	ldr	r3, [pc, #16]	; (b04 <sark_vic_set+0x44>)
     af4:	6019      	str	r1, [r3, #0]
     af6:	bd30      	pop	{r4, r5, pc}
     af8:	1f00000c 	.word	0x1f00000c
     afc:	1f000100 	.word	0x1f000100
     b00:	1f000200 	.word	0x1f000200
     b04:	1f000010 	.word	0x1f000010

00000b08 <sark_fiq_han>:
     b08:	e92d000c 	push	{r2, r3}
     b0c:	e3a03202 	mov	r3, #536870912	; 0x20000000
     b10:	e5933014 	ldr	r3, [r3, #20]
     b14:	e59f3010 	ldr	r3, [pc, #16]	; b2c <sark_fiq_han+0x24>
     b18:	e5932038 	ldr	r2, [r3, #56]	; 0x38
     b1c:	e2822001 	add	r2, r2, #1
     b20:	e5832038 	str	r2, [r3, #56]	; 0x38
     b24:	e8bd000c 	pop	{r2, r3}
     b28:	e25ef004 	subs	pc, lr, #4
     b2c:	00400358 	.word	0x00400358

00000b30 <sark_xalloc>:
     b30:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     b32:	1c07      	adds	r7, r0, #0
     b34:	1c15      	adds	r5, r2, #0
     b36:	2aff      	cmp	r2, #255	; 0xff
     b38:	d858      	bhi.n	bec <sark_xalloc+0xbc>
     b3a:	2900      	cmp	r1, #0
     b3c:	d100      	bne.n	b40 <sark_xalloc+0x10>
     b3e:	e055      	b.n	bec <sark_xalloc+0xbc>
     b40:	0a1e      	lsrs	r6, r3, #8
     b42:	0798      	lsls	r0, r3, #30
     b44:	d401      	bmi.n	b4a <sark_xalloc+0x1a>
     b46:	225c      	movs	r2, #92	; 0x5c
     b48:	7816      	ldrb	r6, [r2, #0]
     b4a:	0236      	lsls	r6, r6, #8
     b4c:	1976      	adds	r6, r6, r5
     b4e:	2d00      	cmp	r5, #0
     b50:	d005      	beq.n	b5e <sark_xalloc+0x2e>
     b52:	4a27      	ldr	r2, [pc, #156]	; (bf0 <sark_xalloc+0xc0>)
     b54:	00b0      	lsls	r0, r6, #2
     b56:	6812      	ldr	r2, [r2, #0]
     b58:	5882      	ldr	r2, [r0, r2]
     b5a:	2a00      	cmp	r2, #0
     b5c:	d146      	bne.n	bec <sark_xalloc+0xbc>
     b5e:	2203      	movs	r2, #3
     b60:	3103      	adds	r1, #3
     b62:	4391      	bics	r1, r2
     b64:	2201      	movs	r2, #1
     b66:	3108      	adds	r1, #8
     b68:	4013      	ands	r3, r2
     b6a:	9101      	str	r1, [sp, #4]
     b6c:	9300      	str	r3, [sp, #0]
     b6e:	d003      	beq.n	b78 <sark_xalloc+0x48>
     b70:	2006      	movs	r0, #6
     b72:	f7ff eb32 	blx	1d8 <sark_lock_get>
     b76:	4684      	mov	ip, r0
     b78:	683c      	ldr	r4, [r7, #0]
     b7a:	2200      	movs	r2, #0
     b7c:	e02d      	b.n	bda <sark_xalloc+0xaa>
     b7e:	9801      	ldr	r0, [sp, #4]
     b80:	6821      	ldr	r1, [r4, #0]
     b82:	1823      	adds	r3, r4, r0
     b84:	42a3      	cmp	r3, r4
     b86:	d92a      	bls.n	bde <sark_xalloc+0xae>
     b88:	428b      	cmp	r3, r1
     b8a:	d902      	bls.n	b92 <sark_xalloc+0x62>
     b8c:	1c22      	adds	r2, r4, #0
     b8e:	6864      	ldr	r4, [r4, #4]
     b90:	e023      	b.n	bda <sark_xalloc+0xaa>
     b92:	1c18      	adds	r0, r3, #0
     b94:	3008      	adds	r0, #8
     b96:	4281      	cmp	r1, r0
     b98:	d904      	bls.n	ba4 <sark_xalloc+0x74>
     b9a:	6019      	str	r1, [r3, #0]
     b9c:	6861      	ldr	r1, [r4, #4]
     b9e:	6059      	str	r1, [r3, #4]
     ba0:	6023      	str	r3, [r4, #0]
     ba2:	6063      	str	r3, [r4, #4]
     ba4:	6863      	ldr	r3, [r4, #4]
     ba6:	2a00      	cmp	r2, #0
     ba8:	d001      	beq.n	bae <sark_xalloc+0x7e>
     baa:	6053      	str	r3, [r2, #4]
     bac:	e000      	b.n	bb0 <sark_xalloc+0x80>
     bae:	603b      	str	r3, [r7, #0]
     bb0:	9a00      	ldr	r2, [sp, #0]
     bb2:	2a00      	cmp	r2, #0
     bb4:	d003      	beq.n	bbe <sark_xalloc+0x8e>
     bb6:	4660      	mov	r0, ip
     bb8:	2106      	movs	r1, #6
     bba:	f7ff eb20 	blx	1fc <sark_lock_free>
     bbe:	480d      	ldr	r0, [pc, #52]	; (bf4 <sark_xalloc+0xc4>)
     bc0:	1833      	adds	r3, r6, r0
     bc2:	6063      	str	r3, [r4, #4]
     bc4:	2d00      	cmp	r5, #0
     bc6:	d005      	beq.n	bd4 <sark_xalloc+0xa4>
     bc8:	4b09      	ldr	r3, [pc, #36]	; (bf0 <sark_xalloc+0xc0>)
     bca:	1c22      	adds	r2, r4, #0
     bcc:	681b      	ldr	r3, [r3, #0]
     bce:	00b6      	lsls	r6, r6, #2
     bd0:	3208      	adds	r2, #8
     bd2:	50f2      	str	r2, [r6, r3]
     bd4:	1c20      	adds	r0, r4, #0
     bd6:	3008      	adds	r0, #8
     bd8:	e009      	b.n	bee <sark_xalloc+0xbe>
     bda:	2c00      	cmp	r4, #0
     bdc:	d1cf      	bne.n	b7e <sark_xalloc+0x4e>
     bde:	9900      	ldr	r1, [sp, #0]
     be0:	2900      	cmp	r1, #0
     be2:	d003      	beq.n	bec <sark_xalloc+0xbc>
     be4:	4660      	mov	r0, ip
     be6:	2106      	movs	r1, #6
     be8:	f7ff eb08 	blx	1fc <sark_lock_free>
     bec:	2000      	movs	r0, #0
     bee:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
     bf0:	e5007fdc 	.word	0xe5007fdc
     bf4:	ffff0000 	.word	0xffff0000

00000bf8 <sark_alloc>:
     bf8:	4a04      	ldr	r2, [pc, #16]	; (c0c <ETH_RX_SIZE+0xc>)
     bfa:	b508      	push	{r3, lr}
     bfc:	1c03      	adds	r3, r0, #0
     bfe:	6990      	ldr	r0, [r2, #24]
     c00:	2200      	movs	r2, #0
     c02:	4359      	muls	r1, r3
     c04:	1c13      	adds	r3, r2, #0
     c06:	f7ff ff93 	bl	b30 <sark_xalloc>
     c0a:	bd08      	pop	{r3, pc}
     c0c:	00400358 	.word	0x00400358

00000c10 <sark_heap_init>:
     c10:	1c03      	adds	r3, r0, #0
     c12:	330c      	adds	r3, #12
     c14:	3908      	subs	r1, #8
     c16:	6043      	str	r3, [r0, #4]
     c18:	6003      	str	r3, [r0, #0]
     c1a:	2300      	movs	r3, #0
     c1c:	6081      	str	r1, [r0, #8]
     c1e:	60c1      	str	r1, [r0, #12]
     c20:	6103      	str	r3, [r0, #16]
     c22:	600b      	str	r3, [r1, #0]
     c24:	604b      	str	r3, [r1, #4]
     c26:	4770      	bx	lr

00000c28 <io_buf_init>:
     c28:	b538      	push	{r3, r4, r5, lr}
     c2a:	4d0c      	ldr	r5, [pc, #48]	; (c5c <io_buf_init+0x34>)
     c2c:	4b0c      	ldr	r3, [pc, #48]	; (c60 <io_buf_init+0x38>)
     c2e:	6d29      	ldr	r1, [r5, #80]	; 0x50
     c30:	6818      	ldr	r0, [r3, #0]
     c32:	3110      	adds	r1, #16
     c34:	2200      	movs	r2, #0
     c36:	2301      	movs	r3, #1
     c38:	f7ff ff7a 	bl	b30 <sark_xalloc>
     c3c:	1e04      	subs	r4, r0, #0
     c3e:	d102      	bne.n	c46 <io_buf_init+0x1e>
     c40:	200e      	movs	r0, #14
     c42:	f7ff fa73 	bl	12c <rt_error>
     c46:	69eb      	ldr	r3, [r5, #28]
     c48:	6063      	str	r3, [r4, #4]
     c4a:	4a06      	ldr	r2, [pc, #24]	; (c64 <io_buf_init+0x3c>)
     c4c:	8b2b      	ldrh	r3, [r5, #24]
     c4e:	60a3      	str	r3, [r4, #8]
     c50:	2300      	movs	r3, #0
     c52:	1c20      	adds	r0, r4, #0
     c54:	6023      	str	r3, [r4, #0]
     c56:	6013      	str	r3, [r2, #0]
     c58:	60e3      	str	r3, [r4, #12]
     c5a:	bd38      	pop	{r3, r4, r5, pc}
     c5c:	e5007f00 	.word	0xe5007f00
     c60:	e5007fd0 	.word	0xe5007fd0
     c64:	00400010 	.word	0x00400010

00000c68 <io_put_char>:
     c68:	b570      	push	{r4, r5, r6, lr}
     c6a:	1c0d      	adds	r5, r1, #0
     c6c:	2803      	cmp	r0, #3
     c6e:	d907      	bls.n	c80 <io_put_char+0x18>
     c70:	4a34      	ldr	r2, [pc, #208]	; (d44 <io_put_char+0xdc>)
     c72:	6813      	ldr	r3, [r2, #0]
     c74:	54c1      	strb	r1, [r0, r3]
     c76:	3301      	adds	r3, #1
     c78:	6013      	str	r3, [r2, #0]
     c7a:	2200      	movs	r2, #0
     c7c:	54c2      	strb	r2, [r0, r3]
     c7e:	e060      	b.n	d42 <io_put_char+0xda>
     c80:	2800      	cmp	r0, #0
     c82:	d13a      	bne.n	cfa <io_put_char+0x92>
     c84:	4b30      	ldr	r3, [pc, #192]	; (d48 <io_put_char+0xe0>)
     c86:	681b      	ldr	r3, [r3, #0]
     c88:	2b00      	cmp	r3, #0
     c8a:	d11d      	bne.n	cc8 <io_put_char+0x60>
     c8c:	2001      	movs	r0, #1
     c8e:	2192      	movs	r1, #146	; 0x92
     c90:	4081      	lsls	r1, r0
     c92:	f7ff ffb1 	bl	bf8 <sark_alloc>
     c96:	1e04      	subs	r4, r0, #0
     c98:	d102      	bne.n	ca0 <io_put_char+0x38>
     c9a:	200e      	movs	r0, #14
     c9c:	f7ff fa46 	bl	12c <rt_error>
     ca0:	2307      	movs	r3, #7
     ca2:	7223      	strb	r3, [r4, #8]
     ca4:	2300      	movs	r3, #0
     ca6:	7263      	strb	r3, [r4, #9]
     ca8:	23ff      	movs	r3, #255	; 0xff
     caa:	72a3      	strb	r3, [r4, #10]
     cac:	4b27      	ldr	r3, [pc, #156]	; (d4c <io_put_char+0xe4>)
     cae:	889a      	ldrh	r2, [r3, #4]
     cb0:	81a2      	strh	r2, [r4, #12]
     cb2:	4a27      	ldr	r2, [pc, #156]	; (d50 <io_put_char+0xe8>)
     cb4:	6812      	ldr	r2, [r2, #0]
     cb6:	72e2      	strb	r2, [r4, #11]
     cb8:	881b      	ldrh	r3, [r3, #0]
     cba:	81e3      	strh	r3, [r4, #14]
     cbc:	2340      	movs	r3, #64	; 0x40
     cbe:	8223      	strh	r3, [r4, #16]
     cc0:	230c      	movs	r3, #12
     cc2:	80a3      	strh	r3, [r4, #4]
     cc4:	4b20      	ldr	r3, [pc, #128]	; (d48 <io_put_char+0xe0>)
     cc6:	601c      	str	r4, [r3, #0]
     cc8:	4b1f      	ldr	r3, [pc, #124]	; (d48 <io_put_char+0xe0>)
     cca:	6818      	ldr	r0, [r3, #0]
     ccc:	8883      	ldrh	r3, [r0, #4]
     cce:	18c2      	adds	r2, r0, r3
     cd0:	3301      	adds	r3, #1
     cd2:	041b      	lsls	r3, r3, #16
     cd4:	0c1b      	lsrs	r3, r3, #16
     cd6:	7215      	strb	r5, [r2, #8]
     cd8:	8083      	strh	r3, [r0, #4]
     cda:	2d00      	cmp	r5, #0
     cdc:	d005      	beq.n	cea <io_put_char+0x82>
     cde:	2d0a      	cmp	r5, #10
     ce0:	d003      	beq.n	cea <io_put_char+0x82>
     ce2:	2286      	movs	r2, #134	; 0x86
     ce4:	0052      	lsls	r2, r2, #1
     ce6:	4293      	cmp	r3, r2
     ce8:	d12b      	bne.n	d42 <io_put_char+0xda>
     cea:	210a      	movs	r1, #10
     cec:	f7ff fc80 	bl	5f0 <sark_msg_send>
     cf0:	4b15      	ldr	r3, [pc, #84]	; (d48 <io_put_char+0xe0>)
     cf2:	220c      	movs	r2, #12
     cf4:	681b      	ldr	r3, [r3, #0]
     cf6:	809a      	strh	r2, [r3, #4]
     cf8:	e023      	b.n	d42 <io_put_char+0xda>
     cfa:	2802      	cmp	r0, #2
     cfc:	d121      	bne.n	d42 <io_put_char+0xda>
     cfe:	4e15      	ldr	r6, [pc, #84]	; (d54 <io_put_char+0xec>)
     d00:	6833      	ldr	r3, [r6, #0]
     d02:	2b00      	cmp	r3, #0
     d04:	d105      	bne.n	d12 <io_put_char+0xaa>
     d06:	4b12      	ldr	r3, [pc, #72]	; (d50 <io_put_char+0xe8>)
     d08:	69dc      	ldr	r4, [r3, #28]
     d0a:	f7ff ff8d 	bl	c28 <io_buf_init>
     d0e:	65a0      	str	r0, [r4, #88]	; 0x58
     d10:	6030      	str	r0, [r6, #0]
     d12:	4a11      	ldr	r2, [pc, #68]	; (d58 <io_put_char+0xf0>)
     d14:	6834      	ldr	r4, [r6, #0]
     d16:	6813      	ldr	r3, [r2, #0]
     d18:	18e1      	adds	r1, r4, r3
     d1a:	3301      	adds	r3, #1
     d1c:	6013      	str	r3, [r2, #0]
     d1e:	4a0b      	ldr	r2, [pc, #44]	; (d4c <io_put_char+0xe4>)
     d20:	740d      	strb	r5, [r1, #16]
     d22:	6d12      	ldr	r2, [r2, #80]	; 0x50
     d24:	4293      	cmp	r3, r2
     d26:	d107      	bne.n	d38 <io_put_char+0xd0>
     d28:	60e3      	str	r3, [r4, #12]
     d2a:	f7ff ff7d 	bl	c28 <io_buf_init>
     d2e:	6833      	ldr	r3, [r6, #0]
     d30:	6020      	str	r0, [r4, #0]
     d32:	681b      	ldr	r3, [r3, #0]
     d34:	6033      	str	r3, [r6, #0]
     d36:	e004      	b.n	d42 <io_put_char+0xda>
     d38:	2d00      	cmp	r5, #0
     d3a:	d001      	beq.n	d40 <io_put_char+0xd8>
     d3c:	2d0a      	cmp	r5, #10
     d3e:	d100      	bne.n	d42 <io_put_char+0xda>
     d40:	60e3      	str	r3, [r4, #12]
     d42:	bd70      	pop	{r4, r5, r6, pc}
     d44:	00400014 	.word	0x00400014
     d48:	00400008 	.word	0x00400008
     d4c:	e5007f00 	.word	0xe5007f00
     d50:	00400358 	.word	0x00400358
     d54:	0040000c 	.word	0x0040000c
     d58:	00400010 	.word	0x00400010

00000d5c <io_put_fixed>:
     d5c:	b5f0      	push	{r4, r5, r6, r7, lr}
     d5e:	b08d      	sub	sp, #52	; 0x34
     d60:	9001      	str	r0, [sp, #4]
     d62:	1c15      	adds	r5, r2, #0
     d64:	2b0c      	cmp	r3, #12
     d66:	d900      	bls.n	d6a <io_put_fixed+0xe>
     d68:	230c      	movs	r3, #12
     d6a:	1c0a      	adds	r2, r1, #0
     d6c:	2400      	movs	r4, #0
     d6e:	e008      	b.n	d82 <io_put_fixed+0x26>
     d70:	0c17      	lsrs	r7, r2, #16
     d72:	3730      	adds	r7, #48	; 0x30
     d74:	46bc      	mov	ip, r7
     d76:	a805      	add	r0, sp, #20
     d78:	3401      	adds	r4, #1
     d7a:	18c7      	adds	r7, r0, r3
     d7c:	4266      	negs	r6, r4
     d7e:	4660      	mov	r0, ip
     d80:	55b8      	strb	r0, [r7, r6]
     d82:	0412      	lsls	r2, r2, #16
     d84:	0c12      	lsrs	r2, r2, #16
     d86:	200a      	movs	r0, #10
     d88:	4342      	muls	r2, r0
     d8a:	429c      	cmp	r4, r3
     d8c:	d1f0      	bne.n	d70 <io_put_fixed+0x14>
     d8e:	0c12      	lsrs	r2, r2, #16
     d90:	2004      	movs	r0, #4
     d92:	4290      	cmp	r0, r2
     d94:	4180      	sbcs	r0, r0
     d96:	2601      	movs	r6, #1
     d98:	4240      	negs	r0, r0
     d9a:	2200      	movs	r2, #0
     d9c:	46b4      	mov	ip, r6
     d9e:	2730      	movs	r7, #48	; 0x30
     da0:	e00a      	b.n	db8 <io_put_fixed+0x5c>
     da2:	a805      	add	r0, sp, #20
     da4:	5c16      	ldrb	r6, [r2, r0]
     da6:	2e38      	cmp	r6, #56	; 0x38
     da8:	d902      	bls.n	db0 <io_put_fixed+0x54>
     daa:	5417      	strb	r7, [r2, r0]
     dac:	2001      	movs	r0, #1
     dae:	e002      	b.n	db6 <io_put_fixed+0x5a>
     db0:	3601      	adds	r6, #1
     db2:	5416      	strb	r6, [r2, r0]
     db4:	2000      	movs	r0, #0
     db6:	3201      	adds	r2, #1
     db8:	429a      	cmp	r2, r3
     dba:	d202      	bcs.n	dc2 <io_put_fixed+0x66>
     dbc:	4666      	mov	r6, ip
     dbe:	4230      	tst	r0, r6
     dc0:	d1ef      	bne.n	da2 <io_put_fixed+0x46>
     dc2:	2b00      	cmp	r3, #0
     dc4:	d003      	beq.n	dce <io_put_fixed+0x72>
     dc6:	242e      	movs	r4, #46	; 0x2e
     dc8:	aa05      	add	r2, sp, #20
     dca:	54d4      	strb	r4, [r2, r3]
     dcc:	1c5c      	adds	r4, r3, #1
     dce:	0c09      	lsrs	r1, r1, #16
     dd0:	1841      	adds	r1, r0, r1
     dd2:	a803      	add	r0, sp, #12
     dd4:	f7ff ea6a 	blx	2ac <sark_div10>
     dd8:	9a04      	ldr	r2, [sp, #16]
     dda:	9903      	ldr	r1, [sp, #12]
     ddc:	ab05      	add	r3, sp, #20
     dde:	3230      	adds	r2, #48	; 0x30
     de0:	54e2      	strb	r2, [r4, r3]
     de2:	1c66      	adds	r6, r4, #1
     de4:	2900      	cmp	r1, #0
     de6:	d001      	beq.n	dec <io_put_fixed+0x90>
     de8:	1c34      	adds	r4, r6, #0
     dea:	e7f2      	b.n	dd2 <io_put_fixed+0x76>
     dec:	9813      	ldr	r0, [sp, #76]	; 0x4c
     dee:	2800      	cmp	r0, #0
     df0:	d008      	beq.n	e04 <io_put_fixed+0xa8>
     df2:	222d      	movs	r2, #45	; 0x2d
     df4:	559a      	strb	r2, [r3, r6]
     df6:	1ca6      	adds	r6, r4, #2
     df8:	e004      	b.n	e04 <io_put_fixed+0xa8>
     dfa:	9801      	ldr	r0, [sp, #4]
     dfc:	9912      	ldr	r1, [sp, #72]	; 0x48
     dfe:	f7ff ff33 	bl	c68 <io_put_char>
     e02:	3d01      	subs	r5, #1
     e04:	1c73      	adds	r3, r6, #1
     e06:	429d      	cmp	r5, r3
     e08:	d8f7      	bhi.n	dfa <io_put_fixed+0x9e>
     e0a:	3e01      	subs	r6, #1
     e0c:	ab05      	add	r3, sp, #20
     e0e:	5cf1      	ldrb	r1, [r6, r3]
     e10:	9801      	ldr	r0, [sp, #4]
     e12:	f7ff ff29 	bl	c68 <io_put_char>
     e16:	2e00      	cmp	r6, #0
     e18:	d1f7      	bne.n	e0a <io_put_fixed+0xae>
     e1a:	b00d      	add	sp, #52	; 0x34
     e1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

00000e20 <io_printf>:
     e20:	b40e      	push	{r1, r2, r3}
     e22:	b5f0      	push	{r4, r5, r6, r7, lr}
     e24:	b08c      	sub	sp, #48	; 0x30
     e26:	1c04      	adds	r4, r0, #0
     e28:	9d11      	ldr	r5, [sp, #68]	; 0x44
     e2a:	2803      	cmp	r0, #3
     e2c:	d100      	bne.n	e30 <io_printf+0x10>
     e2e:	e145      	b.n	10bc <SV_SIZE+0xbc>
     e30:	d903      	bls.n	e3a <io_printf+0x1a>
     e32:	4aa5      	ldr	r2, [pc, #660]	; (10c8 <SV_SIZE+0xc8>)
     e34:	2300      	movs	r3, #0
     e36:	7003      	strb	r3, [r0, #0]
     e38:	6013      	str	r3, [r2, #0]
     e3a:	ab12      	add	r3, sp, #72	; 0x48
     e3c:	9305      	str	r3, [sp, #20]
     e3e:	7829      	ldrb	r1, [r5, #0]
     e40:	2900      	cmp	r1, #0
     e42:	d100      	bne.n	e46 <io_printf+0x26>
     e44:	e13a      	b.n	10bc <SV_SIZE+0xbc>
     e46:	2925      	cmp	r1, #37	; 0x25
     e48:	d001      	beq.n	e4e <io_printf+0x2e>
     e4a:	3501      	adds	r5, #1
     e4c:	e053      	b.n	ef6 <io_printf+0xd6>
     e4e:	7869      	ldrb	r1, [r5, #1]
     e50:	3502      	adds	r5, #2
     e52:	2900      	cmp	r1, #0
     e54:	d100      	bne.n	e58 <io_printf+0x38>
     e56:	e131      	b.n	10bc <SV_SIZE+0xbc>
     e58:	2930      	cmp	r1, #48	; 0x30
     e5a:	d002      	beq.n	e62 <io_printf+0x42>
     e5c:	2020      	movs	r0, #32
     e5e:	9003      	str	r0, [sp, #12]
     e60:	e000      	b.n	e64 <io_printf+0x44>
     e62:	9103      	str	r1, [sp, #12]
     e64:	2600      	movs	r6, #0
     e66:	220a      	movs	r2, #10
     e68:	e007      	b.n	e7a <io_printf+0x5a>
     e6a:	4356      	muls	r6, r2
     e6c:	1876      	adds	r6, r6, r1
     e6e:	7829      	ldrb	r1, [r5, #0]
     e70:	3e30      	subs	r6, #48	; 0x30
     e72:	3501      	adds	r5, #1
     e74:	2900      	cmp	r1, #0
     e76:	d100      	bne.n	e7a <io_printf+0x5a>
     e78:	e120      	b.n	10bc <SV_SIZE+0xbc>
     e7a:	1c0b      	adds	r3, r1, #0
     e7c:	3b30      	subs	r3, #48	; 0x30
     e7e:	2b09      	cmp	r3, #9
     e80:	d9f3      	bls.n	e6a <io_printf+0x4a>
     e82:	1c37      	adds	r7, r6, #0
     e84:	2306      	movs	r3, #6
     e86:	292e      	cmp	r1, #46	; 0x2e
     e88:	d110      	bne.n	eac <io_printf+0x8c>
     e8a:	7829      	ldrb	r1, [r5, #0]
     e8c:	2300      	movs	r3, #0
     e8e:	3501      	adds	r5, #1
     e90:	200a      	movs	r0, #10
     e92:	e004      	b.n	e9e <io_printf+0x7e>
     e94:	4343      	muls	r3, r0
     e96:	185b      	adds	r3, r3, r1
     e98:	3b30      	subs	r3, #48	; 0x30
     e9a:	7829      	ldrb	r1, [r5, #0]
     e9c:	3501      	adds	r5, #1
     e9e:	1c0a      	adds	r2, r1, #0
     ea0:	3a30      	subs	r2, #48	; 0x30
     ea2:	2a09      	cmp	r2, #9
     ea4:	d9f6      	bls.n	e94 <io_printf+0x74>
     ea6:	2900      	cmp	r1, #0
     ea8:	d100      	bne.n	eac <io_printf+0x8c>
     eaa:	e107      	b.n	10bc <SV_SIZE+0xbc>
     eac:	296b      	cmp	r1, #107	; 0x6b
     eae:	d100      	bne.n	eb2 <io_printf+0x92>
     eb0:	e0b0      	b.n	1014 <SV_SIZE+0x14>
     eb2:	d80d      	bhi.n	ed0 <io_printf+0xb0>
     eb4:	2963      	cmp	r1, #99	; 0x63
     eb6:	d01a      	beq.n	eee <io_printf+0xce>
     eb8:	d805      	bhi.n	ec6 <io_printf+0xa6>
     eba:	294b      	cmp	r1, #75	; 0x4b
     ebc:	d100      	bne.n	ec0 <io_printf+0xa0>
     ebe:	e09a      	b.n	ff6 <RTR_TST2+0xf2>
     ec0:	2952      	cmp	r1, #82	; 0x52
     ec2:	d118      	bne.n	ef6 <io_printf+0xd6>
     ec4:	e09e      	b.n	1004 <SV_SIZE+0x4>
     ec6:	2964      	cmp	r1, #100	; 0x64
     ec8:	d036      	beq.n	f38 <RTR_TST2+0x34>
     eca:	2966      	cmp	r1, #102	; 0x66
     ecc:	d113      	bne.n	ef6 <io_printf+0xd6>
     ece:	e092      	b.n	ff6 <RTR_TST2+0xf2>
     ed0:	2975      	cmp	r1, #117	; 0x75
     ed2:	d066      	beq.n	fa2 <RTR_TST2+0x9e>
     ed4:	d805      	bhi.n	ee2 <io_printf+0xc2>
     ed6:	2972      	cmp	r1, #114	; 0x72
     ed8:	d100      	bne.n	edc <io_printf+0xbc>
     eda:	e09b      	b.n	1014 <SV_SIZE+0x14>
     edc:	2973      	cmp	r1, #115	; 0x73
     ede:	d10a      	bne.n	ef6 <io_printf+0xd6>
     ee0:	e00d      	b.n	efe <io_printf+0xde>
     ee2:	2978      	cmp	r1, #120	; 0x78
     ee4:	d100      	bne.n	ee8 <io_printf+0xc8>
     ee6:	e0a6      	b.n	1036 <SV_SIZE+0x36>
     ee8:	297a      	cmp	r1, #122	; 0x7a
     eea:	d104      	bne.n	ef6 <io_printf+0xd6>
     eec:	e0ce      	b.n	108c <SV_SIZE+0x8c>
     eee:	9b05      	ldr	r3, [sp, #20]
     ef0:	6819      	ldr	r1, [r3, #0]
     ef2:	1d1a      	adds	r2, r3, #4
     ef4:	9205      	str	r2, [sp, #20]
     ef6:	1c20      	adds	r0, r4, #0
     ef8:	f7ff feb6 	bl	c68 <io_put_char>
     efc:	e79f      	b.n	e3e <io_printf+0x1e>
     efe:	9b05      	ldr	r3, [sp, #20]
     f00:	681e      	ldr	r6, [r3, #0]
     f02:	1d1a      	adds	r2, r3, #4
     f04:	1c33      	adds	r3, r6, #0
     f06:	9205      	str	r2, [sp, #20]
     f08:	781a      	ldrb	r2, [r3, #0]
     f0a:	1b99      	subs	r1, r3, r6
     f0c:	9103      	str	r1, [sp, #12]
     f0e:	3301      	adds	r3, #1
     f10:	2a00      	cmp	r2, #0
     f12:	d1f9      	bne.n	f08 <RTR_TST2+0x4>
     f14:	e004      	b.n	f20 <RTR_TST2+0x1c>
     f16:	1c20      	adds	r0, r4, #0
     f18:	2120      	movs	r1, #32
     f1a:	f7ff fea5 	bl	c68 <io_put_char>
     f1e:	3f01      	subs	r7, #1
     f20:	9a03      	ldr	r2, [sp, #12]
     f22:	4297      	cmp	r7, r2
     f24:	dcf7      	bgt.n	f16 <RTR_TST2+0x12>
     f26:	e003      	b.n	f30 <RTR_TST2+0x2c>
     f28:	1c20      	adds	r0, r4, #0
     f2a:	3601      	adds	r6, #1
     f2c:	f7ff fe9c 	bl	c68 <io_put_char>
     f30:	7831      	ldrb	r1, [r6, #0]
     f32:	2900      	cmp	r1, #0
     f34:	d1f8      	bne.n	f28 <RTR_TST2+0x24>
     f36:	e782      	b.n	e3e <io_printf+0x1e>
     f38:	9b05      	ldr	r3, [sp, #20]
     f3a:	6819      	ldr	r1, [r3, #0]
     f3c:	1d1a      	adds	r2, r3, #4
     f3e:	2300      	movs	r3, #0
     f40:	9205      	str	r2, [sp, #20]
     f42:	9303      	str	r3, [sp, #12]
     f44:	4299      	cmp	r1, r3
     f46:	da02      	bge.n	f4e <RTR_TST2+0x4a>
     f48:	202d      	movs	r0, #45	; 0x2d
     f4a:	4249      	negs	r1, r1
     f4c:	9003      	str	r0, [sp, #12]
     f4e:	2700      	movs	r7, #0
     f50:	a806      	add	r0, sp, #24
     f52:	f7ff e9ac 	blx	2ac <sark_div10>
     f56:	9a07      	ldr	r2, [sp, #28]
     f58:	9906      	ldr	r1, [sp, #24]
     f5a:	ab08      	add	r3, sp, #32
     f5c:	3230      	adds	r2, #48	; 0x30
     f5e:	54fa      	strb	r2, [r7, r3]
     f60:	3701      	adds	r7, #1
     f62:	2900      	cmp	r1, #0
     f64:	d1f4      	bne.n	f50 <RTR_TST2+0x4c>
     f66:	e001      	b.n	f6c <RTR_TST2+0x68>
     f68:	2f00      	cmp	r7, #0
     f6a:	d003      	beq.n	f74 <RTR_TST2+0x70>
     f6c:	3f01      	subs	r7, #1
     f6e:	5cfa      	ldrb	r2, [r7, r3]
     f70:	2a30      	cmp	r2, #48	; 0x30
     f72:	d0f9      	beq.n	f68 <RTR_TST2+0x64>
     f74:	9903      	ldr	r1, [sp, #12]
     f76:	2900      	cmp	r1, #0
     f78:	d007      	beq.n	f8a <RTR_TST2+0x86>
     f7a:	3701      	adds	r7, #1
     f7c:	55d9      	strb	r1, [r3, r7]
     f7e:	e004      	b.n	f8a <RTR_TST2+0x86>
     f80:	1c20      	adds	r0, r4, #0
     f82:	2120      	movs	r1, #32
     f84:	f7ff fe70 	bl	c68 <io_put_char>
     f88:	3e01      	subs	r6, #1
     f8a:	1c7b      	adds	r3, r7, #1
     f8c:	429e      	cmp	r6, r3
     f8e:	d8f7      	bhi.n	f80 <RTR_TST2+0x7c>
     f90:	ab08      	add	r3, sp, #32
     f92:	5cf9      	ldrb	r1, [r7, r3]
     f94:	1c20      	adds	r0, r4, #0
     f96:	3f01      	subs	r7, #1
     f98:	f7ff fe66 	bl	c68 <io_put_char>
     f9c:	1c79      	adds	r1, r7, #1
     f9e:	d1f7      	bne.n	f90 <RTR_TST2+0x8c>
     fa0:	e74d      	b.n	e3e <io_printf+0x1e>
     fa2:	9b05      	ldr	r3, [sp, #20]
     fa4:	2700      	movs	r7, #0
     fa6:	6819      	ldr	r1, [r3, #0]
     fa8:	1d1a      	adds	r2, r3, #4
     faa:	9205      	str	r2, [sp, #20]
     fac:	a806      	add	r0, sp, #24
     fae:	f7ff e97e 	blx	2ac <sark_div10>
     fb2:	9a07      	ldr	r2, [sp, #28]
     fb4:	9906      	ldr	r1, [sp, #24]
     fb6:	3230      	adds	r2, #48	; 0x30
     fb8:	ab08      	add	r3, sp, #32
     fba:	54fa      	strb	r2, [r7, r3]
     fbc:	3701      	adds	r7, #1
     fbe:	2900      	cmp	r1, #0
     fc0:	d1f4      	bne.n	fac <RTR_TST2+0xa8>
     fc2:	e001      	b.n	fc8 <RTR_TST2+0xc4>
     fc4:	2f00      	cmp	r7, #0
     fc6:	d00a      	beq.n	fde <RTR_TST2+0xda>
     fc8:	3f01      	subs	r7, #1
     fca:	ab08      	add	r3, sp, #32
     fcc:	5cfb      	ldrb	r3, [r7, r3]
     fce:	2b30      	cmp	r3, #48	; 0x30
     fd0:	d105      	bne.n	fde <RTR_TST2+0xda>
     fd2:	e7f7      	b.n	fc4 <RTR_TST2+0xc0>
     fd4:	1c20      	adds	r0, r4, #0
     fd6:	9903      	ldr	r1, [sp, #12]
     fd8:	f7ff fe46 	bl	c68 <io_put_char>
     fdc:	3e01      	subs	r6, #1
     fde:	1c7b      	adds	r3, r7, #1
     fe0:	429e      	cmp	r6, r3
     fe2:	d8f7      	bhi.n	fd4 <RTR_TST2+0xd0>
     fe4:	ab08      	add	r3, sp, #32
     fe6:	5cf9      	ldrb	r1, [r7, r3]
     fe8:	1c20      	adds	r0, r4, #0
     fea:	3f01      	subs	r7, #1
     fec:	f7ff fe3c 	bl	c68 <io_put_char>
     ff0:	1c7a      	adds	r2, r7, #1
     ff2:	d1f7      	bne.n	fe4 <RTR_TST2+0xe0>
     ff4:	e723      	b.n	e3e <io_printf+0x1e>
     ff6:	9a05      	ldr	r2, [sp, #20]
     ff8:	9803      	ldr	r0, [sp, #12]
     ffa:	1d11      	adds	r1, r2, #4
     ffc:	9105      	str	r1, [sp, #20]
     ffe:	6811      	ldr	r1, [r2, #0]
    1000:	9000      	str	r0, [sp, #0]
    1002:	e005      	b.n	1010 <SV_SIZE+0x10>
    1004:	9a05      	ldr	r2, [sp, #20]
    1006:	1d11      	adds	r1, r2, #4
    1008:	9105      	str	r1, [sp, #20]
    100a:	6811      	ldr	r1, [r2, #0]
    100c:	9a03      	ldr	r2, [sp, #12]
    100e:	9200      	str	r2, [sp, #0]
    1010:	2200      	movs	r2, #0
    1012:	e00a      	b.n	102a <SV_SIZE+0x2a>
    1014:	9a05      	ldr	r2, [sp, #20]
    1016:	1d11      	adds	r1, r2, #4
    1018:	6812      	ldr	r2, [r2, #0]
    101a:	9105      	str	r1, [sp, #20]
    101c:	17d0      	asrs	r0, r2, #31
    101e:	1811      	adds	r1, r2, r0
    1020:	4041      	eors	r1, r0
    1022:	0049      	lsls	r1, r1, #1
    1024:	9803      	ldr	r0, [sp, #12]
    1026:	0fd2      	lsrs	r2, r2, #31
    1028:	9000      	str	r0, [sp, #0]
    102a:	9201      	str	r2, [sp, #4]
    102c:	1c20      	adds	r0, r4, #0
    102e:	1c32      	adds	r2, r6, #0
    1030:	f7ff fe94 	bl	d5c <io_put_fixed>
    1034:	e703      	b.n	e3e <io_printf+0x1e>
    1036:	9b05      	ldr	r3, [sp, #20]
    1038:	210f      	movs	r1, #15
    103a:	1d1a      	adds	r2, r3, #4
    103c:	4823      	ldr	r0, [pc, #140]	; (10cc <SV_SIZE+0xcc>)
    103e:	681b      	ldr	r3, [r3, #0]
    1040:	2700      	movs	r7, #0
    1042:	468c      	mov	ip, r1
    1044:	9205      	str	r2, [sp, #20]
    1046:	4662      	mov	r2, ip
    1048:	401a      	ands	r2, r3
    104a:	5c81      	ldrb	r1, [r0, r2]
    104c:	aa08      	add	r2, sp, #32
    104e:	54b9      	strb	r1, [r7, r2]
    1050:	091b      	lsrs	r3, r3, #4
    1052:	3701      	adds	r7, #1
    1054:	2b00      	cmp	r3, #0
    1056:	d1f6      	bne.n	1046 <SV_SIZE+0x46>
    1058:	e001      	b.n	105e <SV_SIZE+0x5e>
    105a:	2f00      	cmp	r7, #0
    105c:	d00a      	beq.n	1074 <SV_SIZE+0x74>
    105e:	3f01      	subs	r7, #1
    1060:	ab08      	add	r3, sp, #32
    1062:	5cfb      	ldrb	r3, [r7, r3]
    1064:	2b30      	cmp	r3, #48	; 0x30
    1066:	d105      	bne.n	1074 <SV_SIZE+0x74>
    1068:	e7f7      	b.n	105a <SV_SIZE+0x5a>
    106a:	1c20      	adds	r0, r4, #0
    106c:	9903      	ldr	r1, [sp, #12]
    106e:	f7ff fdfb 	bl	c68 <io_put_char>
    1072:	3e01      	subs	r6, #1
    1074:	1c7b      	adds	r3, r7, #1
    1076:	429e      	cmp	r6, r3
    1078:	d8f7      	bhi.n	106a <SV_SIZE+0x6a>
    107a:	ab08      	add	r3, sp, #32
    107c:	5cf9      	ldrb	r1, [r7, r3]
    107e:	1c20      	adds	r0, r4, #0
    1080:	3f01      	subs	r7, #1
    1082:	f7ff fdf1 	bl	c68 <io_put_char>
    1086:	1c7a      	adds	r2, r7, #1
    1088:	d1f7      	bne.n	107a <SV_SIZE+0x7a>
    108a:	e6d8      	b.n	e3e <io_printf+0x1e>
    108c:	9b05      	ldr	r3, [sp, #20]
    108e:	1e77      	subs	r7, r6, #1
    1090:	1d1a      	adds	r2, r3, #4
    1092:	681b      	ldr	r3, [r3, #0]
    1094:	9303      	str	r3, [sp, #12]
    1096:	4b0e      	ldr	r3, [pc, #56]	; (10d0 <SV_SIZE+0xd0>)
    1098:	9205      	str	r2, [sp, #20]
    109a:	18f6      	adds	r6, r6, r3
    109c:	00b6      	lsls	r6, r6, #2
    109e:	e00a      	b.n	10b6 <SV_SIZE+0xb6>
    10a0:	9a03      	ldr	r2, [sp, #12]
    10a2:	230f      	movs	r3, #15
    10a4:	40f2      	lsrs	r2, r6
    10a6:	4013      	ands	r3, r2
    10a8:	4a08      	ldr	r2, [pc, #32]	; (10cc <SV_SIZE+0xcc>)
    10aa:	1c20      	adds	r0, r4, #0
    10ac:	5cd1      	ldrb	r1, [r2, r3]
    10ae:	f7ff fddb 	bl	c68 <io_put_char>
    10b2:	3f01      	subs	r7, #1
    10b4:	3e04      	subs	r6, #4
    10b6:	2f00      	cmp	r7, #0
    10b8:	daf2      	bge.n	10a0 <SV_SIZE+0xa0>
    10ba:	e6c0      	b.n	e3e <io_printf+0x1e>
    10bc:	b00c      	add	sp, #48	; 0x30
    10be:	bcf0      	pop	{r4, r5, r6, r7}
    10c0:	bc08      	pop	{r3}
    10c2:	b003      	add	sp, #12
    10c4:	4718      	bx	r3
    10c6:	46c0      	nop			; (mov r8, r8)
    10c8:	00400014 	.word	0x00400014
    10cc:	00001a83 	.word	0x00001a83
    10d0:	3fffffff 	.word	0x3fffffff

000010d4 <configure_dma_controller>:
    10d4:	4b06      	ldr	r3, [pc, #24]	; (10f0 <configure_dma_controller+0x1c>)
    10d6:	223f      	movs	r2, #63	; 0x3f
    10d8:	601a      	str	r2, [r3, #0]
    10da:	220d      	movs	r2, #13
    10dc:	601a      	str	r2, [r3, #0]
    10de:	4b05      	ldr	r3, [pc, #20]	; (10f4 <configure_dma_controller+0x20>)
    10e0:	22c0      	movs	r2, #192	; 0xc0
    10e2:	0112      	lsls	r2, r2, #4
    10e4:	601a      	str	r2, [r3, #0]
    10e6:	4b04      	ldr	r3, [pc, #16]	; (10f8 <configure_dma_controller+0x24>)
    10e8:	2203      	movs	r2, #3
    10ea:	601a      	str	r2, [r3, #0]
    10ec:	4770      	bx	lr
    10ee:	46c0      	nop			; (mov r8, r8)
    10f0:	40000010 	.word	0x40000010
    10f4:	40000018 	.word	0x40000018
    10f8:	40000028 	.word	0x40000028

000010fc <configure_timer1>:
    10fc:	4b07      	ldr	r3, [pc, #28]	; (111c <configure_timer1+0x20>)
    10fe:	2200      	movs	r2, #0
    1100:	601a      	str	r2, [r3, #0]
    1102:	4b07      	ldr	r3, [pc, #28]	; (1120 <configure_timer1+0x24>)
    1104:	2201      	movs	r2, #1
    1106:	601a      	str	r2, [r3, #0]
    1108:	4b06      	ldr	r3, [pc, #24]	; (1124 <configure_timer1+0x28>)
    110a:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    110c:	4358      	muls	r0, r3
    110e:	2384      	movs	r3, #132	; 0x84
    1110:	059b      	lsls	r3, r3, #22
    1112:	6018      	str	r0, [r3, #0]
    1114:	4b04      	ldr	r3, [pc, #16]	; (1128 <configure_timer1+0x2c>)
    1116:	6018      	str	r0, [r3, #0]
    1118:	4770      	bx	lr
    111a:	46c0      	nop			; (mov r8, r8)
    111c:	21000008 	.word	0x21000008
    1120:	2100000c 	.word	0x2100000c
    1124:	e5007f00 	.word	0xe5007f00
    1128:	21000018 	.word	0x21000018

0000112c <configure_vic>:
    112c:	4b2f      	ldr	r3, [pc, #188]	; (11ec <configure_vic+0xc0>)
    112e:	4a30      	ldr	r2, [pc, #192]	; (11f0 <configure_vic+0xc4>)
    1130:	b510      	push	{r4, lr}
    1132:	601a      	str	r2, [r3, #0]
    1134:	4a2f      	ldr	r2, [pc, #188]	; (11f4 <configure_vic+0xc8>)
    1136:	2320      	movs	r3, #32
    1138:	69d9      	ldr	r1, [r3, #28]
    113a:	6011      	str	r1, [r2, #0]
    113c:	492e      	ldr	r1, [pc, #184]	; (11f8 <configure_vic+0xcc>)
    113e:	4a2f      	ldr	r2, [pc, #188]	; (11fc <configure_vic+0xd0>)
    1140:	6808      	ldr	r0, [r1, #0]
    1142:	6010      	str	r0, [r2, #0]
    1144:	4a2e      	ldr	r2, [pc, #184]	; (1200 <configure_vic+0xd4>)
    1146:	482f      	ldr	r0, [pc, #188]	; (1204 <configure_vic+0xd8>)
    1148:	6814      	ldr	r4, [r2, #0]
    114a:	6004      	str	r4, [r0, #0]
    114c:	482e      	ldr	r0, [pc, #184]	; (1208 <configure_vic+0xdc>)
    114e:	6800      	ldr	r0, [r0, #0]
    1150:	2805      	cmp	r0, #5
    1152:	d815      	bhi.n	1180 <configure_vic+0x54>
    1154:	f7ff f8f4 	bl	340 <__gnu_thumb1_case_uqi>
    1158:	140c0703 	.word	0x140c0703
    115c:	0310      	.short	0x0310
    115e:	482b      	ldr	r0, [pc, #172]	; (120c <configure_vic+0xe0>)
    1160:	61d8      	str	r0, [r3, #28]
    1162:	2340      	movs	r3, #64	; 0x40
    1164:	e00d      	b.n	1182 <configure_vic+0x56>
    1166:	482a      	ldr	r0, [pc, #168]	; (1210 <configure_vic+0xe4>)
    1168:	61d8      	str	r0, [r3, #28]
    116a:	2380      	movs	r3, #128	; 0x80
    116c:	015b      	lsls	r3, r3, #5
    116e:	e008      	b.n	1182 <configure_vic+0x56>
    1170:	4828      	ldr	r0, [pc, #160]	; (1214 <configure_vic+0xe8>)
    1172:	61d8      	str	r0, [r3, #28]
    1174:	2310      	movs	r3, #16
    1176:	e004      	b.n	1182 <configure_vic+0x56>
    1178:	4827      	ldr	r0, [pc, #156]	; (1218 <configure_vic+0xec>)
    117a:	61d8      	str	r0, [r3, #28]
    117c:	2302      	movs	r3, #2
    117e:	e000      	b.n	1182 <configure_vic+0x56>
    1180:	2300      	movs	r3, #0
    1182:	2059      	movs	r0, #89	; 0x59
    1184:	7800      	ldrb	r0, [r0, #0]
    1186:	4c25      	ldr	r4, [pc, #148]	; (121c <configure_vic+0xf0>)
    1188:	0080      	lsls	r0, r0, #2
    118a:	1900      	adds	r0, r0, r4
    118c:	2400      	movs	r4, #0
    118e:	6004      	str	r4, [r0, #0]
    1190:	4823      	ldr	r0, [pc, #140]	; (1220 <configure_vic+0xf4>)
    1192:	4c24      	ldr	r4, [pc, #144]	; (1224 <configure_vic+0xf8>)
    1194:	6004      	str	r4, [r0, #0]
    1196:	4821      	ldr	r0, [pc, #132]	; (121c <configure_vic+0xf0>)
    1198:	2432      	movs	r4, #50	; 0x32
    119a:	6004      	str	r4, [r0, #0]
    119c:	4822      	ldr	r0, [pc, #136]	; (1228 <configure_vic+0xfc>)
    119e:	4c23      	ldr	r4, [pc, #140]	; (122c <configure_vic+0x100>)
    11a0:	6004      	str	r4, [r0, #0]
    11a2:	4823      	ldr	r0, [pc, #140]	; (1230 <configure_vic+0x104>)
    11a4:	2426      	movs	r4, #38	; 0x26
    11a6:	6004      	str	r4, [r0, #0]
    11a8:	4822      	ldr	r0, [pc, #136]	; (1234 <configure_vic+0x108>)
    11aa:	4c23      	ldr	r4, [pc, #140]	; (1238 <configure_vic+0x10c>)
    11ac:	6004      	str	r4, [r0, #0]
    11ae:	4823      	ldr	r0, [pc, #140]	; (123c <configure_vic+0x110>)
    11b0:	242c      	movs	r4, #44	; 0x2c
    11b2:	6004      	str	r4, [r0, #0]
    11b4:	4822      	ldr	r0, [pc, #136]	; (1240 <configure_vic+0x114>)
    11b6:	4c23      	ldr	r4, [pc, #140]	; (1244 <configure_vic+0x118>)
    11b8:	6004      	str	r4, [r0, #0]
    11ba:	4823      	ldr	r0, [pc, #140]	; (1248 <configure_vic+0x11c>)
    11bc:	2424      	movs	r4, #36	; 0x24
    11be:	6004      	str	r4, [r0, #0]
    11c0:	4822      	ldr	r0, [pc, #136]	; (124c <configure_vic+0x120>)
    11c2:	4c23      	ldr	r4, [pc, #140]	; (1250 <configure_vic+0x124>)
    11c4:	6004      	str	r4, [r0, #0]
    11c6:	4823      	ldr	r0, [pc, #140]	; (1254 <configure_vic+0x128>)
    11c8:	242b      	movs	r4, #43	; 0x2b
    11ca:	6004      	str	r4, [r0, #0]
    11cc:	4822      	ldr	r0, [pc, #136]	; (1258 <configure_vic+0x12c>)
    11ce:	4c23      	ldr	r4, [pc, #140]	; (125c <configure_vic+0x130>)
    11d0:	6004      	str	r4, [r0, #0]
    11d2:	4823      	ldr	r0, [pc, #140]	; (1260 <configure_vic+0x134>)
    11d4:	2421      	movs	r4, #33	; 0x21
    11d6:	6004      	str	r4, [r0, #0]
    11d8:	4822      	ldr	r0, [pc, #136]	; (1264 <configure_vic+0x138>)
    11da:	4c23      	ldr	r4, [pc, #140]	; (1268 <configure_vic+0x13c>)
    11dc:	6004      	str	r4, [r0, #0]
    11de:	4823      	ldr	r0, [pc, #140]	; (126c <configure_vic+0x140>)
    11e0:	2429      	movs	r4, #41	; 0x29
    11e2:	6004      	str	r4, [r0, #0]
    11e4:	600b      	str	r3, [r1, #0]
    11e6:	4b22      	ldr	r3, [pc, #136]	; (1270 <configure_vic+0x144>)
    11e8:	6013      	str	r3, [r2, #0]
    11ea:	bd10      	pop	{r4, pc}
    11ec:	1f000014 	.word	0x1f000014
    11f0:	00003052 	.word	0x00003052
    11f4:	0040042c 	.word	0x0040042c
    11f8:	1f00000c 	.word	0x1f00000c
    11fc:	004005b4 	.word	0x004005b4
    1200:	1f000010 	.word	0x1f000010
    1204:	0040045c 	.word	0x0040045c
    1208:	00400004 	.word	0x00400004
    120c:	0000163c 	.word	0x0000163c
    1210:	0000178c 	.word	0x0000178c
    1214:	0000185c 	.word	0x0000185c
    1218:	00001904 	.word	0x00001904
    121c:	2f000200 	.word	0x2f000200
    1220:	2f000100 	.word	0x2f000100
    1224:	000002dc 	.word	0x000002dc
    1228:	2f00010c 	.word	0x2f00010c
    122c:	000015b4 	.word	0x000015b4
    1230:	2f00020c 	.word	0x2f00020c
    1234:	2f000108 	.word	0x2f000108
    1238:	00001700 	.word	0x00001700
    123c:	2f000208 	.word	0x2f000208
    1240:	2f000104 	.word	0x2f000104
    1244:	00001804 	.word	0x00001804
    1248:	2f000204 	.word	0x2f000204
    124c:	2f000110 	.word	0x2f000110
    1250:	00001674 	.word	0x00001674
    1254:	2f000210 	.word	0x2f000210
    1258:	2f000114 	.word	0x2f000114
    125c:	0000189c 	.word	0x0000189c
    1260:	2f000214 	.word	0x2f000214
    1264:	2f00011c 	.word	0x2f00011c
    1268:	00001954 	.word	0x00001954
    126c:	2f00021c 	.word	0x2f00021c
    1270:	00001052 	.word	0x00001052

00001274 <dispatch>:
    1274:	b573      	push	{r0, r1, r4, r5, r6, lr}
    1276:	e031      	b.n	12dc <dispatch+0x68>
    1278:	22c8      	movs	r2, #200	; 0xc8
    127a:	435a      	muls	r2, r3
    127c:	491a      	ldr	r1, [pc, #104]	; (12e8 <dispatch+0x74>)
    127e:	3301      	adds	r3, #1
    1280:	188a      	adds	r2, r1, r2
    1282:	6811      	ldr	r1, [r2, #0]
    1284:	6850      	ldr	r0, [r2, #4]
    1286:	4281      	cmp	r1, r0
    1288:	d018      	beq.n	12bc <dispatch+0x48>
    128a:	200c      	movs	r0, #12
    128c:	4348      	muls	r0, r1
    128e:	3101      	adds	r1, #1
    1290:	1810      	adds	r0, r2, r0
    1292:	6885      	ldr	r5, [r0, #8]
    1294:	9501      	str	r5, [sp, #4]
    1296:	68c6      	ldr	r6, [r0, #12]
    1298:	6905      	ldr	r5, [r0, #16]
    129a:	200f      	movs	r0, #15
    129c:	4001      	ands	r1, r0
    129e:	6011      	str	r1, [r2, #0]
    12a0:	9a01      	ldr	r2, [sp, #4]
    12a2:	2a00      	cmp	r2, #0
    12a4:	d00a      	beq.n	12bc <dispatch+0x48>
    12a6:	1c20      	adds	r0, r4, #0
    12a8:	f7fe ef8e 	blx	1c8 <cpu_int_restore>
    12ac:	9b01      	ldr	r3, [sp, #4]
    12ae:	1c30      	adds	r0, r6, #0
    12b0:	1c29      	adds	r1, r5, #0
    12b2:	4798      	blx	r3
    12b4:	f7fe ef80 	blx	1b8 <cpu_int_disable>
    12b8:	2300      	movs	r3, #0
    12ba:	1c04      	adds	r4, r0, #0
    12bc:	4a0b      	ldr	r2, [pc, #44]	; (12ec <dispatch+0x78>)
    12be:	6811      	ldr	r1, [r2, #0]
    12c0:	2900      	cmp	r1, #0
    12c2:	d103      	bne.n	12cc <dispatch+0x58>
    12c4:	6813      	ldr	r3, [r2, #0]
    12c6:	2b00      	cmp	r3, #0
    12c8:	d008      	beq.n	12dc <dispatch+0x68>
    12ca:	e002      	b.n	12d2 <dispatch+0x5e>
    12cc:	2b03      	cmp	r3, #3
    12ce:	d9d3      	bls.n	1278 <dispatch+0x4>
    12d0:	e7f8      	b.n	12c4 <dispatch+0x50>
    12d2:	f7fe ef7e 	blx	1d0 <cpu_wfi>
    12d6:	1c20      	adds	r0, r4, #0
    12d8:	f7fe ef76 	blx	1c8 <cpu_int_restore>
    12dc:	4b03      	ldr	r3, [pc, #12]	; (12ec <dispatch+0x78>)
    12de:	681b      	ldr	r3, [r3, #0]
    12e0:	2b00      	cmp	r3, #0
    12e2:	d1e7      	bne.n	12b4 <dispatch+0x40>
    12e4:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
    12e6:	46c0      	nop			; (mov r8, r8)
    12e8:	00400034 	.word	0x00400034
    12ec:	00400354 	.word	0x00400354

000012f0 <clean_up>:
    12f0:	b508      	push	{r3, lr}
    12f2:	f7fe ef62 	blx	1b8 <cpu_int_disable>
    12f6:	4b10      	ldr	r3, [pc, #64]	; (1338 <clean_up+0x48>)
    12f8:	681a      	ldr	r2, [r3, #0]
    12fa:	2320      	movs	r3, #32
    12fc:	61da      	str	r2, [r3, #28]
    12fe:	4b0f      	ldr	r3, [pc, #60]	; (133c <clean_up+0x4c>)
    1300:	681a      	ldr	r2, [r3, #0]
    1302:	4b0f      	ldr	r3, [pc, #60]	; (1340 <clean_up+0x50>)
    1304:	601a      	str	r2, [r3, #0]
    1306:	4b0f      	ldr	r3, [pc, #60]	; (1344 <clean_up+0x54>)
    1308:	681a      	ldr	r2, [r3, #0]
    130a:	4b0f      	ldr	r3, [pc, #60]	; (1348 <clean_up+0x58>)
    130c:	601a      	str	r2, [r3, #0]
    130e:	2359      	movs	r3, #89	; 0x59
    1310:	781b      	ldrb	r3, [r3, #0]
    1312:	4a0e      	ldr	r2, [pc, #56]	; (134c <clean_up+0x5c>)
    1314:	009b      	lsls	r3, r3, #2
    1316:	189b      	adds	r3, r3, r2
    1318:	2232      	movs	r2, #50	; 0x32
    131a:	601a      	str	r2, [r3, #0]
    131c:	4b0c      	ldr	r3, [pc, #48]	; (1350 <clean_up+0x60>)
    131e:	2201      	movs	r2, #1
    1320:	601a      	str	r2, [r3, #0]
    1322:	4b0c      	ldr	r3, [pc, #48]	; (1354 <clean_up+0x64>)
    1324:	2200      	movs	r2, #0
    1326:	601a      	str	r2, [r3, #0]
    1328:	4b0b      	ldr	r3, [pc, #44]	; (1358 <clean_up+0x68>)
    132a:	223f      	movs	r2, #63	; 0x3f
    132c:	601a      	str	r2, [r3, #0]
    132e:	220d      	movs	r2, #13
    1330:	601a      	str	r2, [r3, #0]
    1332:	f7fe ef4a 	blx	1c8 <cpu_int_restore>
    1336:	bd08      	pop	{r3, pc}
    1338:	0040042c 	.word	0x0040042c
    133c:	004005b4 	.word	0x004005b4
    1340:	1f00000c 	.word	0x1f00000c
    1344:	0040045c 	.word	0x0040045c
    1348:	1f000010 	.word	0x1f000010
    134c:	2f000200 	.word	0x2f000200
    1350:	2100000c 	.word	0x2100000c
    1354:	40000018 	.word	0x40000018
    1358:	40000010 	.word	0x40000010

0000135c <report_debug>:
    135c:	b508      	push	{r3, lr}
    135e:	4b10      	ldr	r3, [pc, #64]	; (13a0 <report_debug+0x44>)
    1360:	781b      	ldrb	r3, [r3, #0]
    1362:	2b00      	cmp	r3, #0
    1364:	d00e      	beq.n	1384 <report_debug+0x28>
    1366:	4b0f      	ldr	r3, [pc, #60]	; (13a4 <report_debug+0x48>)
    1368:	4a0f      	ldr	r2, [pc, #60]	; (13a8 <report_debug+0x4c>)
    136a:	681b      	ldr	r3, [r3, #0]
    136c:	6812      	ldr	r2, [r2, #0]
    136e:	2002      	movs	r0, #2
    1370:	18d2      	adds	r2, r2, r3
    1372:	490e      	ldr	r1, [pc, #56]	; (13ac <report_debug+0x50>)
    1374:	f7ff fd54 	bl	e20 <io_printf>
    1378:	4b0d      	ldr	r3, [pc, #52]	; (13b0 <report_debug+0x54>)
    137a:	2002      	movs	r0, #2
    137c:	681a      	ldr	r2, [r3, #0]
    137e:	490d      	ldr	r1, [pc, #52]	; (13b4 <report_debug+0x58>)
    1380:	f7ff fd4e 	bl	e20 <io_printf>
    1384:	4b0c      	ldr	r3, [pc, #48]	; (13b8 <report_debug+0x5c>)
    1386:	2002      	movs	r0, #2
    1388:	681a      	ldr	r2, [r3, #0]
    138a:	490c      	ldr	r1, [pc, #48]	; (13bc <report_debug+0x60>)
    138c:	f7ff fd48 	bl	e20 <io_printf>
    1390:	4b0b      	ldr	r3, [pc, #44]	; (13c0 <report_debug+0x64>)
    1392:	2002      	movs	r0, #2
    1394:	681a      	ldr	r2, [r3, #0]
    1396:	490b      	ldr	r1, [pc, #44]	; (13c4 <report_debug+0x68>)
    1398:	f7ff fd42 	bl	e20 <io_printf>
    139c:	bd08      	pop	{r3, pc}
    139e:	46c0      	nop			; (mov r8, r8)
    13a0:	00400464 	.word	0x00400464
    13a4:	e1000300 	.word	0xe1000300
    13a8:	e1000304 	.word	0xe1000304
    13ac:	00001a94 	.word	0x00001a94
    13b0:	e1000320 	.word	0xe1000320
    13b4:	00001aba 	.word	0x00001aba
    13b8:	00400468 	.word	0x00400468
    13bc:	00001ae0 	.word	0x00001ae0
    13c0:	40000040 	.word	0x40000040
    13c4:	00001b06 	.word	0x00001b06

000013c8 <report_warns>:
    13c8:	4b0f      	ldr	r3, [pc, #60]	; (1408 <report_warns+0x40>)
    13ca:	b510      	push	{r4, lr}
    13cc:	681a      	ldr	r2, [r3, #0]
    13ce:	1c1c      	adds	r4, r3, #0
    13d0:	07d3      	lsls	r3, r2, #31
    13d2:	d505      	bpl.n	13e0 <report_warns+0x18>
    13d4:	4b0d      	ldr	r3, [pc, #52]	; (140c <report_warns+0x44>)
    13d6:	2002      	movs	r0, #2
    13d8:	681a      	ldr	r2, [r3, #0]
    13da:	490d      	ldr	r1, [pc, #52]	; (1410 <report_warns+0x48>)
    13dc:	f7ff fd20 	bl	e20 <io_printf>
    13e0:	6823      	ldr	r3, [r4, #0]
    13e2:	2002      	movs	r0, #2
    13e4:	4203      	tst	r3, r0
    13e6:	d004      	beq.n	13f2 <report_warns+0x2a>
    13e8:	4b0a      	ldr	r3, [pc, #40]	; (1414 <report_warns+0x4c>)
    13ea:	490b      	ldr	r1, [pc, #44]	; (1418 <report_warns+0x50>)
    13ec:	681a      	ldr	r2, [r3, #0]
    13ee:	f7ff fd17 	bl	e20 <io_printf>
    13f2:	4b05      	ldr	r3, [pc, #20]	; (1408 <report_warns+0x40>)
    13f4:	681b      	ldr	r3, [r3, #0]
    13f6:	075a      	lsls	r2, r3, #29
    13f8:	d505      	bpl.n	1406 <report_warns+0x3e>
    13fa:	4b08      	ldr	r3, [pc, #32]	; (141c <report_warns+0x54>)
    13fc:	2002      	movs	r0, #2
    13fe:	681a      	ldr	r2, [r3, #0]
    1400:	4907      	ldr	r1, [pc, #28]	; (1420 <report_warns+0x58>)
    1402:	f7ff fd0d 	bl	e20 <io_printf>
    1406:	bd10      	pop	{r4, pc}
    1408:	00400018 	.word	0x00400018
    140c:	0040001c 	.word	0x0040001c
    1410:	00001b25 	.word	0x00001b25
    1414:	00400028 	.word	0x00400028
    1418:	00001b51 	.word	0x00001b51
    141c:	00400024 	.word	0x00400024
    1420:	00001b7c 	.word	0x00001b7c

00001424 <spin1_start>:
    1424:	b570      	push	{r4, r5, r6, lr}
    1426:	1c06      	adds	r6, r0, #0
    1428:	2007      	movs	r0, #7
    142a:	f7fe ffed 	bl	408 <sark_cpu_state>
    142e:	2380      	movs	r3, #128	; 0x80
    1430:	2400      	movs	r4, #0
    1432:	059b      	lsls	r3, r3, #22
    1434:	601c      	str	r4, [r3, #0]
    1436:	f7ff fe4d 	bl	10d4 <configure_dma_controller>
    143a:	4d26      	ldr	r5, [pc, #152]	; (14d4 <spin1_start+0xb0>)
    143c:	6828      	ldr	r0, [r5, #0]
    143e:	f7ff fe5d 	bl	10fc <configure_timer1>
    1442:	f7ff fe73 	bl	112c <configure_vic>
    1446:	4b24      	ldr	r3, [pc, #144]	; (14d8 <spin1_start+0xb4>)
    1448:	601c      	str	r4, [r3, #0]
    144a:	4b24      	ldr	r3, [pc, #144]	; (14dc <spin1_start+0xb8>)
    144c:	601c      	str	r4, [r3, #0]
    144e:	4b24      	ldr	r3, [pc, #144]	; (14e0 <spin1_start+0xbc>)
    1450:	601c      	str	r4, [r3, #0]
    1452:	4b24      	ldr	r3, [pc, #144]	; (14e4 <spin1_start+0xc0>)
    1454:	601c      	str	r4, [r3, #0]
    1456:	2e01      	cmp	r6, #1
    1458:	d101      	bne.n	145e <spin1_start+0x3a>
    145a:	f7ff fa9b 	bl	994 <event_wait>
    145e:	682b      	ldr	r3, [r5, #0]
    1460:	2b00      	cmp	r3, #0
    1462:	d002      	beq.n	146a <spin1_start+0x46>
    1464:	4b20      	ldr	r3, [pc, #128]	; (14e8 <spin1_start+0xc4>)
    1466:	22e2      	movs	r2, #226	; 0xe2
    1468:	601a      	str	r2, [r3, #0]
    146a:	4b20      	ldr	r3, [pc, #128]	; (14ec <spin1_start+0xc8>)
    146c:	2200      	movs	r2, #0
    146e:	601a      	str	r2, [r3, #0]
    1470:	4b1f      	ldr	r3, [pc, #124]	; (14f0 <spin1_start+0xcc>)
    1472:	2201      	movs	r2, #1
    1474:	601a      	str	r2, [r3, #0]
    1476:	f7ff fefd 	bl	1274 <dispatch>
    147a:	f7ff ff39 	bl	12f0 <clean_up>
    147e:	f7fe ee94 	blx	1a8 <cpu_int_enable>
    1482:	4c1c      	ldr	r4, [pc, #112]	; (14f4 <spin1_start+0xd0>)
    1484:	4b1c      	ldr	r3, [pc, #112]	; (14f8 <spin1_start+0xd4>)
    1486:	6822      	ldr	r2, [r4, #0]
    1488:	601a      	str	r2, [r3, #0]
    148a:	4a13      	ldr	r2, [pc, #76]	; (14d8 <spin1_start+0xb4>)
    148c:	491b      	ldr	r1, [pc, #108]	; (14fc <spin1_start+0xd8>)
    148e:	6812      	ldr	r2, [r2, #0]
    1490:	605a      	str	r2, [r3, #4]
    1492:	4a1b      	ldr	r2, [pc, #108]	; (1500 <spin1_start+0xdc>)
    1494:	6812      	ldr	r2, [r2, #0]
    1496:	6809      	ldr	r1, [r1, #0]
    1498:	188a      	adds	r2, r1, r2
    149a:	609a      	str	r2, [r3, #8]
    149c:	4a19      	ldr	r2, [pc, #100]	; (1504 <spin1_start+0xe0>)
    149e:	6812      	ldr	r2, [r2, #0]
    14a0:	60da      	str	r2, [r3, #12]
    14a2:	4a19      	ldr	r2, [pc, #100]	; (1508 <spin1_start+0xe4>)
    14a4:	6812      	ldr	r2, [r2, #0]
    14a6:	611a      	str	r2, [r3, #16]
    14a8:	4a18      	ldr	r2, [pc, #96]	; (150c <spin1_start+0xe8>)
    14aa:	6812      	ldr	r2, [r2, #0]
    14ac:	3a01      	subs	r2, #1
    14ae:	615a      	str	r2, [r3, #20]
    14b0:	4a17      	ldr	r2, [pc, #92]	; (1510 <spin1_start+0xec>)
    14b2:	6812      	ldr	r2, [r2, #0]
    14b4:	619a      	str	r2, [r3, #24]
    14b6:	4a09      	ldr	r2, [pc, #36]	; (14dc <spin1_start+0xb8>)
    14b8:	6812      	ldr	r2, [r2, #0]
    14ba:	61da      	str	r2, [r3, #28]
    14bc:	4a08      	ldr	r2, [pc, #32]	; (14e0 <spin1_start+0xbc>)
    14be:	6812      	ldr	r2, [r2, #0]
    14c0:	621a      	str	r2, [r3, #32]
    14c2:	4a08      	ldr	r2, [pc, #32]	; (14e4 <spin1_start+0xc0>)
    14c4:	6812      	ldr	r2, [r2, #0]
    14c6:	625a      	str	r2, [r3, #36]	; 0x24
    14c8:	f7ff ff48 	bl	135c <report_debug>
    14cc:	f7ff ff7c 	bl	13c8 <report_warns>
    14d0:	6820      	ldr	r0, [r4, #0]
    14d2:	bd70      	pop	{r4, r5, r6, pc}
    14d4:	00400020 	.word	0x00400020
    14d8:	00400018 	.word	0x00400018
    14dc:	00400028 	.word	0x00400028
    14e0:	0040001c 	.word	0x0040001c
    14e4:	00400024 	.word	0x00400024
    14e8:	21000008 	.word	0x21000008
    14ec:	004005b8 	.word	0x004005b8
    14f0:	00400354 	.word	0x00400354
    14f4:	00400030 	.word	0x00400030
    14f8:	00400430 	.word	0x00400430
    14fc:	e1000304 	.word	0xe1000304
    1500:	e1000300 	.word	0xe1000300
    1504:	e1000320 	.word	0xe1000320
    1508:	00400468 	.word	0x00400468
    150c:	00400000 	.word	0x00400000
    1510:	40000040 	.word	0x40000040

00001514 <schedule_sysmode>:
    1514:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1516:	4d15      	ldr	r5, [pc, #84]	; (156c <schedule_sysmode+0x58>)
    1518:	00c6      	lsls	r6, r0, #3
    151a:	19ab      	adds	r3, r5, r6
    151c:	685b      	ldr	r3, [r3, #4]
    151e:	2b00      	cmp	r3, #0
    1520:	dc04      	bgt.n	152c <schedule_sysmode+0x18>
    1522:	1c08      	adds	r0, r1, #0
    1524:	5973      	ldr	r3, [r6, r5]
    1526:	1c11      	adds	r1, r2, #0
    1528:	4798      	blx	r3
    152a:	e01d      	b.n	1568 <schedule_sysmode+0x54>
    152c:	20c8      	movs	r0, #200	; 0xc8
    152e:	3b01      	subs	r3, #1
    1530:	4343      	muls	r3, r0
    1532:	480f      	ldr	r0, [pc, #60]	; (1570 <schedule_sysmode+0x5c>)
    1534:	18c3      	adds	r3, r0, r3
    1536:	685c      	ldr	r4, [r3, #4]
    1538:	200f      	movs	r0, #15
    153a:	1c67      	adds	r7, r4, #1
    153c:	4038      	ands	r0, r7
    153e:	681f      	ldr	r7, [r3, #0]
    1540:	42b8      	cmp	r0, r7
    1542:	d008      	beq.n	1556 <schedule_sysmode+0x42>
    1544:	270c      	movs	r7, #12
    1546:	437c      	muls	r4, r7
    1548:	5976      	ldr	r6, [r6, r5]
    154a:	191c      	adds	r4, r3, r4
    154c:	60a6      	str	r6, [r4, #8]
    154e:	60e1      	str	r1, [r4, #12]
    1550:	6122      	str	r2, [r4, #16]
    1552:	6058      	str	r0, [r3, #4]
    1554:	e008      	b.n	1568 <schedule_sysmode+0x54>
    1556:	4b07      	ldr	r3, [pc, #28]	; (1574 <schedule_sysmode+0x60>)
    1558:	2201      	movs	r2, #1
    155a:	6819      	ldr	r1, [r3, #0]
    155c:	430a      	orrs	r2, r1
    155e:	601a      	str	r2, [r3, #0]
    1560:	4b05      	ldr	r3, [pc, #20]	; (1578 <schedule_sysmode+0x64>)
    1562:	681a      	ldr	r2, [r3, #0]
    1564:	3201      	adds	r2, #1
    1566:	601a      	str	r2, [r3, #0]
    1568:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    156a:	46c0      	nop			; (mov r8, r8)
    156c:	004005c0 	.word	0x004005c0
    1570:	00400034 	.word	0x00400034
    1574:	00400018 	.word	0x00400018
    1578:	0040001c 	.word	0x0040001c

0000157c <sark_pre_main>:
    157c:	b508      	push	{r3, lr}
    157e:	2006      	movs	r0, #6
    1580:	f7fe ff42 	bl	408 <sark_cpu_state>
    1584:	2201      	movs	r2, #1
    1586:	235b      	movs	r3, #91	; 0x5b
    1588:	701a      	strb	r2, [r3, #0]
    158a:	f7fe ff45 	bl	418 <sark_app_lead>
    158e:	4b04      	ldr	r3, [pc, #16]	; (15a0 <sark_pre_main+0x24>)
    1590:	681b      	ldr	r3, [r3, #0]
    1592:	1ac2      	subs	r2, r0, r3
    1594:	4253      	negs	r3, r2
    1596:	415a      	adcs	r2, r3
    1598:	4b02      	ldr	r3, [pc, #8]	; (15a4 <sark_pre_main+0x28>)
    159a:	701a      	strb	r2, [r3, #0]
    159c:	bd08      	pop	{r3, pc}
    159e:	46c0      	nop			; (mov r8, r8)
    15a0:	00400358 	.word	0x00400358
    15a4:	00400464 	.word	0x00400464

000015a8 <sark_post_main>:
    15a8:	b508      	push	{r3, lr}
    15aa:	200b      	movs	r0, #11
    15ac:	f7fe ff2c 	bl	408 <sark_cpu_state>
    15b0:	bd08      	pop	{r3, pc}
	...

000015b4 <cc_rx_ready_isr>:
    15b4:	e24ee004 	sub	lr, lr, #4
    15b8:	e92d503f 	push	{r0, r1, r2, r3, r4, r5, ip, lr}
    15bc:	e3a04202 	mov	r4, #536870912	; 0x20000000
    15c0:	e594500c 	ldr	r5, [r4, #12]
    15c4:	e3a00002 	mov	r0, #2
    15c8:	e59f1060 	ldr	r1, [pc, #96]	; 1630 <cc_rx_ready_isr+0x7c>
    15cc:	fafffe13 	blx	e20 <io_printf>
    15d0:	e2150802 	ands	r0, r5, #131072	; 0x20000
    15d4:	e59f3058 	ldr	r3, [pc, #88]	; 1634 <cc_rx_ready_isr+0x80>
    15d8:	0a000006 	beq	15f8 <cc_rx_ready_isr+0x44>
    15dc:	e5933028 	ldr	r3, [r3, #40]	; 0x28
    15e0:	e5942010 	ldr	r2, [r4, #16]
    15e4:	e3530000 	cmp	r3, #0
    15e8:	e5941014 	ldr	r1, [r4, #20]
    15ec:	13a00005 	movne	r0, #5
    15f0:	1a000005 	bne	160c <cc_rx_ready_isr+0x58>
    15f4:	ea000006 	b	1614 <cc_rx_ready_isr+0x60>
    15f8:	e5933000 	ldr	r3, [r3]
    15fc:	e5941014 	ldr	r1, [r4, #20]
    1600:	e3530000 	cmp	r3, #0
    1604:	0a000002 	beq	1614 <cc_rx_ready_isr+0x60>
    1608:	e1a02000 	mov	r2, r0
    160c:	ebfffb3f 	bl	310 <schedule>
    1610:	ea000003 	b	1624 <cc_rx_ready_isr+0x70>
    1614:	e59f301c 	ldr	r3, [pc, #28]	; 1638 <cc_rx_ready_isr+0x84>
    1618:	e5932000 	ldr	r2, [r3]
    161c:	e2822001 	add	r2, r2, #1
    1620:	e5832000 	str	r2, [r3]
    1624:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    1628:	e5833030 	str	r3, [r3, #48]	; 0x30
    162c:	e8fd903f 	ldm	sp!, {r0, r1, r2, r3, r4, r5, ip, pc}^
    1630:	00001bde 	.word	0x00001bde
    1634:	004005c0 	.word	0x004005c0
    1638:	00400468 	.word	0x00400468

0000163c <cc_rx_ready_fiqsr>:
    163c:	e24ee004 	sub	lr, lr, #4
    1640:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    1644:	e3a03202 	mov	r3, #536870912	; 0x20000000
    1648:	e593100c 	ldr	r1, [r3, #12]
    164c:	e59f201c 	ldr	r2, [pc, #28]	; 1670 <cc_rx_ready_fiqsr+0x34>
    1650:	e2111802 	ands	r1, r1, #131072	; 0x20000
    1654:	15931010 	ldrne	r1, [r3, #16]
    1658:	05930014 	ldreq	r0, [r3, #20]
    165c:	15930014 	ldrne	r0, [r3, #20]
    1660:	05923000 	ldreq	r3, [r2]
    1664:	15923028 	ldrne	r3, [r2, #40]	; 0x28
    1668:	e12fff33 	blx	r3
    166c:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^
    1670:	004005c0 	.word	0x004005c0

00001674 <cc_tx_empty_isr>:
    1674:	e92d103f 	push	{r0, r1, r2, r3, r4, r5, ip}
    1678:	e3a03000 	mov	r3, #0
    167c:	e3a02202 	mov	r2, #536870912	; 0x20000000
    1680:	e5823000 	str	r3, [r2]
    1684:	e3a0c00c 	mov	ip, #12
    1688:	e59f306c 	ldr	r3, [pc, #108]	; 16fc <cc_tx_empty_isr+0x88>
    168c:	ea000009 	b	16b8 <cc_tx_empty_isr+0x44>
    1690:	e020319c 	mla	r0, ip, r1, r3
    1694:	e2811001 	add	r1, r1, #1
    1698:	e5904008 	ldr	r4, [r0, #8]
    169c:	e590500c 	ldr	r5, [r0, #12]
    16a0:	e5900010 	ldr	r0, [r0, #16]
    16a4:	e201100f 	and	r1, r1, #15
    16a8:	e3500000 	cmp	r0, #0
    16ac:	e5831000 	str	r1, [r3]
    16b0:	15825004 	strne	r5, [r2, #4]
    16b4:	e5824008 	str	r4, [r2, #8]
    16b8:	e5931000 	ldr	r1, [r3]
    16bc:	e5930004 	ldr	r0, [r3, #4]
    16c0:	e1510000 	cmp	r1, r0
    16c4:	0a000006 	beq	16e4 <cc_tx_empty_isr+0x70>
    16c8:	e5920000 	ldr	r0, [r2]
    16cc:	e3100101 	tst	r0, #1073741824	; 0x40000000
    16d0:	0affffee 	beq	1690 <cc_tx_empty_isr+0x1c>
    16d4:	e3a02001 	mov	r2, #1
    16d8:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    16dc:	e5832030 	str	r2, [r3, #48]	; 0x30
    16e0:	ea000003 	b	16f4 <cc_tx_empty_isr+0x80>
    16e4:	e3a02b02 	mov	r2, #2048	; 0x800
    16e8:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    16ec:	e5832014 	str	r2, [r3, #20]
    16f0:	eafffff7 	b	16d4 <cc_tx_empty_isr+0x60>
    16f4:	e8bd103f 	pop	{r0, r1, r2, r3, r4, r5, ip}
    16f8:	e25ef004 	subs	pc, lr, #4
    16fc:	004005f0 	.word	0x004005f0

00001700 <dma_done_isr>:
    1700:	e24ee004 	sub	lr, lr, #4
    1704:	e92d503f 	push	{r0, r1, r2, r3, r4, r5, ip, lr}
    1708:	e3a03008 	mov	r3, #8
    170c:	e3a00101 	mov	r0, #1073741824	; 0x40000000
    1710:	e5803010 	str	r3, [r0, #16]
    1714:	e59f3068 	ldr	r3, [pc, #104]	; 1784 <dma_done_isr+0x84>
    1718:	e3a04014 	mov	r4, #20
    171c:	e593c000 	ldr	ip, [r3]
    1720:	e5935004 	ldr	r5, [r3, #4]
    1724:	e0223c94 	mla	r2, r4, ip, r3
    1728:	e28cc001 	add	ip, ip, #1
    172c:	e20cc00f 	and	ip, ip, #15
    1730:	e15c0005 	cmp	ip, r5
    1734:	e5921008 	ldr	r1, [r2, #8]
    1738:	e583c000 	str	ip, [r3]
    173c:	e592200c 	ldr	r2, [r2, #12]
    1740:	0a000005 	beq	175c <dma_done_isr+0x5c>
    1744:	e0233c94 	mla	r3, r4, ip, r3
    1748:	e2833010 	add	r3, r3, #16
    174c:	e8931018 	ldm	r3, {r3, r4, ip}
    1750:	e5803004 	str	r3, [r0, #4]
    1754:	e5804008 	str	r4, [r0, #8]
    1758:	e580c00c 	str	ip, [r0, #12]
    175c:	e59f3024 	ldr	r3, [pc, #36]	; 1788 <dma_done_isr+0x88>
    1760:	e5933008 	ldr	r3, [r3, #8]
    1764:	e3530000 	cmp	r3, #0
    1768:	0a000001 	beq	1774 <dma_done_isr+0x74>
    176c:	e3a00001 	mov	r0, #1
    1770:	ebfffae6 	bl	310 <schedule>
    1774:	e3a02001 	mov	r2, #1
    1778:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    177c:	e5832030 	str	r2, [r3, #48]	; 0x30
    1780:	e8fd903f 	ldm	sp!, {r0, r1, r2, r3, r4, r5, ip, pc}^
    1784:	0040046c 	.word	0x0040046c
    1788:	004005c0 	.word	0x004005c0

0000178c <dma_done_fiqsr>:
    178c:	e24ee004 	sub	lr, lr, #4
    1790:	e92d503f 	push	{r0, r1, r2, r3, r4, r5, ip, lr}
    1794:	e3a03008 	mov	r3, #8
    1798:	e3a02101 	mov	r2, #1073741824	; 0x40000000
    179c:	e5823010 	str	r3, [r2, #16]
    17a0:	e59f3054 	ldr	r3, [pc, #84]	; 17fc <dma_done_fiqsr+0x70>
    17a4:	e3a0e014 	mov	lr, #20
    17a8:	e593c000 	ldr	ip, [r3]
    17ac:	e5934004 	ldr	r4, [r3, #4]
    17b0:	e0213c9e 	mla	r1, lr, ip, r3
    17b4:	e28cc001 	add	ip, ip, #1
    17b8:	e20cc00f 	and	ip, ip, #15
    17bc:	e15c0004 	cmp	ip, r4
    17c0:	e5910008 	ldr	r0, [r1, #8]
    17c4:	e583c000 	str	ip, [r3]
    17c8:	e591100c 	ldr	r1, [r1, #12]
    17cc:	0a000006 	beq	17ec <dma_done_fiqsr+0x60>
    17d0:	e0233c9e 	mla	r3, lr, ip, r3
    17d4:	e593e014 	ldr	lr, [r3, #20]
    17d8:	e593c018 	ldr	ip, [r3, #24]
    17dc:	e5933010 	ldr	r3, [r3, #16]
    17e0:	e5823004 	str	r3, [r2, #4]
    17e4:	e582e008 	str	lr, [r2, #8]
    17e8:	e582c00c 	str	ip, [r2, #12]
    17ec:	e59f300c 	ldr	r3, [pc, #12]	; 1800 <dma_done_fiqsr+0x74>
    17f0:	e5933008 	ldr	r3, [r3, #8]
    17f4:	e12fff33 	blx	r3
    17f8:	e8fd903f 	ldm	sp!, {r0, r1, r2, r3, r4, r5, ip, pc}^
    17fc:	0040046c 	.word	0x0040046c
    1800:	004005c0 	.word	0x004005c0

00001804 <timer1_isr>:
    1804:	e24ee004 	sub	lr, lr, #4
    1808:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    180c:	e3a02001 	mov	r2, #1
    1810:	e3a03421 	mov	r3, #553648128	; 0x21000000
    1814:	e583200c 	str	r2, [r3, #12]
    1818:	e59f3034 	ldr	r3, [pc, #52]	; 1854 <timer1_isr+0x50>
    181c:	e5931000 	ldr	r1, [r3]
    1820:	e0811002 	add	r1, r1, r2
    1824:	e5831000 	str	r1, [r3]
    1828:	e59f3028 	ldr	r3, [pc, #40]	; 1858 <timer1_isr+0x54>
    182c:	e5933010 	ldr	r3, [r3, #16]
    1830:	e3530000 	cmp	r3, #0
    1834:	0a000002 	beq	1844 <timer1_isr+0x40>
    1838:	e3a00002 	mov	r0, #2
    183c:	e3a02000 	mov	r2, #0
    1840:	ebfffab2 	bl	310 <schedule>
    1844:	e3a02001 	mov	r2, #1
    1848:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    184c:	e5832030 	str	r2, [r3, #48]	; 0x30
    1850:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^
    1854:	004005b8 	.word	0x004005b8
    1858:	004005c0 	.word	0x004005c0

0000185c <timer1_fiqsr>:
    185c:	e24ee004 	sub	lr, lr, #4
    1860:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    1864:	e3a02001 	mov	r2, #1
    1868:	e3a03421 	mov	r3, #553648128	; 0x21000000
    186c:	e583200c 	str	r2, [r3, #12]
    1870:	e59f301c 	ldr	r3, [pc, #28]	; 1894 <timer1_fiqsr+0x38>
    1874:	e3a01000 	mov	r1, #0
    1878:	e5930000 	ldr	r0, [r3]
    187c:	e0800002 	add	r0, r0, r2
    1880:	e5830000 	str	r0, [r3]
    1884:	e59f300c 	ldr	r3, [pc, #12]	; 1898 <timer1_fiqsr+0x3c>
    1888:	e5933010 	ldr	r3, [r3, #16]
    188c:	e12fff33 	blx	r3
    1890:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^
    1894:	004005b8 	.word	0x004005b8
    1898:	004005c0 	.word	0x004005c0

0000189c <soft_int_isr>:
    189c:	e24ee004 	sub	lr, lr, #4
    18a0:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    18a4:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    18a8:	e3a02002 	mov	r2, #2
    18ac:	e583201c 	str	r2, [r3, #28]
    18b0:	e59f303c 	ldr	r3, [pc, #60]	; 18f4 <soft_int_isr+0x58>
    18b4:	e5933020 	ldr	r3, [r3, #32]
    18b8:	e3530000 	cmp	r3, #0
    18bc:	0a000005 	beq	18d8 <soft_int_isr+0x3c>
    18c0:	e59f3030 	ldr	r3, [pc, #48]	; 18f8 <soft_int_isr+0x5c>
    18c4:	e3a00004 	mov	r0, #4
    18c8:	e5931000 	ldr	r1, [r3]
    18cc:	e59f3028 	ldr	r3, [pc, #40]	; 18fc <soft_int_isr+0x60>
    18d0:	e5932000 	ldr	r2, [r3]
    18d4:	ebfffa8d 	bl	310 <schedule>
    18d8:	e59f3020 	ldr	r3, [pc, #32]	; 1900 <soft_int_isr+0x64>
    18dc:	e3a02000 	mov	r2, #0
    18e0:	e5c32000 	strb	r2, [r3]
    18e4:	e3a02001 	mov	r2, #1
    18e8:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    18ec:	e5832030 	str	r2, [r3, #48]	; 0x30
    18f0:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^
    18f4:	004005c0 	.word	0x004005c0
    18f8:	004005bc 	.word	0x004005bc
    18fc:	00400460 	.word	0x00400460
    1900:	0040002c 	.word	0x0040002c

00001904 <soft_int_fiqsr>:
    1904:	e24ee004 	sub	lr, lr, #4
    1908:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    190c:	e3a02002 	mov	r2, #2
    1910:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    1914:	e583201c 	str	r2, [r3, #28]
    1918:	e59f2024 	ldr	r2, [pc, #36]	; 1944 <soft_int_fiqsr+0x40>
    191c:	e59f3024 	ldr	r3, [pc, #36]	; 1948 <soft_int_fiqsr+0x44>
    1920:	e5920000 	ldr	r0, [r2]
    1924:	e59f2020 	ldr	r2, [pc, #32]	; 194c <soft_int_fiqsr+0x48>
    1928:	e5933020 	ldr	r3, [r3, #32]
    192c:	e5921000 	ldr	r1, [r2]
    1930:	e12fff33 	blx	r3
    1934:	e59f3014 	ldr	r3, [pc, #20]	; 1950 <soft_int_fiqsr+0x4c>
    1938:	e3a02000 	mov	r2, #0
    193c:	e5c32000 	strb	r2, [r3]
    1940:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^
    1944:	004005bc 	.word	0x004005bc
    1948:	004005c0 	.word	0x004005c0
    194c:	00400460 	.word	0x00400460
    1950:	0040002c 	.word	0x0040002c

00001954 <buffer_full_isr>:
    1954:	e24ee004 	sub	lr, lr, #4
    1958:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    195c:	e3a00002 	mov	r0, #2
    1960:	e59f1004 	ldr	r1, [pc, #4]	; 196c <buffer_full_isr+0x18>
    1964:	fafffd2d 	blx	e20 <io_printf>
    1968:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^
    196c:	00001c1a 	.word	0x00001c1a
    1970:	6c6c6548 	.word	0x6c6c6548
    1974:	6f77206f 	.word	0x6f77206f
    1978:	21646c72 	.word	0x21646c72
    197c:	69762820 	.word	0x69762820
    1980:	44532061 	.word	0x44532061
    1984:	000a2950 	.word	0x000a2950
    1988:	6c6c6548 	.word	0x6c6c6548
    198c:	6f77206f 	.word	0x6f77206f
    1990:	21646c72 	.word	0x21646c72
    1994:	69762820 	.word	0x69762820
    1998:	44532061 	.word	0x44532061
    199c:	294d4152 	.word	0x294d4152
    19a0:	6548000a 	.word	0x6548000a
    19a4:	206f6c6c 	.word	0x206f6c6c
    19a8:	6c726f77 	.word	0x6c726f77
    19ac:	28202164 	.word	0x28202164
    19b0:	20616976 	.word	0x20616976
    19b4:	6e697270 	.word	0x6e697270
    19b8:	2e2e6674 	.word	0x2e2e6674
    19bc:	000a292e 	.word	0x000a292e

000019c0 <build_name>:
    19c0:	6d6f682f 6d6a2f65 6f616971 0065442f     /home/jmqiao/De.

000019d0 <build_date>:
    19d0:	59389126 3e2d7673 786f626d 616c665f     &.8Ysv->mbox_fla
    19e0:	25207367 20742c78 5d78255b 6373202c     gs %x,t [%x], sc
    19f0:	5f43535b 5f544553 5d515249 0a782520     [SC_SET_IRQ] %x.
    1a00:	52415300 70532f4b 614e4e69 0072656b     .SARK/SpiNNaker.
    1a10:	2d293128 2d2d2d2d 73202d2d 5f6b7261     (1)------- sark_
    1a20:	3a746e69 646d6320 2c642520 61746164     int: cmd %d,data
    1a30:	0a642520 29312800 2d2d2d2d 202d2d2d      %d..(1)------- 
    1a40:	6b726173 67736d5f 7465675f 3228000a     sark_msg_get..(2
    1a50:	2d2d2d29 2d2d2d2d 72617320 736d5f6b     )------- sark_ms
    1a60:	65675f67 28000a74 2d2d2933 2d2d2d2d     g_get..(3)------
    1a70:	6173202d 6d5f6b72 675f6773 253a7465     - sark_msg_get:%
    1a80:	30000a64                                         d..

00001a83 <hex>:
    1a83:	33323130 37363534 62613938 66656463     0123456789abcdef
    1a93:	5b090900 5f697061 75626564 52205d67     ...[api_debug] R
    1aa3:	6d205254 20202063 61702020 74656b63     TR mc     packet
    1ab3:	25203a73 09000a64 70615b09 65645f69     s: %d....[api_de
    1ac3:	5d677562 52545220 64706420 20636d20     bug] RTR dpd mc 
    1ad3:	6b636170 3a737465 0a642520 5b090900     packets: %d....[
    1ae3:	5f697061 75626564 49205d67 74205253     api_debug] ISR t
    1af3:	776f7268 6170206e 74656b63 25203a73     hrown packets: %
    1b03:	09000a64 70615b09 65645f69 5d677562     d....[api_debug]
    1b13:	414d4420 72756220 3a737473 64252020      DMA bursts:  %d
    1b23:	0909000a 6970615b 7261775f 77205d6e     ....[api_warn] w
    1b33:	696e7261 203a676e 6b736174 65757120     arning: task que
    1b43:	66206575 206c6c75 29752528 0909000a     ue full (%u)....
    1b53:	6970615b 7261775f 77205d6e 696e7261     [api_warn] warni
    1b63:	203a676e 20414d44 75657571 75662065     ng: DMA queue fu
    1b73:	28206c6c 0a297525 5b090900 5f697061     ll (%u)....[api_
    1b83:	6e726177 6177205d 6e696e72 70203a67     warn] warning: p
    1b93:	656b6361 75712074 20657565 6c6c7566     acket queue full
    1ba3:	75252820 09000a29 70615b09 65645f69      (%u)....[api_de
    1bb3:	5d677562 20434d20 72746e65 64252079     bug] MC entry %d
    1bc3:	206b203a 38257830 206d207a 38257830     : k 0x%8z m 0x%8
    1bd3:	2072207a 38257830 63000a7a 78725f63     z r 0x%8z..cc_rx
    1be3:	6165725f 695f7964 69207273 72742073     _ready_isr is tr
    1bf3:	65676769 2e646572 0a2e2e2e 5f636300     iggered......cc_
    1c03:	655f7872 726f7272 7273695f 2e2e2e2e     rx_error_isr....
    1c13:	2e2e2e2e 62000a2e 65666675 75665f72     .......buffer_fu
    1c23:	695f6c6c 2e2e7273 2e2e2e2e 0a2e2e2e     ll_isr..........
	...


/home/jmqiao/Desktop/Update_Spinake_Project/Test_Case/Design_v1.0/example/unitest/random/no-os/random.elf:     file format elf32-littlearm
/home/jmqiao/Desktop/Update_Spinake_Project/Test_Case/Design_v1.0/example/unitest/random/no-os/random.elf
architecture: armv5te, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00001540 memsz 0x00001540 flags r-x
    LOAD off    0x00010000 vaddr 0x00400000 paddr 0x00400000 align 2**15
         filesz 0x00000000 memsz 0x00000114 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 RO_DATA       00001540  00000000  00000000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 ZI_DATA       00000114  00400000  00400000  00010000  2**2
                  ALLOC
  2 .debug_info   0000123d  00000000  00000000  00009540  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_abbrev 00000287  00000000  00000000  0000a77d  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_loc    00000189  00000000  00000000  0000aa04  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000038  00000000  00000000  0000ab8d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000114  00000000  00000000  0000abc5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000080b  00000000  00000000  0000acd9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .comment      00000030  00000000  00000000  0000b4e4  2**0
                  CONTENTS, READONLY
  9 .ARM.attributes 00000027  00000000  00000000  0000b514  2**0
                  CONTENTS, READONLY
 10 .debug_frame  00000054  00000000  00000000  0000b53c  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  RO_DATA	00000000 RO_DATA
00400000 l    d  ZI_DATA	00000000 ZI_DATA
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 libsark.o
00000001 l       *ABS*	00000000 GNU
00000000 l       *ABS*	00000000 NULL
80000000 l       *ABS*	00000000 BIT_31
00000001 l       *ABS*	00000000 BUF_WRITE
00000012 l       *ABS*	00000000 NUM_CPUS
00000006 l       *ABS*	00000000 NUM_LINKS
00000000 l       *ABS*	00000000 ITCM_BASE
00008000 l       *ABS*	00000000 ITCM_SIZE
00008000 l       *ABS*	00000000 ITCM_TOP
00400000 l       *ABS*	00000000 DTCM_BASE
00010000 l       *ABS*	00000000 DTCM_SIZE
00410000 l       *ABS*	00000000 DTCM_TOP
70000000 l       *ABS*	00000000 SDRAM_BASE_UNBUF
60000000 l       *ABS*	00000000 SDRAM_BASE_BUF
60000000 l       *ABS*	00000000 SDRAM_BASE
08000000 l       *ABS*	00000000 SDRAM_SIZE
68000000 l       *ABS*	00000000 SDRAM_TOP
f5000000 l       *ABS*	00000000 SYSRAM_BASE_UNBUF
e5000000 l       *ABS*	00000000 SYSRAM_BASE_BUF
e5000000 l       *ABS*	00000000 SYSRAM_BASE
00008000 l       *ABS*	00000000 SYSRAM_SIZE
e5008000 l       *ABS*	00000000 SYSRAM_TOP
f6000000 l       *ABS*	00000000 ROM_BASE
00008000 l       *ABS*	00000000 ROM_SIZE
f6008000 l       *ABS*	00000000 ROM_TOP
10000000 l       *ABS*	00000000 CC_BASE_UNBUF
20000000 l       *ABS*	00000000 CC_BASE_BUF
20000000 l       *ABS*	00000000 CC_BASE
00000000 l       *ABS*	00000000 CC_TCR
00000004 l       *ABS*	00000000 CC_TXDATA
00000008 l       *ABS*	00000000 CC_TXKEY
0000000c l       *ABS*	00000000 CC_RSR
00000010 l       *ABS*	00000000 CC_RXDATA
00000014 l       *ABS*	00000000 CC_RXKEY
00000018 l       *ABS*	00000000 CC_SAR
0000001c l       *ABS*	00000000 CC_TEST
11000000 l       *ABS*	00000000 TIMER_BASE_UNBUF
21000000 l       *ABS*	00000000 TIMER_BASE_BUF
21000000 l       *ABS*	00000000 TIMER_BASE
00000020 l       *ABS*	00000000 TIMER_OFFSET
21000000 l       *ABS*	00000000 TIMER1_BASE
21000020 l       *ABS*	00000000 TIMER2_BASE
00000000 l       *ABS*	00000000 TC_LOAD
00000004 l       *ABS*	00000000 TC_COUNT
00000008 l       *ABS*	00000000 TC_CONTROL
0000000c l       *ABS*	00000000 TC_INT_CLR
00000010 l       *ABS*	00000000 TC_RAW_INT
00000014 l       *ABS*	00000000 TC_MASK_INT
00000018 l       *ABS*	00000000 TC_BG_LOAD
00000000 l       *ABS*	00000000 T1_LOAD
00000004 l       *ABS*	00000000 T1_COUNT
00000008 l       *ABS*	00000000 T1_CONTROL
0000000c l       *ABS*	00000000 T1_INT_CLR
00000010 l       *ABS*	00000000 T1_RAW_INT
00000014 l       *ABS*	00000000 T1_MASK_INT
00000018 l       *ABS*	00000000 T1_BG_LOAD
00000020 l       *ABS*	00000000 T2_LOAD
00000024 l       *ABS*	00000000 T2_COUNT
00000028 l       *ABS*	00000000 T2_CONTROL
0000002c l       *ABS*	00000000 T2_INT_CLR
00000030 l       *ABS*	00000000 T2_RAW_INT
00000034 l       *ABS*	00000000 T2_MASK_INT
00000038 l       *ABS*	00000000 T2_BG_LOAD
1f000000 l       *ABS*	00000000 VIC_BASE_UNBUF
2f000000 l       *ABS*	00000000 VIC_BASE_BUF
2f000000 l       *ABS*	00000000 VIC_BASE
00000000 l       *ABS*	00000000 VIC_IRQST
00000004 l       *ABS*	00000000 VIC_FIQST
00000008 l       *ABS*	00000000 VIC_RAW
0000000c l       *ABS*	00000000 VIC_SELECT
00000010 l       *ABS*	00000000 VIC_ENABLE
00000014 l       *ABS*	00000000 VIC_DISABLE
00000018 l       *ABS*	00000000 VIC_SOFT_SET
0000001c l       *ABS*	00000000 VIC_SOFT_CLR
00000020 l       *ABS*	00000000 VIC_PROTECT
00000030 l       *ABS*	00000000 VIC_VADDR
00000034 l       *ABS*	00000000 VIC_DEFADDR
00000100 l       *ABS*	00000000 VIC_ADDR
00000100 l       *ABS*	00000000 VIC_ADDR0
00000104 l       *ABS*	00000000 VIC_ADDR1
00000108 l       *ABS*	00000000 VIC_ADDR2
0000010c l       *ABS*	00000000 VIC_ADDR3
00000110 l       *ABS*	00000000 VIC_ADDR4
00000114 l       *ABS*	00000000 VIC_ADDR5
00000118 l       *ABS*	00000000 VIC_ADDR6
0000011c l       *ABS*	00000000 VIC_ADDR7
00000120 l       *ABS*	00000000 VIC_ADDR8
00000124 l       *ABS*	00000000 VIC_ADDR9
00000128 l       *ABS*	00000000 VIC_ADDR10
0000012c l       *ABS*	00000000 VIC_ADDR11
00000130 l       *ABS*	00000000 VIC_ADDR12
00000134 l       *ABS*	00000000 VIC_ADDR13
00000138 l       *ABS*	00000000 VIC_ADDR14
0000013c l       *ABS*	00000000 VIC_ADDR15
00000200 l       *ABS*	00000000 VIC_CNTL
00000200 l       *ABS*	00000000 VIC_CNTL0
00000204 l       *ABS*	00000000 VIC_CNTL1
00000208 l       *ABS*	00000000 VIC_CNTL2
0000020c l       *ABS*	00000000 VIC_CNTL3
00000210 l       *ABS*	00000000 VIC_CNTL4
00000214 l       *ABS*	00000000 VIC_CNTL5
00000218 l       *ABS*	00000000 VIC_CNTL6
0000021c l       *ABS*	00000000 VIC_CNTL7
00000220 l       *ABS*	00000000 VIC_CNTL8
00000224 l       *ABS*	00000000 VIC_CNTL9
00000228 l       *ABS*	00000000 VIC_CNTL10
0000022c l       *ABS*	00000000 VIC_CNTL11
00000230 l       *ABS*	00000000 VIC_CNTL12
00000234 l       *ABS*	00000000 VIC_CNTL13
00000238 l       *ABS*	00000000 VIC_CNTL14
0000023c l       *ABS*	00000000 VIC_CNTL15
00000000 l       *ABS*	00000000 WDOG_INT
00000001 l       *ABS*	00000000 SOFTWARE_INT
00000002 l       *ABS*	00000000 COMM_RX_INT
00000003 l       *ABS*	00000000 COMM_TX_INT
00000004 l       *ABS*	00000000 TIMER1_INT
00000005 l       *ABS*	00000000 TIMER2_INT
00000006 l       *ABS*	00000000 CC_RDY_INT
00000007 l       *ABS*	00000000 CC_RPE_INT
00000008 l       *ABS*	00000000 CC_RFE_INT
00000009 l       *ABS*	00000000 CC_TFL_INT
0000000a l       *ABS*	00000000 CC_TOV_INT
0000000b l       *ABS*	00000000 CC_TMT_INT
0000000c l       *ABS*	00000000 DMA_DONE_INT
0000000d l       *ABS*	00000000 DMA_ERR_INT
0000000e l       *ABS*	00000000 DMA_TO_INT
0000000f l       *ABS*	00000000 RTR_DIAG_INT
00000010 l       *ABS*	00000000 RTR_DUMP_INT
00000011 l       *ABS*	00000000 RTR_ERR_INT
00000012 l       *ABS*	00000000 CPU_INT
00000013 l       *ABS*	00000000 ETH_TX_INT
00000014 l       *ABS*	00000000 ETH_RX_INT
00000015 l       *ABS*	00000000 ETH_PHY_INT
00000016 l       *ABS*	00000000 SLOW_CLK_INT
00000017 l       *ABS*	00000000 CC_TNF_INT
00000018 l       *ABS*	00000000 CC_MC_INT
00000019 l       *ABS*	00000000 CC_P2P_INT
0000001a l       *ABS*	00000000 CC_NN_INT
0000001b l       *ABS*	00000000 CC_FR_INT
0000001c l       *ABS*	00000000 INT0_INT
0000001d l       *ABS*	00000000 INT1_INT
0000001e l       *ABS*	00000000 GPIO8_INT
0000001f l       *ABS*	00000000 GPIO9_INT
30000000 l       *ABS*	00000000 DMA_BASE_UNBUF
40000000 l       *ABS*	00000000 DMA_BASE_BUF
40000000 l       *ABS*	00000000 DMA_BASE
00000004 l       *ABS*	00000000 DMA_ADRS
00000008 l       *ABS*	00000000 DMA_ADRT
0000000c l       *ABS*	00000000 DMA_DESC
00000010 l       *ABS*	00000000 DMA_CTRL
00000014 l       *ABS*	00000000 DMA_STAT
00000018 l       *ABS*	00000000 DMA_GCTL
0000001c l       *ABS*	00000000 DMA_CRCC
00000020 l       *ABS*	00000000 DMA_CRCR
00000024 l       *ABS*	00000000 DMA_TMTV
00000028 l       *ABS*	00000000 DMA_SCTL
00000040 l       *ABS*	00000000 DMA_STAT0
00000044 l       *ABS*	00000000 DMA_STAT1
00000048 l       *ABS*	00000000 DMA_STAT2
0000004c l       *ABS*	00000000 DMA_STAT3
00000050 l       *ABS*	00000000 DMA_STAT4
00000054 l       *ABS*	00000000 DMA_STAT5
00000058 l       *ABS*	00000000 DMA_STAT6
0000005c l       *ABS*	00000000 DMA_STAT7
00000104 l       *ABS*	00000000 DMA_AD2S
00000108 l       *ABS*	00000000 DMA_AD2T
0000010c l       *ABS*	00000000 DMA_DES2
00000180 l       *ABS*	00000000 DMA_CRCT
f0000000 l       *ABS*	00000000 PL340_BASE_UNBUF
e0000000 l       *ABS*	00000000 PL340_BASE_BUF
e0000000 l       *ABS*	00000000 PL340_BASE
00000000 l       *ABS*	00000000 MC_STAT
00000004 l       *ABS*	00000000 MC_CMD
00000008 l       *ABS*	00000000 MC_DIRC
0000000c l       *ABS*	00000000 MC_MCFG
00000010 l       *ABS*	00000000 MC_REFP
00000014 l       *ABS*	00000000 MC_CASL
00000018 l       *ABS*	00000000 MC_DQSS
0000001c l       *ABS*	00000000 MC_MRD
00000020 l       *ABS*	00000000 MC_RAS
00000024 l       *ABS*	00000000 MC_RC
00000028 l       *ABS*	00000000 MC_RCD
0000002c l       *ABS*	00000000 MC_RFC
00000030 l       *ABS*	00000000 MC_RP
00000034 l       *ABS*	00000000 MC_RRD
00000038 l       *ABS*	00000000 MC_WR
0000003c l       *ABS*	00000000 MC_WTR
00000040 l       *ABS*	00000000 MC_XP
00000044 l       *ABS*	00000000 MC_XSR
00000048 l       *ABS*	00000000 MC_ESR
0000004c l       *ABS*	00000000 MC_MCFG2
00000050 l       *ABS*	00000000 MC_MCFG3
00000100 l       *ABS*	00000000 MC_QOS0
00000104 l       *ABS*	00000000 MC_QOS1
00000108 l       *ABS*	00000000 MC_QOS2
0000010c l       *ABS*	00000000 MC_QOS3
00000110 l       *ABS*	00000000 MC_QOS4
00000114 l       *ABS*	00000000 MC_QOS5
00000118 l       *ABS*	00000000 MC_QOS6
0000011c l       *ABS*	00000000 MC_QOS7
00000120 l       *ABS*	00000000 MC_QOS8
00000124 l       *ABS*	00000000 MC_QOS9
00000128 l       *ABS*	00000000 MC_QOS10
0000012c l       *ABS*	00000000 MC_QOS11
00000130 l       *ABS*	00000000 MC_QOS12
00000134 l       *ABS*	00000000 MC_QOS13
00000138 l       *ABS*	00000000 MC_QOS14
0000013c l       *ABS*	00000000 MC_QOS15
00000200 l       *ABS*	00000000 MC_CCFG0
00000204 l       *ABS*	00000000 MC_CCFG1
00000208 l       *ABS*	00000000 MC_CCFG2
0000020c l       *ABS*	00000000 MC_CCFG3
00000300 l       *ABS*	00000000 DLL_STATUS
00000304 l       *ABS*	00000000 DLL_CONFIG0
00000308 l       *ABS*	00000000 DLL_CONFIG1
f1000000 l       *ABS*	00000000 RTR_BASE_UNBUF
e1000000 l       *ABS*	00000000 RTR_BASE_BUF
e1000000 l       *ABS*	00000000 RTR_BASE
00000000 l       *ABS*	00000000 RTR_CONTROL
00000004 l       *ABS*	00000000 RTR_STATUS
00000008 l       *ABS*	00000000 RTR_EHDR
0000000c l       *ABS*	00000000 RTR_EKEY
00000010 l       *ABS*	00000000 RTR_EDAT
00000014 l       *ABS*	00000000 RTR_ESTAT
00000018 l       *ABS*	00000000 RTR_DHDR
0000001c l       *ABS*	00000000 RTR_DKEY
00000020 l       *ABS*	00000000 RTR_DDAT
00000024 l       *ABS*	00000000 RTR_DLINK
00000028 l       *ABS*	00000000 RTR_DSTAT
0000002c l       *ABS*	00000000 RTR_DGEN
00000200 l       *ABS*	00000000 RTR_DGF0
00000204 l       *ABS*	00000000 RTR_DGF1
00000208 l       *ABS*	00000000 RTR_DGF2
0000020c l       *ABS*	00000000 RTR_DGF3
00000210 l       *ABS*	00000000 RTR_DGF4
00000214 l       *ABS*	00000000 RTR_DGF5
00000218 l       *ABS*	00000000 RTR_DGF6
0000021c l       *ABS*	00000000 RTR_DGF7
00000220 l       *ABS*	00000000 RTR_DGF8
00000224 l       *ABS*	00000000 RTR_DGF9
00000228 l       *ABS*	00000000 RTR_DGF10
0000022c l       *ABS*	00000000 RTR_DGF11
00000230 l       *ABS*	00000000 RTR_DGF12
00000234 l       *ABS*	00000000 RTR_DGF13
00000238 l       *ABS*	00000000 RTR_DGF14
0000023c l       *ABS*	00000000 RTR_DGF15
00000300 l       *ABS*	00000000 RTR_DGC0
00000304 l       *ABS*	00000000 RTR_DGC1
00000308 l       *ABS*	00000000 RTR_DGC2
0000030c l       *ABS*	00000000 RTR_DGC3
00000310 l       *ABS*	00000000 RTR_DGC4
00000314 l       *ABS*	00000000 RTR_DGC5
00000318 l       *ABS*	00000000 RTR_DGC6
0000031c l       *ABS*	00000000 RTR_DGC7
00000320 l       *ABS*	00000000 RTR_DGC8
00000324 l       *ABS*	00000000 RTR_DGC9
00000328 l       *ABS*	00000000 RTR_DGC10
0000032c l       *ABS*	00000000 RTR_DGC11
00000330 l       *ABS*	00000000 RTR_DGC12
00000334 l       *ABS*	00000000 RTR_DGC13
00000338 l       *ABS*	00000000 RTR_DGC14
0000033c l       *ABS*	00000000 RTR_DGC15
00000f00 l       *ABS*	00000000 RTR_TST1
00000f04 l       *ABS*	00000000 RTR_TST2
00002000 l       *ABS*	00000000 P2P_TABLE_SIZE
00000400 l       *ABS*	00000000 MC_TABLE_SIZE
00000018 l       *ABS*	00000000 MC_RAM_WIDTH
00ffffff l       *ABS*	00000000 MC_RAM_MASK
00000008 l       *ABS*	00000000 P2P_EPW
00000003 l       *ABS*	00000000 P2P_LOG_EPW
00000007 l       *ABS*	00000000 P2P_EMASK
00000003 l       *ABS*	00000000 P2P_BPE
00000007 l       *ABS*	00000000 P2P_BMASK
00db6db6 l       *ABS*	00000000 P2P_INIT
e1004000 l       *ABS*	00000000 RTR_MCRAM_BASE
e1005000 l       *ABS*	00000000 RTR_MCRAM_TOP
e1008000 l       *ABS*	00000000 RTR_MCKEY_BASE
e1009000 l       *ABS*	00000000 RTR_MCKEY_TOP
e100c000 l       *ABS*	00000000 RTR_MCMASK_BASE
e100d000 l       *ABS*	00000000 RTR_MCMASK_TOP
e1010000 l       *ABS*	00000000 RTR_P2P_BASE
e1018000 l       *ABS*	00000000 RTR_P2P_TOP
00000020 l       *ABS*	00000000 MC_CAM_WIDTH
f2000000 l       *ABS*	00000000 SYSCTL_BASE_UNBUF
e2000000 l       *ABS*	00000000 SYSCTL_BASE_BUF
e2000000 l       *ABS*	00000000 SYSCTL_BASE
5ec00000 l       *ABS*	00000000 SC_CODE
59111012 l       *ABS*	00000000 CHIP_ID_CODE
00000000 l       *ABS*	00000000 SC_CHIP_ID
00000004 l       *ABS*	00000000 SC_CPU_DIS
00000008 l       *ABS*	00000000 SC_SET_IRQ
0000000c l       *ABS*	00000000 SC_CLR_IRQ
00000010 l       *ABS*	00000000 SC_SET_OK
00000010 l       *ABS*	00000000 SC_CPU_OK
00000014 l       *ABS*	00000000 SC_CLR_OK
00000018 l       *ABS*	00000000 SC_SOFT_RST_L
0000001c l       *ABS*	00000000 SC_HARD_RST_L
00000020 l       *ABS*	00000000 SC_SUBS_RST_L
00000024 l       *ABS*	00000000 SC_SOFT_RST_P
00000028 l       *ABS*	00000000 SC_HARD_RST_P
0000002c l       *ABS*	00000000 SC_SUBS_RST_P
00000030 l       *ABS*	00000000 SC_RST_CODE
00000034 l       *ABS*	00000000 SC_MON_ID
00000038 l       *ABS*	00000000 SC_MISC_CTRL
0000003c l       *ABS*	00000000 GPIO_RES
00000040 l       *ABS*	00000000 GPIO_PORT
00000044 l       *ABS*	00000000 GPIO_DIR
00000048 l       *ABS*	00000000 GPIO_SET
0000004c l       *ABS*	00000000 GPIO_CLR
00000048 l       *ABS*	00000000 GPIO_READ
00000050 l       *ABS*	00000000 SC_PLL1
00000054 l       *ABS*	00000000 SC_PLL2
00000058 l       *ABS*	00000000 SC_FLAG
00000058 l       *ABS*	00000000 SC_SETFLAG
0000005c l       *ABS*	00000000 SC_CLRFLAG
00000060 l       *ABS*	00000000 SC_CLKMUX
00000064 l       *ABS*	00000000 SC_SLEEP
00000068 l       *ABS*	00000000 SC_TS0
0000006c l       *ABS*	00000000 SC_TS1
00000070 l       *ABS*	00000000 SC_TS2
00000080 l       *ABS*	00000000 SC_ARB0
00000100 l       *ABS*	00000000 SC_TAS0
00000180 l       *ABS*	00000000 SC_TAC0
00000200 l       *ABS*	00000000 SC_LINK_DIS
00000000 l       *ABS*	00000000 RST_POR
00000001 l       *ABS*	00000000 RST_WDT
00000002 l       *ABS*	00000000 RST_USER
00000003 l       *ABS*	00000000 RST_SW
00000004 l       *ABS*	00000000 RST_WDI
f3000000 l       *ABS*	00000000 WDOG_BASE_UNBUF
e3000000 l       *ABS*	00000000 WDOG_BASE_BUF
e3000000 l       *ABS*	00000000 WDOG_BASE
00000000 l       *ABS*	00000000 WD_LOAD
00000004 l       *ABS*	00000000 WD_COUNT
00000008 l       *ABS*	00000000 WD_CTRL
0000000c l       *ABS*	00000000 WD_INTCLR
00000010 l       *ABS*	00000000 WD_RAWINT
00000014 l       *ABS*	00000000 WD_MSKINT
00000c00 l       *ABS*	00000000 WD_LOCK
1acce551 l       *ABS*	00000000 WD_CODE
00000001 l       *ABS*	00000000 WD_INT_B
00000002 l       *ABS*	00000000 WD_RST_B
f4000000 l       *ABS*	00000000 ETH_BASE_UNBUF
e4000000 l       *ABS*	00000000 ETH_BASE_BUF
e4000000 l       *ABS*	00000000 ETH_BASE
e4000000 l       *ABS*	00000000 ETH_TX_BASE
00000600 l       *ABS*	00000000 ETH_TX_SIZE
e4000600 l       *ABS*	00000000 ETH_TX_TOP
e4004000 l       *ABS*	00000000 ETH_RX_BASE
00000c00 l       *ABS*	00000000 ETH_RX_SIZE
e4004c00 l       *ABS*	00000000 ETH_RX_TOP
e4008000 l       *ABS*	00000000 ETH_RX_DESC_RAM
e400c000 l       *ABS*	00000000 ETH_REGS
00000000 l       *ABS*	00000000 ETH_CONTROL
00000004 l       *ABS*	00000000 ETH_STATUS
00000008 l       *ABS*	00000000 ETH_TX_LEN
0000000c l       *ABS*	00000000 ETH_TX_CMD
00000010 l       *ABS*	00000000 ETH_RX_CMD
00000014 l       *ABS*	00000000 ETH_MAC_LO
00000018 l       *ABS*	00000000 ETH_MAC_HI
0000001c l       *ABS*	00000000 ETH_PHY_CTRL
00000020 l       *ABS*	00000000 ETH_INT_CLR
00000024 l       *ABS*	00000000 ETH_RX_BUF_RP
0000002c l       *ABS*	00000000 ETH_RX_DESC_RP
00000001 l       *ABS*	00000000 ETH_TX_CLR
00000010 l       *ABS*	00000000 ETH_RX_CLR
00000001 l       *ABS*	00000000 PHY_CTRL_NRST
00000002 l       *ABS*	00000000 PHY_CTRL_DIN
00000004 l       *ABS*	00000000 PHY_CTRL_DOUT
00000008 l       *ABS*	00000000 PHY_CTRL_OE
00000010 l       *ABS*	00000000 PHY_CTRL_CLK
00000000 l       *ABS*	00000000 PKT_MC
00400000 l       *ABS*	00000000 PKT_P2P
00800000 l       *ABS*	00000000 PKT_NN
00a00000 l       *ABS*	00000000 PKT_NND
00c00000 l       *ABS*	00000000 PKT_FR
00020000 l       *ABS*	00000000 PKT_PL
00020000 l       *ABS*	00000000 PKT_MC_PL
00420000 l       *ABS*	00000000 PKT_P2P_PL
00820000 l       *ABS*	00000000 PKT_NN_PL
00c20000 l       *ABS*	00000000 PKT_FR_PL
0000000a l       *ABS*	00000000 CLK_XTAL_MHZ
0007011a l       *ABS*	00000000 PLL_260
0007011e l       *ABS*	00000000 PLL_300
00070121 l       *ABS*	00000000 PLL_330
00070128 l       *ABS*	00000000 PLL_400
00000050 l       *ABS*	00000000 PLL_LOCK_TIME
809488a5 l       *ABS*	00000000 PLL_CLK_SEL
00000020 l       *ABS*	00000000 SERIAL_NCS
00000010 l       *ABS*	00000000 SERIAL_CLK
00000008 l       *ABS*	00000000 SERIAL_SI
00000004 l       *ABS*	00000000 SERIAL_SO
00000038 l       *ABS*	00000000 SERIAL_OE
80000000 l       *ABS*	00000000 SDRAM_TQ
40000000 l       *ABS*	00000000 SDRAM_DPD
20000000 l       *ABS*	00000000 SDRAM_HERE
00000001 l       *ABS*	00000000 LED_0
00000010 l       *ABS*	00000000 MODE_USER
00000011 l       *ABS*	00000000 MODE_FIQ
00000012 l       *ABS*	00000000 MODE_IRQ
00000013 l       *ABS*	00000000 MODE_SVC
00000017 l       *ABS*	00000000 MODE_ABT
0000001b l       *ABS*	00000000 MODE_UND
0000001f l       *ABS*	00000000 MODE_SYS
00000020 l       *ABS*	00000000 THUMB_BIT
00000080 l       *ABS*	00000000 IMASK_IRQ
00000040 l       *ABS*	00000000 IMASK_FIQ
000000c0 l       *ABS*	00000000 IMASK_ALL
00000001 l       *ABS*	00000000 SARK_EVENT
00000180 l       *ABS*	00000000 SVC_STACK
00000100 l       *ABS*	00000000 IRQ_STACK
00000100 l       *ABS*	00000000 FIQ_STACK
00000004 l       *ABS*	00000000 NUM_SDP_MSGS
0000000f l       *ABS*	00000000 SARK_SLOT
00000010 l       *ABS*	00000000 INIT_EVENTS
deaddead l       *ABS*	00000000 DEAD_WORD
00000001 l       *ABS*	00000000 APLX_ACOPY
00000002 l       *ABS*	00000000 APLX_RCOPY
00000003 l       *ABS*	00000000 APLX_FILL
00000004 l       *ABS*	00000000 APLX_EXEC
000000ff l       *ABS*	00000000 APLX_END
00000010 l       *ABS*	00000000 APLX_ENTRY_SIZE
00000040 l       *ABS*	00000000 APLX_BUF_SIZE
00007fc0 l       *ABS*	00000000 APLX_BUFFER
000000ff l       *ABS*	00000000 TAG_NONE
00000000 l       *ABS*	00000000 TAG_HOST
00000001 l       *ABS*	00000000 RTR_ALLOC_FIRST
00000400 l       *ABS*	00000000 RTR_ALLOC_LAST
000003ff l       *ABS*	00000000 RTR_ALLOC_MAX
00000001 l       *ABS*	00000000 ALLOC_LOCK
00000002 l       *ABS*	00000000 ALLOC_ID
00000005 l       *ABS*	00000000 A_LOCK_SEMA
00000001 l       *ABS*	00000000 A_RTE_RESET
00000002 l       *ABS*	00000000 A_RTE_UNDEF
00000003 l       *ABS*	00000000 A_RTE_SVC
00000004 l       *ABS*	00000000 A_RTE_PABT
00000005 l       *ABS*	00000000 A_RTE_DABT
00000006 l       *ABS*	00000000 A_RTE_IRQ
00000007 l       *ABS*	00000000 A_RTE_FIQ
00000008 l       *ABS*	00000000 A_RTE_VIC
00000002 l       *ABS*	00000000 A_STATE_RTE
00000006 l       *ABS*	00000000 EVENT_COUNT
00000000 l       *ABS*	00000000 CMD_VER
00000001 l       *ABS*	00000000 CMD_RUN
00000002 l       *ABS*	00000000 CMD_READ
00000003 l       *ABS*	00000000 CMD_WRITE
00000004 l       *ABS*	00000000 CMD_APLX
00000005 l       *ABS*	00000000 CMD_FILL
00000010 l       *ABS*	00000000 CMD_REMAP
00000011 l       *ABS*	00000000 CMD_LINK_READ
00000012 l       *ABS*	00000000 CMD_LINK_WRITE
00000013 l       *ABS*	00000000 CMD_AR
00000014 l       *ABS*	00000000 CMD_NNP
00000015 l       *ABS*	00000000 CMD_P2PC
00000016 l       *ABS*	00000000 CMD_SIG
00000017 l       *ABS*	00000000 CMD_FFD
00000018 l       *ABS*	00000000 CMD_AS
00000019 l       *ABS*	00000000 CMD_LED
0000001a l       *ABS*	00000000 CMD_IPTAG
0000001b l       *ABS*	00000000 CMD_SROM
0000001c l       *ABS*	00000000 CMD_ALLOC
0000001d l       *ABS*	00000000 CMD_RTR
00000040 l       *ABS*	00000000 CMD_TUBE
00000080 l       *ABS*	00000000 RC_OK
00000081 l       *ABS*	00000000 RC_LEN
00000082 l       *ABS*	00000000 RC_SUM
00000083 l       *ABS*	00000000 RC_CMD
00000084 l       *ABS*	00000000 RC_ARG
00000085 l       *ABS*	00000000 RC_PORT
00000086 l       *ABS*	00000000 RC_TIMEOUT
00000087 l       *ABS*	00000000 RC_ROUTE
00000088 l       *ABS*	00000000 RC_CPU
00000089 l       *ABS*	00000000 RC_DEAD
0000008a l       *ABS*	00000000 RC_BUF
0000008b l       *ABS*	00000000 RC_P2P_NOREPLY
0000008c l       *ABS*	00000000 RC_P2P_REJECT
0000008d l       *ABS*	00000000 RC_P2P_BUSY
0000008e l       *ABS*	00000000 RC_P2P_TIMEOUT
0000008f l       *ABS*	00000000 RC_PKT_TX
00000000 l       *ABS*	00000000 TYPE_BYTE
00000001 l       *ABS*	00000000 TYPE_HALF
00000002 l       *ABS*	00000000 TYPE_WORD
00000005 l       *ABS*	00000000 PORT_SHIFT
000000e0 l       *ABS*	00000000 PORT_MASK
0000001f l       *ABS*	00000000 CPU_MASK
000000ff l       *ABS*	00000000 PORT_ETH
00000100 l       *ABS*	00000000 SDP_BUF_SIZE
00000080 l       *ABS*	00000000 VCPU_SIZE
0000002c l       *ABS*	00000000 VCPU_RT_CODE
0000002d l       *ABS*	00000000 VCPU_CPU_FLAGS
0000002e l       *ABS*	00000000 VCPU_CPU_STATE
0000002f l       *ABS*	00000000 VCPU_APP_ID
0000001c l       *ABS*	00000000 SARK_MSG_INT
0000001d l       *ABS*	00000000 SARK_SIG_INT
00000000 l       *ABS*	00000000 SARK_VIRT_CPU
00000008 l       *ABS*	00000000 SARK_RANDOM
00000030 l       *ABS*	00000000 SARK_CPU_CLK
00000020 l       *ABS*	00000000 SV_SSIZE
00000060 l       *ABS*	00000000 SV_USIZE
00000080 l       *ABS*	00000000 SV_ISIZE
00000020 l       *ABS*	00000000 SV_VSIZE
00000040 l       *ABS*	00000000 SV_RSIZE
00001000 l       *ABS*	00000000 SV_SIZE
e5007fe0 l       *ABS*	00000000 SV_SROM
e5007f80 l       *ABS*	00000000 SV_UBASE
e5007f00 l       *ABS*	00000000 SV_IBASE
e5007f00 l       *ABS*	00000000 SV_SV
00000100 l       *ABS*	00000000 SYS_BOOT
e5007000 l       *ABS*	00000000 SYS_USER_TOP
e5000100 l       *ABS*	00000000 SYS_USER_BASE
e5007ee0 l       *ABS*	00000000 SV_VECTORS
e5007ea0 l       *ABS*	00000000 SV_RANDOM
e5007000 l       *ABS*	00000000 SV_VCPU
e5007900 l       *ABS*	00000000 SV_SPARE
000005a0 l       *ABS*	00000000 SPARE_SIZE
e5007fe0 l       *ABS*	00000000 SROM_FLAG_BASE
e5007f80 l       *ABS*	00000000 STATUS_MAP_BASE
e5007ee0 l       *ABS*	00000000 RST_BLOCK_BASE
00008000 l       *ABS*	00000000 SRF_PRESENT
000000f0 l       *ABS*	00000000 SRF_HW_VER
00000008 l       *ABS*	00000000 SRF_PHY_INIT
00000004 l       *ABS*	00000000 SRF_PHY_RST
00000002 l       *ABS*	00000000 SRF_PHY_WAIT
00000001 l       *ABS*	00000000 SRF_ETH
00000000 l       *ABS*	00000000 SRF_NONE
00000020 l       RO_DATA	00000000 reset_vec
00000004 l       RO_DATA	00000000 undef
00000024 l       RO_DATA	00000000 undef_vec
00000028 l       RO_DATA	00000000 svc_vec
0000002c l       RO_DATA	00000000 pabt_vec
00000030 l       RO_DATA	00000000 dabt_vec
0000003c l       RO_DATA	00000000 fiq_vec
00000078 l       RO_DATA	00000000 reset_entry
000000d8 l       RO_DATA	00000000 undef_error
000000e0 l       RO_DATA	00000000 svc_error
000000e8 l       RO_DATA	00000000 pabt_error
000000f0 l       RO_DATA	00000000 dabt_error
00000034 l       RO_DATA	00000000 aplx_proc
00000038 l       RO_DATA	00000000 irq_vec
000000f8 l       RO_DATA	00000000 irq_error
00000100 l       RO_DATA	00000000 fiq_error
00000040 l       RO_DATA	00000000 svc_stack
00000042 l       RO_DATA	00000000 irq_stack
00000044 l       RO_DATA	00000000 fiq_stack
00000046 l       RO_DATA	00000000 stack_size
00000048 l       RO_DATA	00000000 code_top
0000004c l       RO_DATA	00000000 heap_base
00000050 l       RO_DATA	00000000 stack_top
00000054 l       RO_DATA	00000000 stack_fill
00000058 l       RO_DATA	00000000 num_msgs
00000059 l       RO_DATA	00000000 sark_slot
0000005a l       RO_DATA	00000000 num_events
0000005b l       RO_DATA	00000000 api
0000005c l       RO_DATA	00000000 app_id
0000005d l       RO_DATA	00000000 app_flags
0000005e l       RO_DATA	00000000 __PAD
00000060 l       RO_DATA	00000000 event_vec
000000d0 l       RO_DATA	00000000 reset_error
00000114 l       RO_DATA	00000000 exc_error
00000138 l       RO_DATA	00000000 cc_error
000001dc l       RO_DATA	00000000 lg1
00000218 l       RO_DATA	00000000 ws1
00000278 l       RO_DATA	00000000 wc2
00000260 l       RO_DATA	00000000 wc1
00000360 l       RO_DATA	00000000 aplx_buffer
00000364 l       RO_DATA	00000000 aplx_loader
00000350 l       RO_DATA	00000000 aplx_l0
0000037c l       RO_DATA	00000000 aplx_copy
00000378 l       RO_DATA	00000000 aplx_rcopy
0000038a l       RO_DATA	00000000 aplx_fill
0000039a l       RO_DATA	00000000 aplx_exec
00000390 l       RO_DATA	00000000 aplx_l1
00000000 l    df *ABS*	00000000 sark_base.c
00000000 l    df *ABS*	00000000 sark_event.c
00000000 l    df *ABS*	00000000 sark_timer.c
00000000 l    df *ABS*	00000000 sark_hw.c
00000000 l    df *ABS*	00000000 sark_isr.c
00000000 l    df *ABS*	00000000 sark_alloc.c
00000000 l    df *ABS*	00000000 sark_io.c
00000ffc l     F RO_DATA	00000040 io_buf_init
00001130 l     F RO_DATA	000000c2 io_put_fixed
00400030 l     O ZI_DATA	00000004 io_msg
0000152f l     O RO_DATA	00000011 hex
00400034 l     O ZI_DATA	00000004 io_buf
00400038 l     O ZI_DATA	00000004 buf_ptr
0040003c l     O ZI_DATA	00000004 sp_ptr
00000000 l    df *ABS*	00000000 sark_pkt.c
00000000 l    df *ABS*	00000000 
00000000 l    df *ABS*	00000000 random.c
00000000 l    df *ABS*	00000000 sark_build.c
00000000 l    df *ABS*	00000000 
00000040 l       *ABS*	00000000 RO_FROM
00000010 l       *ABS*	00000000 APLX_ENTRY
00001570 l       *ABS*	00000000 RW_FROM
00000000 l       *UND*	00000000 __deregister_frame_info
00000000 l       *UND*	00000000 _ITM_registerTMCloneTable
00400000 l       *ABS*	00000000 DTCM_BASE
00400000 l       *ABS*	00000000 RW_BASE
00000000 l       *ABS*	00000000 RW_LENGTH
00000040 l       *ABS*	00000000 APLX_SIZE
00000000 l       *UND*	00000000 _ITM_deregisterTMCloneTable
00400000 l       *ABS*	00000000 ZI_BASE
00000000 l       *ABS*	00000000 RO_BASE
00000000 l       *ABS*	00000000 ITCM_BASE
00000000 l       *UND*	00000000 _Jv_RegisterClasses
00000000 l       *UND*	00000000 __register_frame_info
00000114 l       *ABS*	00000000 ZI_LENGTH
000014a8 l     F RO_DATA	00000008 __io_printf_from_arm
000014b0 l     F RO_DATA	00000008 __timer_schedule_proc_from_arm
00000ac8 g     F RO_DATA	00000038 event_queue
000001c8 g     F RO_DATA	00000000 sark_lock_get
000006b8  w    F RO_DATA	00000010 sark_pre_main
00000564 g     F RO_DATA	00000034 sark_shmsg_get
00000800 g       *ABS*	00000000 STACK_SIZE
00000336 g     F RO_DATA	00000000 sark_bx
00000238 g     F RO_DATA	00000000 sark_msg_cpy
0000029c g     F RO_DATA	00000000 sark_rand
00000be4 g     F RO_DATA	0000003c event_alloc
000004f4 g     F RO_DATA	0000001e sark_block_init
00000edc g     F RO_DATA	00000028 sark_fiq_han
00000544 g     F RO_DATA	00000020 sark_msg_free
00000dc0 g     F RO_DATA	00000074 timer2_int
00000438 g     F RO_DATA	00000084 c_main
000008b4 g     F RO_DATA	00000174 sark_int
00000300 g     F RO_DATA	00000000 sark_int_han
00000a28 g     F RO_DATA	0000005c event_wait
000008a0 g     F RO_DATA	00000012 sark_wait
000001b8 g     F RO_DATA	00000000 spin1_mode_restore
00000890 g     F RO_DATA	00000010 sark_cmd_fill
00000e34 g     F RO_DATA	00000050 sark_vic_init
0000016c g     F RO_DATA	00000000 cpu_shutdown
000001b8 g     F RO_DATA	00000000 cpu_int_restore
00410000 g       *ABS*	00000000 STACK_TOP
00400114 g       ZI_DATA	00000000 HEAP_BASE
00000f04 g     F RO_DATA	000000c8 sark_xalloc
00000338 g     F RO_DATA	00000000 __gnu_thumb1_case_uqi
000003cc g     F RO_DATA	0000006c timer_proc
00000598 g     F RO_DATA	00000024 sark_shmsg_free
00000ce8 g     F RO_DATA	00000040 event_register_timer
0000012c g       RO_DATA	00000000 rt_error
000004cc g     F RO_DATA	0000000c sark_chip_id
000004e4 g     F RO_DATA	00000010 sark_cpu_state
000006c8  w    F RO_DATA	00000010 sark_post_main
00000000 g       RO_DATA	00000000 cpu_reset
000002d0 g     F RO_DATA	00000000 sark_div10
000002c4 g     F RO_DATA	00000000 sark_srand
00000108 g       RO_DATA	00000000 vic_error
00000ecc g     F RO_DATA	00000010 timer2_int_han
00000d28 g     F RO_DATA	00000080 timer_schedule
0000150c g     O RO_DATA	00000010 build_name
00000334  w    F RO_DATA	00000000 sark_config
00000a84 g     F RO_DATA	0000002c event_pause
0000151c g     O RO_DATA	00000004 build_date
000001ec g     F RO_DATA	00000000 sark_lock_free
00000fcc g     F RO_DATA	00000018 sark_alloc
00000190 g     F RO_DATA	00000000 cpu_init_mode
00000248 g     F RO_DATA	00000000 sark_word_cpy
0000017c g     F RO_DATA	00000000 cpu_sleep
00400040 g     O ZI_DATA	0000003c sark
000006d8 g     F RO_DATA	000000a8 sark_msg_send
000001c0 g     F RO_DATA	00000000 spin1_wfi
00000780 g     F RO_DATA	00000040 sark_cmd_ver
000001c0 g     F RO_DATA	00000000 cpu_wfi
00000ab0 g     F RO_DATA	00000018 event_stop
000001a8 g     F RO_DATA	00000000 cpu_int_disable
00000b6c g     F RO_DATA	00000064 event_new
00000e84 g     F RO_DATA	00000048 sark_vic_set
00000fe4 g     F RO_DATA	00000018 sark_heap_init
0040007c g     O ZI_DATA	00000098 event
00000826 g     F RO_DATA	0000006a sark_cmd_write
000005bc  w    F RO_DATA	000000fc sark_init
000003a0 g     F RO_DATA	0000002c queue_proc
000004c0  w    F RO_DATA	0000000c rte_handler
00000348 g     F RO_DATA	00000000 sark_aplx
00000da8 g     F RO_DATA	00000016 timer_schedule_proc
00000c20 g     F RO_DATA	000000c8 event_start
000011f4 g     F RO_DATA	000002b4 io_printf
00000214 g     F RO_DATA	00000000 sark_word_set
00000bd0 g     F RO_DATA	00000014 event_queue_proc
00000330 g     F RO_DATA	00000000 null_int_han
000004bc  w    F RO_DATA	00000002 schedule_sysmode
00000b00 g     F RO_DATA	0000006c event_run2
00000200 g     F RO_DATA	00000000 sark_str_cpy
000004d8 g     F RO_DATA	0000000c sark_core_id
00400000  w    O ZI_DATA	00000030 callback
0000103c g     F RO_DATA	000000f4 io_put_char
000001a8 g     F RO_DATA	00000000 spin1_int_disable
000007c0 g     F RO_DATA	00000066 sark_cmd_read
00001540 g       *ABS*	00000000 RO_LENGTH
00000514 g     F RO_DATA	00000030 sark_msg_get



Disassembly of section RO_DATA:

00000000 <cpu_reset>:
       0:	e59ff018 	ldr	pc, [pc, #24]	; 20 <reset_vec>

00000004 <undef>:
       4:	e59ff018 	ldr	pc, [pc, #24]	; 24 <undef_vec>
       8:	e59ff018 	ldr	pc, [pc, #24]	; 28 <svc_vec>
       c:	e59ff018 	ldr	pc, [pc, #24]	; 2c <pabt_vec>
      10:	e59ff018 	ldr	pc, [pc, #24]	; 30 <dabt_vec>
      14:	ebfffffa 	bl	4 <undef>
      18:	e51ffff0 	ldr	pc, [pc, #-4080]	; fffff030 <ROM_TOP+0x9ff7030>
      1c:	e59ff018 	ldr	pc, [pc, #24]	; 3c <fiq_vec>

00000020 <reset_vec>:
      20:	00000078 	.word	0x00000078

00000024 <undef_vec>:
      24:	000000d8 	.word	0x000000d8

00000028 <svc_vec>:
      28:	000000e0 	.word	0x000000e0

0000002c <pabt_vec>:
      2c:	000000e8 	.word	0x000000e8

00000030 <dabt_vec>:
      30:	000000f0 	.word	0x000000f0

00000034 <aplx_proc>:
      34:	00000349 	.word	0x00000349

00000038 <irq_vec>:
      38:	000000f8 	.word	0x000000f8

0000003c <fiq_vec>:
      3c:	00000100 	.word	0x00000100

00000040 <svc_stack>:
      40:	0060      	.short	0x0060

00000042 <irq_stack>:
      42:	0040      	.short	0x0040

00000044 <fiq_stack>:
      44:	0040      	.short	0x0040

00000046 <stack_size>:
      46:	0800      	.short	0x0800

00000048 <code_top>:
      48:	00001540 	.word	0x00001540

0000004c <heap_base>:
      4c:	00400114 	.word	0x00400114

00000050 <stack_top>:
      50:	00410000 	.word	0x00410000

00000054 <stack_fill>:
      54:	deaddead 	.word	0xdeaddead

00000058 <num_msgs>:
      58:	04          	.byte	0x04

00000059 <sark_slot>:
      59:	0f          	.byte	0x0f

0000005a <num_events>:
      5a:	10          	.byte	0x10

0000005b <api>:
	...

0000005c <app_id>:
	...

0000005d <app_flags>:
	...

0000005e <__PAD>:
	...

00000060 <event_vec>:
	...

00000078 <reset_entry>:
      78:	e24f1060 	sub	r1, pc, #96	; 0x60
      7c:	e1c103bc 	strh	r0, [r1, #60]	; 0x3c
      80:	e28f0048 	add	r0, pc, #72	; 0x48
      84:	e5810000 	str	r0, [r1]
      88:	e59f00f4 	ldr	r0, [pc, #244]	; 184 <DMA_CRCT+0x4>
      8c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
      90:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
      94:	e3a0d902 	mov	sp, #32768	; 0x8000
      98:	fa0000a5 	blx	334 <sark_config>
      9c:	e51fd054 	ldr	sp, [pc, #-84]	; 50 <stack_top>
      a0:	e15f26b2 	ldrh	r2, [pc, #-98]	; 46 <stack_size>
      a4:	e51f1058 	ldr	r1, [pc, #-88]	; 54 <stack_fill>
      a8:	e04d0002 	sub	r0, sp, r2
      ac:	eb000058 	bl	214 <sark_word_set>
      b0:	e1a0000d 	mov	r0, sp
      b4:	fa000140 	blx	5bc <sark_init>
      b8:	e121f000 	msr	CPSR_c, r0
      bc:	fa0001f7 	blx	8a0 <sark_wait>
      c0:	fa00017c 	blx	6b8 <sark_pre_main>
      c4:	eb0000db 	bl	438 <c_main>
      c8:	fa00017e 	blx	6c8 <sark_post_main>
      cc:	eb00002a 	bl	17c <cpu_sleep>

000000d0 <reset_error>:
      d0:	e3a00001 	mov	r0, #1
      d4:	ea000014 	b	12c <rt_error>

000000d8 <undef_error>:
      d8:	e3a0b002 	mov	fp, #2
      dc:	ea00000c 	b	114 <exc_error>

000000e0 <svc_error>:
      e0:	e3a0b003 	mov	fp, #3
      e4:	ea00000a 	b	114 <exc_error>

000000e8 <pabt_error>:
      e8:	e3a0b004 	mov	fp, #4
      ec:	ea000008 	b	114 <exc_error>

000000f0 <dabt_error>:
      f0:	e3a0b005 	mov	fp, #5
      f4:	ea000006 	b	114 <exc_error>

000000f8 <irq_error>:
      f8:	e3a0b006 	mov	fp, #6
      fc:	ea000004 	b	114 <exc_error>

00000100 <fiq_error>:
     100:	e3a0b007 	mov	fp, #7
     104:	ea000002 	b	114 <exc_error>

00000108 <vic_error>:
     108:	e3a0b008 	mov	fp, #8
     10c:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     110:	e5900030 	ldr	r0, [r0, #48]	; 0x30

00000114 <exc_error>:
     114:	e1a0a00e 	mov	sl, lr
     118:	e14f8000 	mrs	r8, SPSR
     11c:	e38890c0 	orr	r9, r8, #192	; 0xc0
     120:	e3c99020 	bic	r9, r9, #32
     124:	e12ff009 	msr	CPSR_fsxc, r9
     128:	ea000002 	b	138 <cc_error>

0000012c <rt_error>:
     12c:	e1a0b000 	mov	fp, r0
     130:	e10f8000 	mrs	r8, CPSR
     134:	e1a0a00e 	mov	sl, lr

00000138 <cc_error>:
     138:	e59fc048 	ldr	ip, [pc, #72]	; 188 <DMA_CRCT+0x8>
     13c:	e59cc000 	ldr	ip, [ip]
     140:	e3a09080 	mov	r9, #128	; 0x80
     144:	e59fe040 	ldr	lr, [pc, #64]	; 18c <DMA_CRCT+0xc>
     148:	e02ee99c 	mla	lr, ip, r9, lr
     14c:	e1a0900d 	mov	r9, sp
     150:	e88e07ff 	stm	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl}
     154:	e5ceb02c 	strb	fp, [lr, #44]	; 0x2c
     158:	e3a08002 	mov	r8, #2
     15c:	e5ce802e 	strb	r8, [lr, #46]	; 0x2e
     160:	e1a0000b 	mov	r0, fp
     164:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
     168:	fa0000d4 	blx	4c0 <rte_handler>

0000016c <cpu_shutdown>:
     16c:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
     170:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     174:	e3e01000 	mvn	r1, #0
     178:	e5801014 	str	r1, [r0, #20]

0000017c <cpu_sleep>:
     17c:	ee070f90 	mcr	15, 0, r0, cr7, cr0, {4}
     180:	eafffffd 	b	17c <cpu_sleep>
     184:	00001f7e 	.word	0x00001f7e
     188:	00400040 	.word	0x00400040
     18c:	e5007000 	.word	0xe5007000

00000190 <cpu_init_mode>:
     190:	e10f3000 	mrs	r3, CPSR
     194:	e121f001 	msr	CPSR_c, r1
     198:	e1a0d000 	mov	sp, r0
     19c:	e12ff003 	msr	CPSR_fsxc, r3
     1a0:	e0400102 	sub	r0, r0, r2, lsl #2
     1a4:	e12fff1e 	bx	lr

000001a8 <cpu_int_disable>:
     1a8:	e10f0000 	mrs	r0, CPSR
     1ac:	e38010c0 	orr	r1, r0, #192	; 0xc0
     1b0:	e121f001 	msr	CPSR_c, r1
     1b4:	e12fff1e 	bx	lr

000001b8 <cpu_int_restore>:
     1b8:	e12ff000 	msr	CPSR_fsxc, r0
     1bc:	e12fff1e 	bx	lr

000001c0 <cpu_wfi>:
     1c0:	ee070f90 	mcr	15, 0, r0, cr7, cr0, {4}
     1c4:	e12fff1e 	bx	lr

000001c8 <sark_lock_get>:
     1c8:	e3a0c4e2 	mov	ip, #-503316480	; 0xe2000000
     1cc:	e08cc100 	add	ip, ip, r0, lsl #2
     1d0:	e10f0000 	mrs	r0, CPSR
     1d4:	e38010c0 	orr	r1, r0, #192	; 0xc0
     1d8:	e121f001 	msr	CPSR_c, r1

000001dc <lg1>:
     1dc:	e59c1100 	ldr	r1, [ip, #256]	; 0x100
     1e0:	e3110102 	tst	r1, #-2147483648	; 0x80000000
     1e4:	1afffffc 	bne	1dc <lg1>
     1e8:	e12fff1e 	bx	lr

000001ec <sark_lock_free>:
     1ec:	e3a0c4e2 	mov	ip, #-503316480	; 0xe2000000
     1f0:	e08c1101 	add	r1, ip, r1, lsl #2
     1f4:	e5911180 	ldr	r1, [r1, #384]	; 0x180
     1f8:	e121f000 	msr	CPSR_c, r0
     1fc:	e12fff1e 	bx	lr

00000200 <sark_str_cpy>:
     200:	e4d12001 	ldrb	r2, [r1], #1
     204:	e3520000 	cmp	r2, #0
     208:	e4c02001 	strb	r2, [r0], #1
     20c:	1afffffb 	bne	200 <sark_str_cpy>
     210:	e12fff1e 	bx	lr

00000214 <sark_word_set>:
     214:	e1a03001 	mov	r3, r1

00000218 <ws1>:
     218:	e2522010 	subs	r2, r2, #16
     21c:	28a0000a 	stmiacs	r0!, {r1, r3}
     220:	28a0000a 	stmiacs	r0!, {r1, r3}
     224:	2afffffb 	bcs	218 <ws1>
     228:	e1b02e82 	lsls	r2, r2, #29
     22c:	28a0000a 	stmiacs	r0!, {r1, r3}
     230:	48a00002 	stmiami	r0!, {r1}
     234:	e12fff1e 	bx	lr

00000238 <sark_msg_cpy>:
     238:	e2800004 	add	r0, r0, #4
     23c:	e2811004 	add	r1, r1, #4
     240:	e1d120b0 	ldrh	r2, [r1]
     244:	e2822004 	add	r2, r2, #4

00000248 <sark_word_cpy>:
     248:	e3120003 	tst	r2, #3
     24c:	13c22003 	bicne	r2, r2, #3
     250:	12822004 	addne	r2, r2, #4
     254:	e92d4010 	push	{r4, lr}
     258:	e2522020 	subs	r2, r2, #32
     25c:	3a000005 	bcc	278 <wc2>

00000260 <wc1>:
     260:	e8b15018 	ldm	r1!, {r3, r4, ip, lr}
     264:	e8a05018 	stmia	r0!, {r3, r4, ip, lr}
     268:	e8b15018 	ldm	r1!, {r3, r4, ip, lr}
     26c:	e8a05018 	stmia	r0!, {r3, r4, ip, lr}
     270:	e2522020 	subs	r2, r2, #32
     274:	2afffff9 	bcs	260 <wc1>

00000278 <wc2>:
     278:	e1b0ce02 	lsls	ip, r2, #28
     27c:	28b15018 	ldmcs	r1!, {r3, r4, ip, lr}
     280:	28a05018 	stmiacs	r0!, {r3, r4, ip, lr}
     284:	48b10018 	ldmmi	r1!, {r3, r4}
     288:	48a00018 	stmiami	r0!, {r3, r4}
     28c:	e1b0cf02 	lsls	ip, r2, #30
     290:	24913004 	ldrcs	r3, [r1], #4
     294:	24803004 	strcs	r3, [r0], #4
     298:	e8bd8010 	pop	{r4, pc}

0000029c <sark_rand>:
     29c:	e59f301c 	ldr	r3, [pc, #28]	; 2c0 <sark_rand+0x24>
     2a0:	e8930003 	ldm	r3, {r0, r1}
     2a4:	e11100a1 	tst	r1, r1, lsr #1
     2a8:	e1b02060 	rrxs	r2, r0
     2ac:	e0a11001 	adc	r1, r1, r1
     2b0:	e0222600 	eor	r2, r2, r0, lsl #12
     2b4:	e0220a22 	eor	r0, r2, r2, lsr #20
     2b8:	e8830003 	stm	r3, {r0, r1}
     2bc:	e12fff1e 	bx	lr
     2c0:	00400048 	.word	0x00400048

000002c4 <sark_srand>:
     2c4:	4a01      	ldr	r2, [pc, #4]	; (2cc <sark_srand+0x8>)
     2c6:	2100      	movs	r1, #0
     2c8:	c203      	stmia	r2!, {r0, r1}
     2ca:	4770      	bx	lr
     2cc:	00400048 	.word	0x00400048

000002d0 <sark_div10>:
     2d0:	e241200a 	sub	r2, r1, #10
     2d4:	e0411121 	sub	r1, r1, r1, lsr #2
     2d8:	e0811221 	add	r1, r1, r1, lsr #4
     2dc:	e0811421 	add	r1, r1, r1, lsr #8
     2e0:	e0811821 	add	r1, r1, r1, lsr #16
     2e4:	e1a011a1 	lsr	r1, r1, #3
     2e8:	e0813101 	add	r3, r1, r1, lsl #2
     2ec:	e0522083 	subs	r2, r2, r3, lsl #1
     2f0:	52811001 	addpl	r1, r1, #1
     2f4:	4282200a 	addmi	r2, r2, #10
     2f8:	e8800006 	stm	r0, {r1, r2}
     2fc:	e12fff1e 	bx	lr

00000300 <sark_int_han>:
     300:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
     304:	e24e0004 	sub	r0, lr, #4
     308:	e14fc000 	mrs	ip, SPSR
     30c:	e321f01f 	msr	CPSR_c, #31
     310:	e92d5000 	push	{ip, lr}
     314:	fa000166 	blx	8b4 <sark_int>
     318:	e8bd5000 	pop	{ip, lr}
     31c:	e321f092 	msr	CPSR_c, #146	; 0x92
     320:	e16ff00c 	msr	SPSR_fsxc, ip
     324:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     328:	e5800030 	str	r0, [r0, #48]	; 0x30
     32c:	e8bd500f 	pop	{r0, r1, r2, r3, ip, lr}

00000330 <null_int_han>:
     330:	e25ef004 	subs	pc, lr, #4

00000334 <sark_config>:
     334:	4770      	bx	lr

00000336 <sark_bx>:
     336:	4700      	bx	r0

00000338 <__gnu_thumb1_case_uqi>:
     338:	468c      	mov	ip, r1
     33a:	4671      	mov	r1, lr
     33c:	3901      	subs	r1, #1
     33e:	5c09      	ldrb	r1, [r1, r0]
     340:	0049      	lsls	r1, r1, #1
     342:	448e      	add	lr, r1
     344:	4661      	mov	r1, ip
     346:	4770      	bx	lr

00000348 <sark_aplx>:
     348:	b5f2      	push	{r1, r4, r5, r6, r7, lr}
     34a:	4905      	ldr	r1, [pc, #20]	; (360 <aplx_buffer>)
     34c:	a605      	add	r6, pc, #20	; (adr r6, 364 <aplx_loader>)
     34e:	2740      	movs	r7, #64	; 0x40

00000350 <aplx_l0>:
     350:	ce3c      	ldmia	r6!, {r2, r3, r4, r5}
     352:	c13c      	stmia	r1!, {r2, r3, r4, r5}
     354:	3f10      	subs	r7, #16
     356:	d1fb      	bne.n	350 <aplx_l0>
     358:	1c04      	adds	r4, r0, #0
     35a:	393f      	subs	r1, #63	; 0x3f
     35c:	4708      	bx	r1
	...

00000360 <aplx_buffer>:
     360:	00007fc0 	.word	0x00007fc0

00000364 <aplx_loader>:
     364:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
     366:	2801      	cmp	r0, #1
     368:	d008      	beq.n	37c <aplx_copy>
     36a:	2802      	cmp	r0, #2
     36c:	d004      	beq.n	378 <aplx_rcopy>
     36e:	2803      	cmp	r0, #3
     370:	d00b      	beq.n	38a <aplx_fill>
     372:	2804      	cmp	r0, #4
     374:	d011      	beq.n	39a <aplx_exec>
     376:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

00000378 <aplx_rcopy>:
     378:	1912      	adds	r2, r2, r4
     37a:	3a10      	subs	r2, #16

0000037c <aplx_copy>:
     37c:	cae1      	ldmia	r2!, {r0, r5, r6, r7}
     37e:	c1e1      	stmia	r1!, {r0, r5, r6, r7}
     380:	cae1      	ldmia	r2!, {r0, r5, r6, r7}
     382:	c1e1      	stmia	r1!, {r0, r5, r6, r7}
     384:	3b20      	subs	r3, #32
     386:	d8f9      	bhi.n	37c <aplx_copy>
     388:	e7ec      	b.n	364 <aplx_loader>

0000038a <aplx_fill>:
     38a:	1c1d      	adds	r5, r3, #0
     38c:	1c1e      	adds	r6, r3, #0
     38e:	1c1f      	adds	r7, r3, #0

00000390 <aplx_l1>:
     390:	c1e8      	stmia	r1!, {r3, r5, r6, r7}
     392:	c1e8      	stmia	r1!, {r3, r5, r6, r7}
     394:	3a20      	subs	r2, #32
     396:	d8fb      	bhi.n	390 <aplx_l1>
     398:	e7e4      	b.n	364 <aplx_loader>

0000039a <aplx_exec>:
     39a:	9800      	ldr	r0, [sp, #0]
     39c:	4788      	blx	r1
     39e:	e7e1      	b.n	364 <aplx_loader>

000003a0 <queue_proc>:
     3a0:	e1a03001 	mov	r3, r1
     3a4:	e59f1014 	ldr	r1, [pc, #20]	; 3c0 <queue_proc+0x20>
     3a8:	e3500000 	cmp	r0, #0
     3ac:	e59f2010 	ldr	r2, [pc, #16]	; 3c4 <queue_proc+0x24>
     3b0:	e3a00000 	mov	r0, #0
     3b4:	01a02001 	moveq	r2, r1
     3b8:	e59f1008 	ldr	r1, [pc, #8]	; 3c8 <queue_proc+0x28>
     3bc:	ea000439 	b	14a8 <__io_printf_from_arm>
     3c0:	000014be 	.word	0x000014be
     3c4:	000014b8 	.word	0x000014b8
     3c8:	000014c4 	.word	0x000014c4

000003cc <timer_proc>:
     3cc:	e92d4070 	push	{r4, r5, r6, lr}
     3d0:	e1a05000 	mov	r5, r0
     3d4:	ebffffb0 	bl	29c <sark_rand>
     3d8:	e2755001 	rsbs	r5, r5, #1
     3dc:	33a05000 	movcc	r5, #0
     3e0:	e1a01005 	mov	r1, r5
     3e4:	e3a03000 	mov	r3, #0
     3e8:	e20040ff 	and	r4, r0, #255	; 0xff
     3ec:	e1a02004 	mov	r2, r4
     3f0:	e59f0030 	ldr	r0, [pc, #48]	; 428 <MC_TABLE_SIZE+0x28>
     3f4:	fa0001f5 	blx	bd0 <event_queue_proc>
     3f8:	e1a02004 	mov	r2, r4
     3fc:	e3a00002 	mov	r0, #2
     400:	e59f1024 	ldr	r1, [pc, #36]	; 42c <MC_TABLE_SIZE+0x2c>
     404:	fa00037a 	blx	11f4 <io_printf>
     408:	e59f3020 	ldr	r3, [pc, #32]	; 430 <MC_TABLE_SIZE+0x30>
     40c:	e2844001 	add	r4, r4, #1
     410:	e0030394 	mul	r3, r4, r3
     414:	e1a01005 	mov	r1, r5
     418:	e3a02000 	mov	r2, #0
     41c:	e59f0010 	ldr	r0, [pc, #16]	; 434 <MC_TABLE_SIZE+0x34>
     420:	e8bd4070 	pop	{r4, r5, r6, lr}
     424:	ea000421 	b	14b0 <__timer_schedule_proc_from_arm>
     428:	000003a0 	.word	0x000003a0
     42c:	000014d7 	.word	0x000014d7
     430:	00002710 	.word	0x00002710
     434:	000003cc 	.word	0x000003cc

00000438 <c_main>:
     438:	e92d4010 	push	{r4, lr}
     43c:	fa000025 	blx	4d8 <sark_core_id>
     440:	e59f1064 	ldr	r1, [pc, #100]	; 4ac <c_main+0x74>
     444:	e1a04000 	mov	r4, r0
     448:	e1a02004 	mov	r2, r4
     44c:	e3a00002 	mov	r0, #2
     450:	fa000367 	blx	11f4 <io_printf>
     454:	fa00001c 	blx	4cc <sark_chip_id>
     458:	e59f3050 	ldr	r3, [pc, #80]	; 4b0 <c_main+0x78>
     45c:	e1d331b8 	ldrh	r3, [r3, #24]
     460:	e1a00280 	lsl	r0, r0, #5
     464:	e0200493 	mla	r0, r3, r4, r0
     468:	faffff95 	blx	2c4 <sark_srand>
     46c:	e3a00000 	mov	r0, #0
     470:	fa00021c 	blx	ce8 <event_register_timer>
     474:	e3a01000 	mov	r1, #0
     478:	e1a03001 	mov	r3, r1
     47c:	e1a02001 	mov	r2, r1
     480:	e59f002c 	ldr	r0, [pc, #44]	; 4b4 <c_main+0x7c>
     484:	fa0001d1 	blx	bd0 <event_queue_proc>
     488:	e3a00000 	mov	r0, #0
     48c:	e1a01000 	mov	r1, r0
     490:	e1a02000 	mov	r2, r0
     494:	fa0001e1 	blx	c20 <event_start>
     498:	e59f1018 	ldr	r1, [pc, #24]	; 4b8 <c_main+0x80>
     49c:	e1a02000 	mov	r2, r0
     4a0:	e3a00002 	mov	r0, #2
     4a4:	e8bd4010 	pop	{r4, lr}
     4a8:	ea0003fe 	b	14a8 <__io_printf_from_arm>
     4ac:	000014e6 	.word	0x000014e6
     4b0:	e5007f00 	.word	0xe5007f00
     4b4:	000003cc 	.word	0x000003cc
     4b8:	000014f7 	.word	0x000014f7

000004bc <schedule_sysmode>:
     4bc:	4770      	bx	lr
	...

000004c0 <rte_handler>:
     4c0:	4b01      	ldr	r3, [pc, #4]	; (4c8 <rte_handler+0x8>)
     4c2:	2208      	movs	r2, #8
     4c4:	701a      	strb	r2, [r3, #0]
     4c6:	4770      	bx	lr
     4c8:	e5007f2b 	.word	0xe5007f2b

000004cc <sark_chip_id>:
     4cc:	4b01      	ldr	r3, [pc, #4]	; (4d4 <sark_chip_id+0x8>)
     4ce:	8818      	ldrh	r0, [r3, #0]
     4d0:	4770      	bx	lr
     4d2:	46c0      	nop			; (mov r8, r8)
     4d4:	e5007f00 	.word	0xe5007f00

000004d8 <sark_core_id>:
     4d8:	4b01      	ldr	r3, [pc, #4]	; (4e0 <sark_core_id+0x8>)
     4da:	6818      	ldr	r0, [r3, #0]
     4dc:	4770      	bx	lr
     4de:	46c0      	nop			; (mov r8, r8)
     4e0:	00400040 	.word	0x00400040

000004e4 <sark_cpu_state>:
     4e4:	4b02      	ldr	r3, [pc, #8]	; (4f0 <sark_cpu_state+0xc>)
     4e6:	69db      	ldr	r3, [r3, #28]
     4e8:	332e      	adds	r3, #46	; 0x2e
     4ea:	7018      	strb	r0, [r3, #0]
     4ec:	4770      	bx	lr
     4ee:	46c0      	nop			; (mov r8, r8)
     4f0:	00400040 	.word	0x00400040

000004f4 <sark_block_init>:
     4f4:	b530      	push	{r4, r5, lr}
     4f6:	1c0b      	adds	r3, r1, #0
     4f8:	1c04      	adds	r4, r0, #0
     4fa:	e002      	b.n	502 <sark_block_init+0xe>
     4fc:	18a5      	adds	r5, r4, r2
     4fe:	6025      	str	r5, [r4, #0]
     500:	1c2c      	adds	r4, r5, #0
     502:	3b01      	subs	r3, #1
     504:	2b00      	cmp	r3, #0
     506:	d1f9      	bne.n	4fc <sark_block_init+0x8>
     508:	3901      	subs	r1, #1
     50a:	434a      	muls	r2, r1
     50c:	1880      	adds	r0, r0, r2
     50e:	6003      	str	r3, [r0, #0]
     510:	bd30      	pop	{r4, r5, pc}
	...

00000514 <sark_msg_get>:
     514:	b510      	push	{r4, lr}
     516:	f7ff ee48 	blx	1a8 <cpu_int_disable>
     51a:	4b09      	ldr	r3, [pc, #36]	; (540 <sark_msg_get+0x2c>)
     51c:	6a1c      	ldr	r4, [r3, #32]
     51e:	2c00      	cmp	r4, #0
     520:	d00a      	beq.n	538 <sark_msg_get+0x24>
     522:	6822      	ldr	r2, [r4, #0]
     524:	621a      	str	r2, [r3, #32]
     526:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
     528:	8cd9      	ldrh	r1, [r3, #38]	; 0x26
     52a:	3201      	adds	r2, #1
     52c:	0412      	lsls	r2, r2, #16
     52e:	0c12      	lsrs	r2, r2, #16
     530:	849a      	strh	r2, [r3, #36]	; 0x24
     532:	4291      	cmp	r1, r2
     534:	d200      	bcs.n	538 <sark_msg_get+0x24>
     536:	84da      	strh	r2, [r3, #38]	; 0x26
     538:	f7ff ee3e 	blx	1b8 <cpu_int_restore>
     53c:	1c20      	adds	r0, r4, #0
     53e:	bd10      	pop	{r4, pc}
     540:	00400040 	.word	0x00400040

00000544 <sark_msg_free>:
     544:	b510      	push	{r4, lr}
     546:	1c04      	adds	r4, r0, #0
     548:	f7ff ee2e 	blx	1a8 <cpu_int_disable>
     54c:	4b04      	ldr	r3, [pc, #16]	; (560 <sark_msg_free+0x1c>)
     54e:	6a1a      	ldr	r2, [r3, #32]
     550:	6022      	str	r2, [r4, #0]
     552:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
     554:	621c      	str	r4, [r3, #32]
     556:	3a01      	subs	r2, #1
     558:	849a      	strh	r2, [r3, #36]	; 0x24
     55a:	f7ff ee2e 	blx	1b8 <cpu_int_restore>
     55e:	bd10      	pop	{r4, pc}
     560:	00400040 	.word	0x00400040

00000564 <sark_shmsg_get>:
     564:	b510      	push	{r4, lr}
     566:	2000      	movs	r0, #0
     568:	f7ff ee2e 	blx	1c8 <sark_lock_get>
     56c:	4b09      	ldr	r3, [pc, #36]	; (594 <sark_shmsg_get+0x30>)
     56e:	681c      	ldr	r4, [r3, #0]
     570:	2c00      	cmp	r4, #0
     572:	d00a      	beq.n	58a <sark_shmsg_get+0x26>
     574:	6822      	ldr	r2, [r4, #0]
     576:	601a      	str	r2, [r3, #0]
     578:	889a      	ldrh	r2, [r3, #4]
     57a:	88d9      	ldrh	r1, [r3, #6]
     57c:	3201      	adds	r2, #1
     57e:	0412      	lsls	r2, r2, #16
     580:	0c12      	lsrs	r2, r2, #16
     582:	809a      	strh	r2, [r3, #4]
     584:	4291      	cmp	r1, r2
     586:	d200      	bcs.n	58a <sark_shmsg_get+0x26>
     588:	80da      	strh	r2, [r3, #6]
     58a:	2100      	movs	r1, #0
     58c:	f7ff ee2e 	blx	1ec <sark_lock_free>
     590:	1c20      	adds	r0, r4, #0
     592:	bd10      	pop	{r4, pc}
     594:	e5007f68 	.word	0xe5007f68

00000598 <sark_shmsg_free>:
     598:	b510      	push	{r4, lr}
     59a:	1c04      	adds	r4, r0, #0
     59c:	2000      	movs	r0, #0
     59e:	f7ff ee14 	blx	1c8 <sark_lock_get>
     5a2:	4b05      	ldr	r3, [pc, #20]	; (5b8 <SPARE_SIZE+0x18>)
     5a4:	2100      	movs	r1, #0
     5a6:	681a      	ldr	r2, [r3, #0]
     5a8:	6022      	str	r2, [r4, #0]
     5aa:	889a      	ldrh	r2, [r3, #4]
     5ac:	601c      	str	r4, [r3, #0]
     5ae:	3a01      	subs	r2, #1
     5b0:	809a      	strh	r2, [r3, #4]
     5b2:	f7ff ee1c 	blx	1ec <sark_lock_free>
     5b6:	bd10      	pop	{r4, pc}
     5b8:	e5007f68 	.word	0xe5007f68

000005bc <sark_init>:
     5bc:	b570      	push	{r4, r5, r6, lr}
     5be:	2520      	movs	r5, #32
     5c0:	1c04      	adds	r4, r0, #0
     5c2:	8c28      	ldrh	r0, [r5, #32]
     5c4:	8c6a      	ldrh	r2, [r5, #34]	; 0x22
     5c6:	0080      	lsls	r0, r0, #2
     5c8:	1a20      	subs	r0, r4, r0
     5ca:	21d2      	movs	r1, #210	; 0xd2
     5cc:	f7ff ede0 	blx	190 <cpu_init_mode>
     5d0:	8caa      	ldrh	r2, [r5, #36]	; 0x24
     5d2:	21d1      	movs	r1, #209	; 0xd1
     5d4:	f7ff eddc 	blx	190 <cpu_init_mode>
     5d8:	2200      	movs	r2, #0
     5da:	21df      	movs	r1, #223	; 0xdf
     5dc:	f7ff edd8 	blx	190 <cpu_init_mode>
     5e0:	8ce9      	ldrh	r1, [r5, #38]	; 0x26
     5e2:	2658      	movs	r6, #88	; 0x58
     5e4:	0889      	lsrs	r1, r1, #2
     5e6:	0089      	lsls	r1, r1, #2
     5e8:	1a61      	subs	r1, r4, r1
     5ea:	4c2a      	ldr	r4, [pc, #168]	; (694 <ETH_TX_SIZE+0x94>)
     5ec:	6121      	str	r1, [r4, #16]
     5ee:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
     5f0:	6160      	str	r0, [r4, #20]
     5f2:	f000 fcf7 	bl	fe4 <sark_heap_init>
     5f6:	4b28      	ldr	r3, [pc, #160]	; (698 <ETH_TX_SIZE+0x98>)
     5f8:	4a28      	ldr	r2, [pc, #160]	; (69c <ETH_TX_SIZE+0x9c>)
     5fa:	681b      	ldr	r3, [r3, #0]
     5fc:	4d28      	ldr	r5, [pc, #160]	; (6a0 <ETH_TX_SIZE+0xa0>)
     5fe:	0e1b      	lsrs	r3, r3, #24
     600:	6063      	str	r3, [r4, #4]
     602:	189b      	adds	r3, r3, r2
     604:	2192      	movs	r1, #146	; 0x92
     606:	0049      	lsls	r1, r1, #1
     608:	61a0      	str	r0, [r4, #24]
     60a:	791b      	ldrb	r3, [r3, #4]
     60c:	6023      	str	r3, [r4, #0]
     60e:	8cab      	ldrh	r3, [r5, #36]	; 0x24
     610:	8623      	strh	r3, [r4, #48]	; 0x30
     612:	4b24      	ldr	r3, [pc, #144]	; (6a4 <ETH_TX_SIZE+0xa4>)
     614:	60a3      	str	r3, [r4, #8]
     616:	7830      	ldrb	r0, [r6, #0]
     618:	f000 fcd8 	bl	fcc <sark_alloc>
     61c:	2292      	movs	r2, #146	; 0x92
     61e:	0052      	lsls	r2, r2, #1
     620:	6220      	str	r0, [r4, #32]
     622:	7831      	ldrb	r1, [r6, #0]
     624:	f7ff ff66 	bl	4f4 <sark_block_init>
     628:	6823      	ldr	r3, [r4, #0]
     62a:	2b11      	cmp	r3, #17
     62c:	d81d      	bhi.n	66a <ETH_TX_SIZE+0x6a>
     62e:	4a1e      	ldr	r2, [pc, #120]	; (6a8 <ETH_TX_SIZE+0xa8>)
     630:	01d8      	lsls	r0, r3, #7
     632:	1880      	adds	r0, r0, r2
     634:	6daa      	ldr	r2, [r5, #88]	; 0x58
     636:	61e0      	str	r0, [r4, #28]
     638:	4353      	muls	r3, r2
     63a:	6d6a      	ldr	r2, [r5, #84]	; 0x54
     63c:	009b      	lsls	r3, r3, #2
     63e:	18d3      	adds	r3, r2, r3
     640:	2100      	movs	r1, #0
     642:	2270      	movs	r2, #112	; 0x70
     644:	6363      	str	r3, [r4, #52]	; 0x34
     646:	f7ff ede6 	blx	214 <sark_word_set>
     64a:	69e0      	ldr	r0, [r4, #28]
     64c:	2205      	movs	r2, #5
     64e:	1c03      	adds	r3, r0, #0
     650:	332e      	adds	r3, #46	; 0x2e
     652:	701a      	strb	r2, [r3, #0]
     654:	235c      	movs	r3, #92	; 0x5c
     656:	781a      	ldrb	r2, [r3, #0]
     658:	1c03      	adds	r3, r0, #0
     65a:	332f      	adds	r3, #47	; 0x2f
     65c:	701a      	strb	r2, [r3, #0]
     65e:	69ed      	ldr	r5, [r5, #28]
     660:	6445      	str	r5, [r0, #68]	; 0x44
     662:	4912      	ldr	r1, [pc, #72]	; (6ac <ETH_TX_SIZE+0xac>)
     664:	3048      	adds	r0, #72	; 0x48
     666:	f7ff edcc 	blx	200 <sark_str_cpy>
     66a:	f000 fbe3 	bl	e34 <sark_vic_init>
     66e:	2359      	movs	r3, #89	; 0x59
     670:	7818      	ldrb	r0, [r3, #0]
     672:	2112      	movs	r1, #18
     674:	2201      	movs	r2, #1
     676:	4b0e      	ldr	r3, [pc, #56]	; (6b0 <ETH_TX_SIZE+0xb0>)
     678:	f000 fc04 	bl	e84 <sark_vic_set>
     67c:	2106      	movs	r1, #6
     67e:	2201      	movs	r2, #1
     680:	2010      	movs	r0, #16
     682:	4b0c      	ldr	r3, [pc, #48]	; (6b4 <ETH_TX_SIZE+0xb4>)
     684:	f000 fbfe 	bl	e84 <sark_vic_set>
     688:	235a      	movs	r3, #90	; 0x5a
     68a:	7818      	ldrb	r0, [r3, #0]
     68c:	f000 faaa 	bl	be4 <event_alloc>
     690:	201f      	movs	r0, #31
     692:	bd70      	pop	{r4, r5, r6, pc}
     694:	00400040 	.word	0x00400040
     698:	40000014 	.word	0x40000014
     69c:	e5007f90 	.word	0xe5007f90
     6a0:	e5007f00 	.word	0xe5007f00
     6a4:	deaddead 	.word	0xdeaddead
     6a8:	e5007000 	.word	0xe5007000
     6ac:	0000150c 	.word	0x0000150c
     6b0:	00000300 	.word	0x00000300
     6b4:	00000edc 	.word	0x00000edc

000006b8 <sark_pre_main>:
     6b8:	4b02      	ldr	r3, [pc, #8]	; (6c4 <sark_pre_main+0xc>)
     6ba:	2206      	movs	r2, #6
     6bc:	69db      	ldr	r3, [r3, #28]
     6be:	332e      	adds	r3, #46	; 0x2e
     6c0:	701a      	strb	r2, [r3, #0]
     6c2:	4770      	bx	lr
     6c4:	00400040 	.word	0x00400040

000006c8 <sark_post_main>:
     6c8:	4b02      	ldr	r3, [pc, #8]	; (6d4 <sark_post_main+0xc>)
     6ca:	220b      	movs	r2, #11
     6cc:	69db      	ldr	r3, [r3, #28]
     6ce:	332e      	adds	r3, #46	; 0x2e
     6d0:	701a      	strb	r2, [r3, #0]
     6d2:	4770      	bx	lr
     6d4:	00400040 	.word	0x00400040

000006d8 <sark_msg_send>:
     6d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     6da:	1c05      	adds	r5, r0, #0
     6dc:	1c0f      	adds	r7, r1, #0
     6de:	f7ff ff41 	bl	564 <sark_shmsg_get>
     6e2:	1c04      	adds	r4, r0, #0
     6e4:	3800      	subs	r0, #0
     6e6:	d03d      	beq.n	764 <sark_msg_send+0x8c>
     6e8:	1c29      	adds	r1, r5, #0
     6ea:	f7ff eda6 	blx	238 <sark_msg_cpy>
     6ee:	4e1e      	ldr	r6, [pc, #120]	; (768 <sark_msg_send+0x90>)
     6f0:	2501      	movs	r5, #1
     6f2:	69f3      	ldr	r3, [r6, #28]
     6f4:	1c28      	adds	r0, r5, #0
     6f6:	635c      	str	r4, [r3, #52]	; 0x34
     6f8:	3339      	adds	r3, #57	; 0x39
     6fa:	701d      	strb	r5, [r3, #0]
     6fc:	f7ff ed64 	blx	1c8 <sark_lock_get>
     700:	6831      	ldr	r1, [r6, #0]
     702:	4a1a      	ldr	r2, [pc, #104]	; (76c <sark_msg_send+0x94>)
     704:	1c2e      	adds	r6, r5, #0
     706:	6813      	ldr	r3, [r2, #0]
     708:	408e      	lsls	r6, r1
     70a:	1c31      	adds	r1, r6, #0
     70c:	4319      	orrs	r1, r3
     70e:	6011      	str	r1, [r2, #0]
     710:	2b00      	cmp	r3, #0
     712:	d106      	bne.n	722 <sark_msg_send+0x4a>
     714:	4b16      	ldr	r3, [pc, #88]	; (770 <sark_msg_send+0x98>)
     716:	4a17      	ldr	r2, [pc, #92]	; (774 <sark_msg_send+0x9c>)
     718:	781b      	ldrb	r3, [r3, #0]
     71a:	409d      	lsls	r5, r3
     71c:	4b16      	ldr	r3, [pc, #88]	; (778 <sark_msg_send+0xa0>)
     71e:	18ad      	adds	r5, r5, r2
     720:	601d      	str	r5, [r3, #0]
     722:	2101      	movs	r1, #1
     724:	f7ff ed62 	blx	1ec <sark_lock_free>
     728:	4b0f      	ldr	r3, [pc, #60]	; (768 <sark_msg_send+0x90>)
     72a:	4a14      	ldr	r2, [pc, #80]	; (77c <sark_msg_send+0xa4>)
     72c:	69db      	ldr	r3, [r3, #28]
     72e:	6815      	ldr	r5, [r2, #0]
     730:	1c18      	adds	r0, r3, #0
     732:	3039      	adds	r0, #57	; 0x39
     734:	e008      	b.n	748 <sark_msg_send+0x70>
     736:	6811      	ldr	r1, [r2, #0]
     738:	1b49      	subs	r1, r1, r5
     73a:	42b9      	cmp	r1, r7
     73c:	d904      	bls.n	748 <sark_msg_send+0x70>
     73e:	3339      	adds	r3, #57	; 0x39
     740:	781b      	ldrb	r3, [r3, #0]
     742:	2b00      	cmp	r3, #0
     744:	d009      	beq.n	75a <sark_msg_send+0x82>
     746:	e003      	b.n	750 <sark_msg_send+0x78>
     748:	7801      	ldrb	r1, [r0, #0]
     74a:	2900      	cmp	r1, #0
     74c:	d1f3      	bne.n	736 <sark_msg_send+0x5e>
     74e:	e7f6      	b.n	73e <sark_msg_send+0x66>
     750:	1c20      	adds	r0, r4, #0
     752:	f7ff ff21 	bl	598 <sark_shmsg_free>
     756:	2000      	movs	r0, #0
     758:	e004      	b.n	764 <sark_msg_send+0x8c>
     75a:	4b03      	ldr	r3, [pc, #12]	; (768 <sark_msg_send+0x90>)
     75c:	2001      	movs	r0, #1
     75e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     760:	3201      	adds	r2, #1
     762:	62da      	str	r2, [r3, #44]	; 0x2c
     764:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     766:	46c0      	nop			; (mov r8, r8)
     768:	00400040 	.word	0x00400040
     76c:	e5007fec 	.word	0xe5007fec
     770:	e5007fa8 	.word	0xe5007fa8
     774:	5ec00000 	.word	0x5ec00000
     778:	e2000008 	.word	0xe2000008
     77c:	e5007f10 	.word	0xe5007f10

00000780 <sark_cmd_ver>:
     780:	b508      	push	{r3, lr}
     782:	4b0a      	ldr	r3, [pc, #40]	; (7ac <sark_cmd_ver+0x2c>)
     784:	6859      	ldr	r1, [r3, #4]
     786:	681b      	ldr	r3, [r3, #0]
     788:	020a      	lsls	r2, r1, #8
     78a:	18d3      	adds	r3, r2, r3
     78c:	4a08      	ldr	r2, [pc, #32]	; (7b0 <sark_cmd_ver+0x30>)
     78e:	4909      	ldr	r1, [pc, #36]	; (7b4 <sark_cmd_ver+0x34>)
     790:	8812      	ldrh	r2, [r2, #0]
     792:	0412      	lsls	r2, r2, #16
     794:	189b      	adds	r3, r3, r2
     796:	6143      	str	r3, [r0, #20]
     798:	4b07      	ldr	r3, [pc, #28]	; (7b8 <sark_cmd_ver+0x38>)
     79a:	6183      	str	r3, [r0, #24]
     79c:	4b07      	ldr	r3, [pc, #28]	; (7bc <sark_cmd_ver+0x3c>)
     79e:	681b      	ldr	r3, [r3, #0]
     7a0:	61c3      	str	r3, [r0, #28]
     7a2:	3020      	adds	r0, #32
     7a4:	f7ff ed2c 	blx	200 <sark_str_cpy>
     7a8:	201b      	movs	r0, #27
     7aa:	bd08      	pop	{r3, pc}
     7ac:	00400040 	.word	0x00400040
     7b0:	e5007f00 	.word	0xe5007f00
     7b4:	00001520 	.word	0x00001520
     7b8:	00850100 	.word	0x00850100
     7bc:	0000151c 	.word	0x0000151c

000007c0 <sark_cmd_read>:
     7c0:	69c1      	ldr	r1, [r0, #28]
     7c2:	b530      	push	{r4, r5, lr}
     7c4:	6983      	ldr	r3, [r0, #24]
     7c6:	2902      	cmp	r1, #2
     7c8:	d803      	bhi.n	7d2 <sark_cmd_read+0x12>
     7ca:	2280      	movs	r2, #128	; 0x80
     7cc:	0052      	lsls	r2, r2, #1
     7ce:	429a      	cmp	r2, r3
     7d0:	d203      	bcs.n	7da <sark_cmd_read+0x1a>
     7d2:	2384      	movs	r3, #132	; 0x84
     7d4:	8203      	strh	r3, [r0, #16]
     7d6:	2300      	movs	r3, #0
     7d8:	e023      	b.n	822 <STACK_SIZE+0x22>
     7da:	6942      	ldr	r2, [r0, #20]
     7dc:	3014      	adds	r0, #20
     7de:	2900      	cmp	r1, #0
     7e0:	d108      	bne.n	7f4 <sark_cmd_read+0x34>
     7e2:	18d1      	adds	r1, r2, r3
     7e4:	1a80      	subs	r0, r0, r2
     7e6:	e002      	b.n	7ee <sark_cmd_read+0x2e>
     7e8:	7814      	ldrb	r4, [r2, #0]
     7ea:	5484      	strb	r4, [r0, r2]
     7ec:	3201      	adds	r2, #1
     7ee:	428a      	cmp	r2, r1
     7f0:	d1fa      	bne.n	7e8 <sark_cmd_read+0x28>
     7f2:	e016      	b.n	822 <STACK_SIZE+0x22>
     7f4:	2901      	cmp	r1, #1
     7f6:	d10a      	bne.n	80e <STACK_SIZE+0xe>
     7f8:	0859      	lsrs	r1, r3, #1
     7fa:	0049      	lsls	r1, r1, #1
     7fc:	1889      	adds	r1, r1, r2
     7fe:	1a80      	subs	r0, r0, r2
     800:	e002      	b.n	808 <STACK_SIZE+0x8>
     802:	8814      	ldrh	r4, [r2, #0]
     804:	5284      	strh	r4, [r0, r2]
     806:	3202      	adds	r2, #2
     808:	428a      	cmp	r2, r1
     80a:	d1fa      	bne.n	802 <STACK_SIZE+0x2>
     80c:	e009      	b.n	822 <STACK_SIZE+0x22>
     80e:	089c      	lsrs	r4, r3, #2
     810:	00a4      	lsls	r4, r4, #2
     812:	1904      	adds	r4, r0, r4
     814:	1c01      	adds	r1, r0, #0
     816:	e002      	b.n	81e <STACK_SIZE+0x1e>
     818:	1a0d      	subs	r5, r1, r0
     81a:	58ad      	ldr	r5, [r5, r2]
     81c:	c120      	stmia	r1!, {r5}
     81e:	42a1      	cmp	r1, r4
     820:	d1fa      	bne.n	818 <STACK_SIZE+0x18>
     822:	1c18      	adds	r0, r3, #0
     824:	bd30      	pop	{r4, r5, pc}

00000826 <sark_cmd_write>:
     826:	69c1      	ldr	r1, [r0, #28]
     828:	b530      	push	{r4, r5, lr}
     82a:	6982      	ldr	r2, [r0, #24]
     82c:	2902      	cmp	r1, #2
     82e:	d803      	bhi.n	838 <sark_cmd_write+0x12>
     830:	2380      	movs	r3, #128	; 0x80
     832:	005b      	lsls	r3, r3, #1
     834:	4293      	cmp	r3, r2
     836:	d202      	bcs.n	83e <sark_cmd_write+0x18>
     838:	2384      	movs	r3, #132	; 0x84
     83a:	8203      	strh	r3, [r0, #16]
     83c:	e026      	b.n	88c <sark_cmd_write+0x66>
     83e:	6943      	ldr	r3, [r0, #20]
     840:	2900      	cmp	r1, #0
     842:	d10b      	bne.n	85c <sark_cmd_write+0x36>
     844:	1881      	adds	r1, r0, r2
     846:	1c02      	adds	r2, r0, #0
     848:	e005      	b.n	856 <sark_cmd_write+0x30>
     84a:	1c14      	adds	r4, r2, #0
     84c:	3420      	adds	r4, #32
     84e:	7825      	ldrb	r5, [r4, #0]
     850:	1a14      	subs	r4, r2, r0
     852:	3201      	adds	r2, #1
     854:	54e5      	strb	r5, [r4, r3]
     856:	428a      	cmp	r2, r1
     858:	d1f7      	bne.n	84a <sark_cmd_write+0x24>
     85a:	e017      	b.n	88c <sark_cmd_write+0x66>
     85c:	3020      	adds	r0, #32
     85e:	2901      	cmp	r1, #1
     860:	d10b      	bne.n	87a <sark_cmd_write+0x54>
     862:	0851      	lsrs	r1, r2, #1
     864:	0049      	lsls	r1, r1, #1
     866:	1841      	adds	r1, r0, r1
     868:	1c02      	adds	r2, r0, #0
     86a:	e003      	b.n	874 <sark_cmd_write+0x4e>
     86c:	8815      	ldrh	r5, [r2, #0]
     86e:	1a14      	subs	r4, r2, r0
     870:	3202      	adds	r2, #2
     872:	52e5      	strh	r5, [r4, r3]
     874:	428a      	cmp	r2, r1
     876:	d1f9      	bne.n	86c <sark_cmd_write+0x46>
     878:	e008      	b.n	88c <sark_cmd_write+0x66>
     87a:	0892      	lsrs	r2, r2, #2
     87c:	0092      	lsls	r2, r2, #2
     87e:	18d2      	adds	r2, r2, r3
     880:	1ac0      	subs	r0, r0, r3
     882:	e001      	b.n	888 <sark_cmd_write+0x62>
     884:	58c1      	ldr	r1, [r0, r3]
     886:	c302      	stmia	r3!, {r1}
     888:	4293      	cmp	r3, r2
     88a:	d1fb      	bne.n	884 <sark_cmd_write+0x5e>
     88c:	2000      	movs	r0, #0
     88e:	bd30      	pop	{r4, r5, pc}

00000890 <sark_cmd_fill>:
     890:	b508      	push	{r3, lr}
     892:	1c03      	adds	r3, r0, #0
     894:	3314      	adds	r3, #20
     896:	cb07      	ldmia	r3!, {r0, r1, r2}
     898:	f7ff ecbc 	blx	214 <sark_word_set>
     89c:	2000      	movs	r0, #0
     89e:	bd08      	pop	{r3, pc}

000008a0 <sark_wait>:
     8a0:	b508      	push	{r3, lr}
     8a2:	e001      	b.n	8a8 <sark_wait+0x8>
     8a4:	f7ff ec8c 	blx	1c0 <cpu_wfi>
     8a8:	235d      	movs	r3, #93	; 0x5d
     8aa:	781b      	ldrb	r3, [r3, #0]
     8ac:	07da      	lsls	r2, r3, #31
     8ae:	d4f9      	bmi.n	8a4 <sark_wait+0x4>
     8b0:	bd08      	pop	{r3, pc}
	...

000008b4 <sark_int>:
     8b4:	4b55      	ldr	r3, [pc, #340]	; (a0c <sark_int+0x158>)
     8b6:	2101      	movs	r1, #1
     8b8:	685a      	ldr	r2, [r3, #4]
     8ba:	b570      	push	{r4, r5, r6, lr}
     8bc:	4091      	lsls	r1, r2
     8be:	4a54      	ldr	r2, [pc, #336]	; (a10 <sark_int+0x15c>)
     8c0:	1889      	adds	r1, r1, r2
     8c2:	4a54      	ldr	r2, [pc, #336]	; (a14 <sark_int+0x160>)
     8c4:	6011      	str	r1, [r2, #0]
     8c6:	69da      	ldr	r2, [r3, #28]
     8c8:	1c11      	adds	r1, r2, #0
     8ca:	3138      	adds	r1, #56	; 0x38
     8cc:	780b      	ldrb	r3, [r1, #0]
     8ce:	2b00      	cmp	r3, #0
     8d0:	d100      	bne.n	8d4 <sark_int+0x20>
     8d2:	e099      	b.n	a08 <sark_int+0x154>
     8d4:	6b15      	ldr	r5, [r2, #48]	; 0x30
     8d6:	2b02      	cmp	r3, #2
     8d8:	d100      	bne.n	8dc <sark_int+0x28>
     8da:	6310      	str	r0, [r2, #48]	; 0x30
     8dc:	2200      	movs	r2, #0
     8de:	700a      	strb	r2, [r1, #0]
     8e0:	2b03      	cmp	r3, #3
     8e2:	d124      	bne.n	92e <sark_int+0x7a>
     8e4:	1ee8      	subs	r0, r5, #3
     8e6:	280a      	cmp	r0, #10
     8e8:	d900      	bls.n	8ec <sark_int+0x38>
     8ea:	e08d      	b.n	a08 <sark_int+0x154>
     8ec:	f7ff fd24 	bl	338 <__gnu_thumb1_case_uqi>
     8f0:	068c8c10 	.word	0x068c8c10
     8f4:	161b0c08 	.word	0x161b0c08
     8f8:	1616      	.short	0x1616
     8fa:	16          	.byte	0x16
     8fb:	00          	.byte	0x00
     8fc:	2001      	movs	r0, #1
     8fe:	e000      	b.n	902 <sark_int+0x4e>
     900:	2000      	movs	r0, #0
     902:	f000 f8bf 	bl	a84 <event_pause>
     906:	e07f      	b.n	a08 <sark_int+0x154>
     908:	20ff      	movs	r0, #255	; 0xff
     90a:	f000 f8d1 	bl	ab0 <event_stop>
     90e:	e07b      	b.n	a08 <sark_int+0x154>
     910:	235d      	movs	r3, #93	; 0x5d
     912:	781a      	ldrb	r2, [r3, #0]
     914:	2101      	movs	r1, #1
     916:	438a      	bics	r2, r1
     918:	701a      	strb	r2, [r3, #0]
     91a:	e075      	b.n	a08 <sark_int+0x154>
     91c:	4b3e      	ldr	r3, [pc, #248]	; (a18 <sark_int+0x164>)
     91e:	2280      	movs	r2, #128	; 0x80
     920:	62dd      	str	r5, [r3, #44]	; 0x2c
     922:	0592      	lsls	r2, r2, #22
     924:	e000      	b.n	928 <sark_int+0x74>
     926:	2210      	movs	r2, #16
     928:	4b3c      	ldr	r3, [pc, #240]	; (a1c <sark_int+0x168>)
     92a:	601a      	str	r2, [r3, #0]
     92c:	e06c      	b.n	a08 <sark_int+0x154>
     92e:	2b01      	cmp	r3, #1
     930:	d16a      	bne.n	a08 <sark_int+0x154>
     932:	f7ff fdef 	bl	514 <sark_msg_get>
     936:	1e04      	subs	r4, r0, #0
     938:	d063      	beq.n	a02 <sark_int+0x14e>
     93a:	1c29      	adds	r1, r5, #0
     93c:	1c20      	adds	r0, r4, #0
     93e:	f7ff ec7c 	blx	238 <sark_msg_cpy>
     942:	1c28      	adds	r0, r5, #0
     944:	f7ff fe28 	bl	598 <sark_shmsg_free>
     948:	4b30      	ldr	r3, [pc, #192]	; (a0c <sark_int+0x158>)
     94a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
     94c:	3201      	adds	r2, #1
     94e:	629a      	str	r2, [r3, #40]	; 0x28
     950:	7aa5      	ldrb	r5, [r4, #10]
     952:	231f      	movs	r3, #31
     954:	1c28      	adds	r0, r5, #0
     956:	4398      	bics	r0, r3
     958:	d130      	bne.n	9bc <sark_int+0x108>
     95a:	88a3      	ldrh	r3, [r4, #4]
     95c:	2b17      	cmp	r3, #23
     95e:	d801      	bhi.n	964 <sark_int+0xb0>
     960:	2381      	movs	r3, #129	; 0x81
     962:	e01b      	b.n	99c <sark_int+0xe8>
     964:	8a23      	ldrh	r3, [r4, #16]
     966:	2280      	movs	r2, #128	; 0x80
     968:	8222      	strh	r2, [r4, #16]
     96a:	2b00      	cmp	r3, #0
     96c:	d103      	bne.n	976 <sark_int+0xc2>
     96e:	1c20      	adds	r0, r4, #0
     970:	f7ff ff06 	bl	780 <sark_cmd_ver>
     974:	e013      	b.n	99e <sark_int+0xea>
     976:	2b02      	cmp	r3, #2
     978:	d103      	bne.n	982 <sark_int+0xce>
     97a:	1c20      	adds	r0, r4, #0
     97c:	f7ff ff20 	bl	7c0 <sark_cmd_read>
     980:	e00d      	b.n	99e <sark_int+0xea>
     982:	2b03      	cmp	r3, #3
     984:	d103      	bne.n	98e <sark_int+0xda>
     986:	1c20      	adds	r0, r4, #0
     988:	f7ff ff4d 	bl	826 <sark_cmd_write>
     98c:	e007      	b.n	99e <sark_int+0xea>
     98e:	2b05      	cmp	r3, #5
     990:	d103      	bne.n	99a <sark_int+0xe6>
     992:	1c20      	adds	r0, r4, #0
     994:	f7ff ff7c 	bl	890 <sark_cmd_fill>
     998:	e001      	b.n	99e <sark_int+0xea>
     99a:	2383      	movs	r3, #131	; 0x83
     99c:	8223      	strh	r3, [r4, #16]
     99e:	7aa2      	ldrb	r2, [r4, #10]
     9a0:	7ae1      	ldrb	r1, [r4, #11]
     9a2:	89a3      	ldrh	r3, [r4, #12]
     9a4:	300c      	adds	r0, #12
     9a6:	72e2      	strb	r2, [r4, #11]
     9a8:	89e2      	ldrh	r2, [r4, #14]
     9aa:	80a0      	strh	r0, [r4, #4]
     9ac:	72a1      	strb	r1, [r4, #10]
     9ae:	81a2      	strh	r2, [r4, #12]
     9b0:	81e3      	strh	r3, [r4, #14]
     9b2:	1c20      	adds	r0, r4, #0
     9b4:	210a      	movs	r1, #10
     9b6:	f7ff fe8f 	bl	6d8 <sark_msg_send>
     9ba:	e01e      	b.n	9fa <sark_int+0x146>
     9bc:	235b      	movs	r3, #91	; 0x5b
     9be:	781b      	ldrb	r3, [r3, #0]
     9c0:	2b00      	cmp	r3, #0
     9c2:	d00f      	beq.n	9e4 <sark_int+0x130>
     9c4:	4b16      	ldr	r3, [pc, #88]	; (a20 <sark_int+0x16c>)
     9c6:	699b      	ldr	r3, [r3, #24]
     9c8:	2b00      	cmp	r3, #0
     9ca:	d016      	beq.n	9fa <sark_int+0x146>
     9cc:	f7ff ebec 	blx	1a8 <cpu_int_disable>
     9d0:	096a      	lsrs	r2, r5, #5
     9d2:	1c21      	adds	r1, r4, #0
     9d4:	1c06      	adds	r6, r0, #0
     9d6:	2003      	movs	r0, #3
     9d8:	f7ff fd70 	bl	4bc <schedule_sysmode>
     9dc:	1c30      	adds	r0, r6, #0
     9de:	f7ff ebec 	blx	1b8 <cpu_int_restore>
     9e2:	e011      	b.n	a08 <sark_int+0x154>
     9e4:	4b0f      	ldr	r3, [pc, #60]	; (a24 <sark_int+0x170>)
     9e6:	681a      	ldr	r2, [r3, #0]
     9e8:	2380      	movs	r3, #128	; 0x80
     9ea:	055b      	lsls	r3, r3, #21
     9ec:	421a      	tst	r2, r3
     9ee:	d004      	beq.n	9fa <sark_int+0x146>
     9f0:	4a09      	ldr	r2, [pc, #36]	; (a18 <sark_int+0x164>)
     9f2:	6294      	str	r4, [r2, #40]	; 0x28
     9f4:	4a09      	ldr	r2, [pc, #36]	; (a1c <sark_int+0x168>)
     9f6:	6013      	str	r3, [r2, #0]
     9f8:	e006      	b.n	a08 <sark_int+0x154>
     9fa:	1c20      	adds	r0, r4, #0
     9fc:	f7ff fda2 	bl	544 <sark_msg_free>
     a00:	e002      	b.n	a08 <sark_int+0x154>
     a02:	1c28      	adds	r0, r5, #0
     a04:	f7ff fdc8 	bl	598 <sark_shmsg_free>
     a08:	bd70      	pop	{r4, r5, r6, pc}
     a0a:	46c0      	nop			; (mov r8, r8)
     a0c:	00400040 	.word	0x00400040
     a10:	5ec00000 	.word	0x5ec00000
     a14:	e200000c 	.word	0xe200000c
     a18:	0040007c 	.word	0x0040007c
     a1c:	1f000018 	.word	0x1f000018
     a20:	00400000 	.word	0x00400000
     a24:	1f000010 	.word	0x1f000010

00000a28 <event_wait>:
     a28:	4b13      	ldr	r3, [pc, #76]	; (a78 <event_wait+0x50>)
     a2a:	b570      	push	{r4, r5, r6, lr}
     a2c:	681b      	ldr	r3, [r3, #0]
     a2e:	4c13      	ldr	r4, [pc, #76]	; (a7c <event_wait+0x54>)
     a30:	2501      	movs	r5, #1
     a32:	409d      	lsls	r5, r3
     a34:	7ea3      	ldrb	r3, [r4, #26]
     a36:	4e12      	ldr	r6, [pc, #72]	; (a80 <event_wait+0x58>)
     a38:	2b00      	cmp	r3, #0
     a3a:	d012      	beq.n	a62 <event_wait+0x3a>
     a3c:	2009      	movs	r0, #9
     a3e:	f7ff fd51 	bl	4e4 <sark_cpu_state>
     a42:	e001      	b.n	a48 <event_wait+0x20>
     a44:	f7ff ebbc 	blx	1c0 <cpu_wfi>
     a48:	6833      	ldr	r3, [r6, #0]
     a4a:	1c2a      	adds	r2, r5, #0
     a4c:	439a      	bics	r2, r3
     a4e:	1e13      	subs	r3, r2, #0
     a50:	d1f8      	bne.n	a44 <event_wait+0x1c>
     a52:	7ea3      	ldrb	r3, [r4, #26]
     a54:	2201      	movs	r2, #1
     a56:	4053      	eors	r3, r2
     a58:	2007      	movs	r0, #7
     a5a:	76a3      	strb	r3, [r4, #26]
     a5c:	f7ff fd42 	bl	4e4 <sark_cpu_state>
     a60:	e009      	b.n	a76 <event_wait+0x4e>
     a62:	2008      	movs	r0, #8
     a64:	f7ff fd3e 	bl	4e4 <sark_cpu_state>
     a68:	e001      	b.n	a6e <event_wait+0x46>
     a6a:	f7ff ebaa 	blx	1c0 <cpu_wfi>
     a6e:	6833      	ldr	r3, [r6, #0]
     a70:	422b      	tst	r3, r5
     a72:	d1fa      	bne.n	a6a <event_wait+0x42>
     a74:	e7ed      	b.n	a52 <event_wait+0x2a>
     a76:	bd70      	pop	{r4, r5, r6, pc}
     a78:	00400040 	.word	0x00400040
     a7c:	0040007c 	.word	0x0040007c
     a80:	e2000058 	.word	0xe2000058

00000a84 <event_pause>:
     a84:	b538      	push	{r3, r4, r5, lr}
     a86:	1c05      	adds	r5, r0, #0
     a88:	4c08      	ldr	r4, [pc, #32]	; (aac <event_pause+0x28>)
     a8a:	2800      	cmp	r0, #0
     a8c:	d003      	beq.n	a96 <event_pause+0x12>
     a8e:	2301      	movs	r3, #1
     a90:	7623      	strb	r3, [r4, #24]
     a92:	200a      	movs	r0, #10
     a94:	e001      	b.n	a9a <event_pause+0x16>
     a96:	7620      	strb	r0, [r4, #24]
     a98:	2007      	movs	r0, #7
     a9a:	f7ff fd23 	bl	4e4 <sark_cpu_state>
     a9e:	6b23      	ldr	r3, [r4, #48]	; 0x30
     aa0:	2b00      	cmp	r3, #0
     aa2:	d002      	beq.n	aaa <event_pause+0x26>
     aa4:	6b61      	ldr	r1, [r4, #52]	; 0x34
     aa6:	1c28      	adds	r0, r5, #0
     aa8:	4798      	blx	r3
     aaa:	bd38      	pop	{r3, r4, r5, pc}
     aac:	0040007c 	.word	0x0040007c

00000ab0 <event_stop>:
     ab0:	4b03      	ldr	r3, [pc, #12]	; (ac0 <event_stop+0x10>)
     ab2:	2202      	movs	r2, #2
     ab4:	761a      	strb	r2, [r3, #24]
     ab6:	4a03      	ldr	r2, [pc, #12]	; (ac4 <event_stop+0x14>)
     ab8:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
     aba:	6011      	str	r1, [r2, #0]
     abc:	6398      	str	r0, [r3, #56]	; 0x38
     abe:	4770      	bx	lr
     ac0:	0040007c 	.word	0x0040007c
     ac4:	1f000014 	.word	0x1f000014

00000ac8 <event_queue>:
     ac8:	b538      	push	{r3, r4, r5, lr}
     aca:	1c05      	adds	r5, r0, #0
     acc:	2000      	movs	r0, #0
     ace:	2903      	cmp	r1, #3
     ad0:	d812      	bhi.n	af8 <event_queue+0x30>
     ad2:	1c0c      	adds	r4, r1, #0
     ad4:	4b09      	ldr	r3, [pc, #36]	; (afc <event_queue+0x34>)
     ad6:	340f      	adds	r4, #15
     ad8:	00e4      	lsls	r4, r4, #3
     ada:	18e4      	adds	r4, r4, r3
     adc:	f7ff eb64 	blx	1a8 <cpu_int_disable>
     ae0:	6823      	ldr	r3, [r4, #0]
     ae2:	2b00      	cmp	r3, #0
     ae4:	d102      	bne.n	aec <event_queue+0x24>
     ae6:	6065      	str	r5, [r4, #4]
     ae8:	6025      	str	r5, [r4, #0]
     aea:	e002      	b.n	af2 <event_queue+0x2a>
     aec:	6863      	ldr	r3, [r4, #4]
     aee:	601d      	str	r5, [r3, #0]
     af0:	6065      	str	r5, [r4, #4]
     af2:	f7ff eb62 	blx	1b8 <cpu_int_restore>
     af6:	2001      	movs	r0, #1
     af8:	bd38      	pop	{r3, r4, r5, pc}
     afa:	46c0      	nop			; (mov r8, r8)
     afc:	0040007c 	.word	0x0040007c

00000b00 <event_run2>:
     b00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     b02:	2500      	movs	r5, #0
     b04:	9001      	str	r0, [sp, #4]
     b06:	e029      	b.n	b5c <event_run2+0x5c>
     b08:	1c2f      	adds	r7, r5, #0
     b0a:	370f      	adds	r7, #15
     b0c:	00ff      	lsls	r7, r7, #3
     b0e:	19bf      	adds	r7, r7, r6
     b10:	f7ff eb4a 	blx	1a8 <cpu_int_disable>
     b14:	683c      	ldr	r4, [r7, #0]
     b16:	2c00      	cmp	r4, #0
     b18:	d105      	bne.n	b26 <event_run2+0x26>
     b1a:	3501      	adds	r5, #1
     b1c:	062d      	lsls	r5, r5, #24
     b1e:	f7ff eb4c 	blx	1b8 <cpu_int_restore>
     b22:	0e2d      	lsrs	r5, r5, #24
     b24:	e016      	b.n	b54 <event_run2+0x54>
     b26:	6823      	ldr	r3, [r4, #0]
     b28:	603b      	str	r3, [r7, #0]
     b2a:	f7ff eb46 	blx	1b8 <cpu_int_restore>
     b2e:	68e1      	ldr	r1, [r4, #12]
     b30:	6863      	ldr	r3, [r4, #4]
     b32:	68a0      	ldr	r0, [r4, #8]
     b34:	4798      	blx	r3
     b36:	f7ff eb38 	blx	1a8 <cpu_int_disable>
     b3a:	6833      	ldr	r3, [r6, #0]
     b3c:	6023      	str	r3, [r4, #0]
     b3e:	9b00      	ldr	r3, [sp, #0]
     b40:	6163      	str	r3, [r4, #20]
     b42:	8933      	ldrh	r3, [r6, #8]
     b44:	6034      	str	r4, [r6, #0]
     b46:	3b01      	subs	r3, #1
     b48:	8133      	strh	r3, [r6, #8]
     b4a:	f7ff eb36 	blx	1b8 <cpu_int_restore>
     b4e:	9b01      	ldr	r3, [sp, #4]
     b50:	2b00      	cmp	r3, #0
     b52:	d102      	bne.n	b5a <event_run2+0x5a>
     b54:	2d03      	cmp	r5, #3
     b56:	d901      	bls.n	b5c <event_run2+0x5c>
     b58:	e005      	b.n	b66 <event_run2+0x66>
     b5a:	9d00      	ldr	r5, [sp, #0]
     b5c:	4e02      	ldr	r6, [pc, #8]	; (b68 <event_run2+0x68>)
     b5e:	7e33      	ldrb	r3, [r6, #24]
     b60:	9300      	str	r3, [sp, #0]
     b62:	2b00      	cmp	r3, #0
     b64:	d0d0      	beq.n	b08 <event_run2+0x8>
     b66:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
     b68:	0040007c 	.word	0x0040007c

00000b6c <event_new>:
     b6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     b6e:	1c15      	adds	r5, r2, #0
     b70:	1c07      	adds	r7, r0, #0
     b72:	1c0e      	adds	r6, r1, #0
     b74:	f7ff eb18 	blx	1a8 <cpu_int_disable>
     b78:	4a14      	ldr	r2, [pc, #80]	; (bcc <event_new+0x60>)
     b7a:	6814      	ldr	r4, [r2, #0]
     b7c:	1c13      	adds	r3, r2, #0
     b7e:	2c00      	cmp	r4, #0
     b80:	d018      	beq.n	bb4 <event_new+0x48>
     b82:	68d2      	ldr	r2, [r2, #12]
     b84:	3201      	adds	r2, #1
     b86:	2a00      	cmp	r2, #0
     b88:	d100      	bne.n	b8c <event_new+0x20>
     b8a:	2201      	movs	r2, #1
     b8c:	6821      	ldr	r1, [r4, #0]
     b8e:	6019      	str	r1, [r3, #0]
     b90:	2100      	movs	r1, #0
     b92:	6021      	str	r1, [r4, #0]
     b94:	6162      	str	r2, [r4, #20]
     b96:	60da      	str	r2, [r3, #12]
     b98:	6121      	str	r1, [r4, #16]
     b9a:	6067      	str	r7, [r4, #4]
     b9c:	60a6      	str	r6, [r4, #8]
     b9e:	60e5      	str	r5, [r4, #12]
     ba0:	891a      	ldrh	r2, [r3, #8]
     ba2:	8959      	ldrh	r1, [r3, #10]
     ba4:	3201      	adds	r2, #1
     ba6:	0412      	lsls	r2, r2, #16
     ba8:	0c12      	lsrs	r2, r2, #16
     baa:	811a      	strh	r2, [r3, #8]
     bac:	4291      	cmp	r1, r2
     bae:	d208      	bcs.n	bc2 <event_new+0x56>
     bb0:	815a      	strh	r2, [r3, #10]
     bb2:	e006      	b.n	bc2 <event_new+0x56>
     bb4:	6913      	ldr	r3, [r2, #16]
     bb6:	6951      	ldr	r1, [r2, #20]
     bb8:	3301      	adds	r3, #1
     bba:	6113      	str	r3, [r2, #16]
     bbc:	2310      	movs	r3, #16
     bbe:	430b      	orrs	r3, r1
     bc0:	6153      	str	r3, [r2, #20]
     bc2:	f7ff eafa 	blx	1b8 <cpu_int_restore>
     bc6:	1c20      	adds	r0, r4, #0
     bc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     bca:	46c0      	nop			; (mov r8, r8)
     bcc:	0040007c 	.word	0x0040007c

00000bd0 <event_queue_proc>:
     bd0:	b510      	push	{r4, lr}
     bd2:	1c1c      	adds	r4, r3, #0
     bd4:	f7ff ffca 	bl	b6c <event_new>
     bd8:	2800      	cmp	r0, #0
     bda:	d002      	beq.n	be2 <event_queue_proc+0x12>
     bdc:	1c21      	adds	r1, r4, #0
     bde:	f7ff ff73 	bl	ac8 <event_queue>
     be2:	bd10      	pop	{r4, pc}

00000be4 <event_alloc>:
     be4:	b570      	push	{r4, r5, r6, lr}
     be6:	2118      	movs	r1, #24
     be8:	1c06      	adds	r6, r0, #0
     bea:	f000 f9ef 	bl	fcc <sark_alloc>
     bee:	4d0b      	ldr	r5, [pc, #44]	; (c1c <ETH_RX_SIZE+0x1c>)
     bf0:	1e04      	subs	r4, r0, #0
     bf2:	d00d      	beq.n	c10 <ETH_RX_SIZE+0x10>
     bf4:	1c31      	adds	r1, r6, #0
     bf6:	2218      	movs	r2, #24
     bf8:	f7ff fc7c 	bl	4f4 <sark_block_init>
     bfc:	1c06      	adds	r6, r0, #0
     bfe:	f7ff ead4 	blx	1a8 <cpu_int_disable>
     c02:	682a      	ldr	r2, [r5, #0]
     c04:	6032      	str	r2, [r6, #0]
     c06:	602c      	str	r4, [r5, #0]
     c08:	f7ff ead6 	blx	1b8 <cpu_int_restore>
     c0c:	2001      	movs	r0, #1
     c0e:	e003      	b.n	c18 <ETH_RX_SIZE+0x18>
     c10:	696a      	ldr	r2, [r5, #20]
     c12:	2308      	movs	r3, #8
     c14:	4313      	orrs	r3, r2
     c16:	616b      	str	r3, [r5, #20]
     c18:	bd70      	pop	{r4, r5, r6, pc}
     c1a:	46c0      	nop			; (mov r8, r8)
     c1c:	0040007c 	.word	0x0040007c

00000c20 <event_start>:
     c20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     c22:	1c04      	adds	r4, r0, #0
     c24:	1c15      	adds	r5, r2, #0
     c26:	2900      	cmp	r1, #0
     c28:	d002      	beq.n	c30 <event_start+0x10>
     c2a:	1c08      	adds	r0, r1, #0
     c2c:	f7ff ffda 	bl	be4 <event_alloc>
     c30:	4b28      	ldr	r3, [pc, #160]	; (cd4 <event_start+0xb4>)
     c32:	6959      	ldr	r1, [r3, #20]
     c34:	2900      	cmp	r1, #0
     c36:	d002      	beq.n	c3e <event_start+0x1e>
     c38:	200c      	movs	r0, #12
     c3a:	f7ff fa77 	bl	12c <rt_error>
     c3e:	2d00      	cmp	r5, #0
     c40:	d001      	beq.n	c46 <event_start+0x26>
     c42:	f7ff fef1 	bl	a28 <event_wait>
     c46:	2c00      	cmp	r4, #0
     c48:	d008      	beq.n	c5c <event_start+0x3c>
     c4a:	4b23      	ldr	r3, [pc, #140]	; (cd8 <event_start+0xb8>)
     c4c:	22e2      	movs	r2, #226	; 0xe2
     c4e:	601a      	str	r2, [r3, #0]
     c50:	4b22      	ldr	r3, [pc, #136]	; (cdc <event_start+0xbc>)
     c52:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
     c54:	435c      	muls	r4, r3
     c56:	2384      	movs	r3, #132	; 0x84
     c58:	059b      	lsls	r3, r3, #22
     c5a:	601c      	str	r4, [r3, #0]
     c5c:	f7ff eaa4 	blx	1a8 <cpu_int_disable>
     c60:	4d1f      	ldr	r5, [pc, #124]	; (ce0 <event_start+0xc0>)
     c62:	4b1c      	ldr	r3, [pc, #112]	; (cd4 <event_start+0xb4>)
     c64:	2220      	movs	r2, #32
     c66:	69d1      	ldr	r1, [r2, #28]
     c68:	4c1e      	ldr	r4, [pc, #120]	; (ce4 <event_start+0xc4>)
     c6a:	65d9      	str	r1, [r3, #92]	; 0x5c
     c6c:	6829      	ldr	r1, [r5, #0]
     c6e:	6519      	str	r1, [r3, #80]	; 0x50
     c70:	6821      	ldr	r1, [r4, #0]
     c72:	6559      	str	r1, [r3, #84]	; 0x54
     c74:	6d99      	ldr	r1, [r3, #88]	; 0x58
     c76:	61d1      	str	r1, [r2, #28]
     c78:	6c9a      	ldr	r2, [r3, #72]	; 0x48
     c7a:	602a      	str	r2, [r5, #0]
     c7c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
     c7e:	6023      	str	r3, [r4, #0]
     c80:	f7ff ea9a 	blx	1b8 <cpu_int_restore>
     c84:	2007      	movs	r0, #7
     c86:	f7ff fc2d 	bl	4e4 <sark_cpu_state>
     c8a:	1c26      	adds	r6, r4, #0
     c8c:	e007      	b.n	c9e <event_start+0x7e>
     c8e:	2001      	movs	r0, #1
     c90:	f7ff ff36 	bl	b00 <event_run2>
     c94:	f7ff ea94 	blx	1c0 <cpu_wfi>
     c98:	7e3b      	ldrb	r3, [r7, #24]
     c9a:	2b01      	cmp	r3, #1
     c9c:	d0fa      	beq.n	c94 <event_start+0x74>
     c9e:	4c0d      	ldr	r4, [pc, #52]	; (cd4 <event_start+0xb4>)
     ca0:	7e23      	ldrb	r3, [r4, #24]
     ca2:	1c27      	adds	r7, r4, #0
     ca4:	2b02      	cmp	r3, #2
     ca6:	d1f2      	bne.n	c8e <event_start+0x6e>
     ca8:	200b      	movs	r0, #11
     caa:	f7ff fc1b 	bl	4e4 <sark_cpu_state>
     cae:	4b0b      	ldr	r3, [pc, #44]	; (cdc <event_start+0xbc>)
     cb0:	2138      	movs	r1, #56	; 0x38
     cb2:	69db      	ldr	r3, [r3, #28]
     cb4:	5d09      	ldrb	r1, [r1, r4]
     cb6:	332c      	adds	r3, #44	; 0x2c
     cb8:	7019      	strb	r1, [r3, #0]
     cba:	f7ff ea76 	blx	1a8 <cpu_int_disable>
     cbe:	6de2      	ldr	r2, [r4, #92]	; 0x5c
     cc0:	2320      	movs	r3, #32
     cc2:	61da      	str	r2, [r3, #28]
     cc4:	6d23      	ldr	r3, [r4, #80]	; 0x50
     cc6:	602b      	str	r3, [r5, #0]
     cc8:	6d61      	ldr	r1, [r4, #84]	; 0x54
     cca:	6031      	str	r1, [r6, #0]
     ccc:	f7ff ea74 	blx	1b8 <cpu_int_restore>
     cd0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
     cd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     cd4:	0040007c 	.word	0x0040007c
     cd8:	21000008 	.word	0x21000008
     cdc:	00400040 	.word	0x00400040
     ce0:	1f00000c 	.word	0x1f00000c
     ce4:	1f000010 	.word	0x1f000010

00000ce8 <event_register_timer>:
     ce8:	490b      	ldr	r1, [pc, #44]	; (d18 <event_register_timer+0x30>)
     cea:	b508      	push	{r3, lr}
     cec:	0083      	lsls	r3, r0, #2
     cee:	185b      	adds	r3, r3, r1
     cf0:	681b      	ldr	r3, [r3, #0]
     cf2:	2b00      	cmp	r3, #0
     cf4:	d10c      	bne.n	d10 <event_register_timer+0x28>
     cf6:	4a09      	ldr	r2, [pc, #36]	; (d1c <event_register_timer+0x34>)
     cf8:	6013      	str	r3, [r2, #0]
     cfa:	4b09      	ldr	r3, [pc, #36]	; (d20 <event_register_timer+0x38>)
     cfc:	2220      	movs	r2, #32
     cfe:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
     d00:	430a      	orrs	r2, r1
     d02:	64da      	str	r2, [r3, #76]	; 0x4c
     d04:	2105      	movs	r1, #5
     d06:	2201      	movs	r2, #1
     d08:	4b06      	ldr	r3, [pc, #24]	; (d24 <event_register_timer+0x3c>)
     d0a:	f000 f8bb 	bl	e84 <sark_vic_set>
     d0e:	e002      	b.n	d16 <event_register_timer+0x2e>
     d10:	2012      	movs	r0, #18
     d12:	f7ff fa0b 	bl	12c <rt_error>
     d16:	bd08      	pop	{r3, pc}
     d18:	1f000200 	.word	0x1f000200
     d1c:	21000028 	.word	0x21000028
     d20:	0040007c 	.word	0x0040007c
     d24:	00000ecc 	.word	0x00000ecc

00000d28 <timer_schedule>:
     d28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     d2a:	4b1a      	ldr	r3, [pc, #104]	; (d94 <timer_schedule+0x6c>)
     d2c:	1c04      	adds	r4, r0, #0
     d2e:	8e1d      	ldrh	r5, [r3, #48]	; 0x30
     d30:	434d      	muls	r5, r1
     d32:	f7ff ea3a 	blx	1a8 <cpu_int_disable>
     d36:	4a18      	ldr	r2, [pc, #96]	; (d98 <timer_schedule+0x70>)
     d38:	6853      	ldr	r3, [r2, #4]
     d3a:	2b00      	cmp	r3, #0
     d3c:	d106      	bne.n	d4c <timer_schedule+0x24>
     d3e:	4b17      	ldr	r3, [pc, #92]	; (d9c <timer_schedule+0x74>)
     d40:	6054      	str	r4, [r2, #4]
     d42:	601d      	str	r5, [r3, #0]
     d44:	4b16      	ldr	r3, [pc, #88]	; (da0 <timer_schedule+0x78>)
     d46:	22e3      	movs	r2, #227	; 0xe3
     d48:	601a      	str	r2, [r3, #0]
     d4a:	e020      	b.n	d8e <timer_schedule+0x66>
     d4c:	4915      	ldr	r1, [pc, #84]	; (da4 <timer_schedule+0x7c>)
     d4e:	6809      	ldr	r1, [r1, #0]
     d50:	428d      	cmp	r5, r1
     d52:	d206      	bcs.n	d62 <timer_schedule+0x3a>
     d54:	4e11      	ldr	r6, [pc, #68]	; (d9c <timer_schedule+0x74>)
     d56:	6035      	str	r5, [r6, #0]
     d58:	1b4d      	subs	r5, r1, r5
     d5a:	6023      	str	r3, [r4, #0]
     d5c:	611d      	str	r5, [r3, #16]
     d5e:	6054      	str	r4, [r2, #4]
     d60:	e015      	b.n	d8e <timer_schedule+0x66>
     d62:	1a6d      	subs	r5, r5, r1
     d64:	2100      	movs	r1, #0
     d66:	681a      	ldr	r2, [r3, #0]
     d68:	1c0e      	adds	r6, r1, #0
     d6a:	e009      	b.n	d80 <timer_schedule+0x58>
     d6c:	6917      	ldr	r7, [r2, #16]
     d6e:	19f6      	adds	r6, r6, r7
     d70:	42ae      	cmp	r6, r5
     d72:	d902      	bls.n	d7a <timer_schedule+0x52>
     d74:	1b76      	subs	r6, r6, r5
     d76:	6116      	str	r6, [r2, #16]
     d78:	e004      	b.n	d84 <timer_schedule+0x5c>
     d7a:	1c13      	adds	r3, r2, #0
     d7c:	6812      	ldr	r2, [r2, #0]
     d7e:	19c9      	adds	r1, r1, r7
     d80:	2a00      	cmp	r2, #0
     d82:	d1f3      	bne.n	d6c <timer_schedule+0x44>
     d84:	681a      	ldr	r2, [r3, #0]
     d86:	1a6d      	subs	r5, r5, r1
     d88:	6022      	str	r2, [r4, #0]
     d8a:	6125      	str	r5, [r4, #16]
     d8c:	601c      	str	r4, [r3, #0]
     d8e:	f7ff ea14 	blx	1b8 <cpu_int_restore>
     d92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     d94:	00400040 	.word	0x00400040
     d98:	0040007c 	.word	0x0040007c
     d9c:	21000020 	.word	0x21000020
     da0:	21000028 	.word	0x21000028
     da4:	21000024 	.word	0x21000024

00000da8 <timer_schedule_proc>:
     da8:	b510      	push	{r4, lr}
     daa:	1c1c      	adds	r4, r3, #0
     dac:	f7ff fede 	bl	b6c <event_new>
     db0:	2800      	cmp	r0, #0
     db2:	d003      	beq.n	dbc <timer_schedule_proc+0x14>
     db4:	1c21      	adds	r1, r4, #0
     db6:	f7ff ffb7 	bl	d28 <timer_schedule>
     dba:	2001      	movs	r0, #1
     dbc:	bd10      	pop	{r4, pc}
	...

00000dc0 <timer2_int>:
     dc0:	4b18      	ldr	r3, [pc, #96]	; (e24 <timer2_int+0x64>)
     dc2:	2284      	movs	r2, #132	; 0x84
     dc4:	0592      	lsls	r2, r2, #22
     dc6:	b510      	push	{r4, lr}
     dc8:	601a      	str	r2, [r3, #0]
     dca:	4a17      	ldr	r2, [pc, #92]	; (e28 <timer2_int+0x68>)
     dcc:	2400      	movs	r4, #0
     dce:	6853      	ldr	r3, [r2, #4]
     dd0:	e003      	b.n	dda <timer2_int+0x1a>
     dd2:	6819      	ldr	r1, [r3, #0]
     dd4:	601c      	str	r4, [r3, #0]
     dd6:	1c1c      	adds	r4, r3, #0
     dd8:	1c0b      	adds	r3, r1, #0
     dda:	2b00      	cmp	r3, #0
     ddc:	d008      	beq.n	df0 <timer2_int+0x30>
     dde:	6919      	ldr	r1, [r3, #16]
     de0:	2900      	cmp	r1, #0
     de2:	d0f6      	beq.n	dd2 <timer2_int+0x12>
     de4:	6053      	str	r3, [r2, #4]
     de6:	4a11      	ldr	r2, [pc, #68]	; (e2c <timer2_int+0x6c>)
     de8:	6011      	str	r1, [r2, #0]
     dea:	2200      	movs	r2, #0
     dec:	611a      	str	r2, [r3, #16]
     dee:	e012      	b.n	e16 <timer2_int+0x56>
     df0:	6053      	str	r3, [r2, #4]
     df2:	e010      	b.n	e16 <timer2_int+0x56>
     df4:	6863      	ldr	r3, [r4, #4]
     df6:	2b00      	cmp	r3, #0
     df8:	d002      	beq.n	e00 <timer2_int+0x40>
     dfa:	68a0      	ldr	r0, [r4, #8]
     dfc:	68e1      	ldr	r1, [r4, #12]
     dfe:	4798      	blx	r3
     e00:	4b09      	ldr	r3, [pc, #36]	; (e28 <timer2_int+0x68>)
     e02:	6822      	ldr	r2, [r4, #0]
     e04:	6819      	ldr	r1, [r3, #0]
     e06:	6021      	str	r1, [r4, #0]
     e08:	2100      	movs	r1, #0
     e0a:	6161      	str	r1, [r4, #20]
     e0c:	8919      	ldrh	r1, [r3, #8]
     e0e:	601c      	str	r4, [r3, #0]
     e10:	3901      	subs	r1, #1
     e12:	1c14      	adds	r4, r2, #0
     e14:	8119      	strh	r1, [r3, #8]
     e16:	2c00      	cmp	r4, #0
     e18:	d1ec      	bne.n	df4 <timer2_int+0x34>
     e1a:	4b05      	ldr	r3, [pc, #20]	; (e30 <timer2_int+0x70>)
     e1c:	22f8      	movs	r2, #248	; 0xf8
     e1e:	0552      	lsls	r2, r2, #21
     e20:	601a      	str	r2, [r3, #0]
     e22:	bd10      	pop	{r4, pc}
     e24:	2100002c 	.word	0x2100002c
     e28:	0040007c 	.word	0x0040007c
     e2c:	21000020 	.word	0x21000020
     e30:	1f000030 	.word	0x1f000030

00000e34 <sark_vic_init>:
     e34:	4b0b      	ldr	r3, [pc, #44]	; (e64 <sark_vic_init+0x30>)
     e36:	2201      	movs	r2, #1
     e38:	4252      	negs	r2, r2
     e3a:	b510      	push	{r4, lr}
     e3c:	601a      	str	r2, [r3, #0]
     e3e:	4b0a      	ldr	r3, [pc, #40]	; (e68 <sark_vic_init+0x34>)
     e40:	2200      	movs	r2, #0
     e42:	601a      	str	r2, [r3, #0]
     e44:	4b09      	ldr	r3, [pc, #36]	; (e6c <sark_vic_init+0x38>)
     e46:	4c0a      	ldr	r4, [pc, #40]	; (e70 <sark_vic_init+0x3c>)
     e48:	601a      	str	r2, [r3, #0]
     e4a:	490a      	ldr	r1, [pc, #40]	; (e74 <sark_vic_init+0x40>)
     e4c:	4b0a      	ldr	r3, [pc, #40]	; (e78 <sark_vic_init+0x44>)
     e4e:	1e58      	subs	r0, r3, #1
     e50:	601a      	str	r2, [r3, #0]
     e52:	38ff      	subs	r0, #255	; 0xff
     e54:	3304      	adds	r3, #4
     e56:	6004      	str	r4, [r0, #0]
     e58:	428b      	cmp	r3, r1
     e5a:	d1f8      	bne.n	e4e <sark_vic_init+0x1a>
     e5c:	4b07      	ldr	r3, [pc, #28]	; (e7c <sark_vic_init+0x48>)
     e5e:	4a08      	ldr	r2, [pc, #32]	; (e80 <sark_vic_init+0x4c>)
     e60:	601a      	str	r2, [r3, #0]
     e62:	bd10      	pop	{r4, pc}
     e64:	1f000014 	.word	0x1f000014
     e68:	1f00000c 	.word	0x1f00000c
     e6c:	1f000030 	.word	0x1f000030
     e70:	00000108 	.word	0x00000108
     e74:	1f000240 	.word	0x1f000240
     e78:	1f000200 	.word	0x1f000200
     e7c:	1f000034 	.word	0x1f000034
     e80:	00000330 	.word	0x00000330

00000e84 <sark_vic_set>:
     e84:	b530      	push	{r4, r5, lr}
     e86:	2810      	cmp	r0, #16
     e88:	d106      	bne.n	e98 <sark_vic_set+0x14>
     e8a:	2020      	movs	r0, #32
     e8c:	61c3      	str	r3, [r0, #28]
     e8e:	2001      	movs	r0, #1
     e90:	4b0a      	ldr	r3, [pc, #40]	; (ebc <sark_vic_set+0x38>)
     e92:	4088      	lsls	r0, r1
     e94:	6018      	str	r0, [r3, #0]
     e96:	e009      	b.n	eac <sark_vic_set+0x28>
     e98:	4d09      	ldr	r5, [pc, #36]	; (ec0 <sark_vic_set+0x3c>)
     e9a:	0084      	lsls	r4, r0, #2
     e9c:	1964      	adds	r4, r4, r5
     e9e:	6023      	str	r3, [r4, #0]
     ea0:	4b08      	ldr	r3, [pc, #32]	; (ec4 <sark_vic_set+0x40>)
     ea2:	0080      	lsls	r0, r0, #2
     ea4:	18c0      	adds	r0, r0, r3
     ea6:	2320      	movs	r3, #32
     ea8:	430b      	orrs	r3, r1
     eaa:	6003      	str	r3, [r0, #0]
     eac:	2a00      	cmp	r2, #0
     eae:	d004      	beq.n	eba <sark_vic_set+0x36>
     eb0:	2301      	movs	r3, #1
     eb2:	408b      	lsls	r3, r1
     eb4:	1c19      	adds	r1, r3, #0
     eb6:	4b04      	ldr	r3, [pc, #16]	; (ec8 <sark_vic_set+0x44>)
     eb8:	6019      	str	r1, [r3, #0]
     eba:	bd30      	pop	{r4, r5, pc}
     ebc:	1f00000c 	.word	0x1f00000c
     ec0:	1f000100 	.word	0x1f000100
     ec4:	1f000200 	.word	0x1f000200
     ec8:	1f000010 	.word	0x1f000010

00000ecc <timer2_int_han>:
     ecc:	e24ee004 	sub	lr, lr, #4
     ed0:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
     ed4:	faffffb9 	blx	dc0 <timer2_int>
     ed8:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^

00000edc <sark_fiq_han>:
     edc:	e92d000c 	push	{r2, r3}
     ee0:	e3a03202 	mov	r3, #536870912	; 0x20000000
     ee4:	e5933014 	ldr	r3, [r3, #20]
     ee8:	e59f3010 	ldr	r3, [pc, #16]	; f00 <RTR_TST1>
     eec:	e5932038 	ldr	r2, [r3, #56]	; 0x38
     ef0:	e2822001 	add	r2, r2, #1
     ef4:	e5832038 	str	r2, [r3, #56]	; 0x38
     ef8:	e8bd000c 	pop	{r2, r3}
     efc:	e25ef004 	subs	pc, lr, #4
     f00:	00400040 	.word	0x00400040

00000f04 <sark_xalloc>:
     f04:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     f06:	1c07      	adds	r7, r0, #0
     f08:	1c15      	adds	r5, r2, #0
     f0a:	2aff      	cmp	r2, #255	; 0xff
     f0c:	d858      	bhi.n	fc0 <sark_xalloc+0xbc>
     f0e:	2900      	cmp	r1, #0
     f10:	d100      	bne.n	f14 <sark_xalloc+0x10>
     f12:	e055      	b.n	fc0 <sark_xalloc+0xbc>
     f14:	0a1e      	lsrs	r6, r3, #8
     f16:	0798      	lsls	r0, r3, #30
     f18:	d401      	bmi.n	f1e <sark_xalloc+0x1a>
     f1a:	225c      	movs	r2, #92	; 0x5c
     f1c:	7816      	ldrb	r6, [r2, #0]
     f1e:	0236      	lsls	r6, r6, #8
     f20:	1976      	adds	r6, r6, r5
     f22:	2d00      	cmp	r5, #0
     f24:	d005      	beq.n	f32 <sark_xalloc+0x2e>
     f26:	4a27      	ldr	r2, [pc, #156]	; (fc4 <RTR_TST2+0xc0>)
     f28:	00b0      	lsls	r0, r6, #2
     f2a:	6812      	ldr	r2, [r2, #0]
     f2c:	5882      	ldr	r2, [r0, r2]
     f2e:	2a00      	cmp	r2, #0
     f30:	d146      	bne.n	fc0 <sark_xalloc+0xbc>
     f32:	2203      	movs	r2, #3
     f34:	3103      	adds	r1, #3
     f36:	4391      	bics	r1, r2
     f38:	2201      	movs	r2, #1
     f3a:	3108      	adds	r1, #8
     f3c:	4013      	ands	r3, r2
     f3e:	9101      	str	r1, [sp, #4]
     f40:	9300      	str	r3, [sp, #0]
     f42:	d003      	beq.n	f4c <sark_xalloc+0x48>
     f44:	2006      	movs	r0, #6
     f46:	f7ff e940 	blx	1c8 <sark_lock_get>
     f4a:	4684      	mov	ip, r0
     f4c:	683c      	ldr	r4, [r7, #0]
     f4e:	2200      	movs	r2, #0
     f50:	e02d      	b.n	fae <sark_xalloc+0xaa>
     f52:	9801      	ldr	r0, [sp, #4]
     f54:	6821      	ldr	r1, [r4, #0]
     f56:	1823      	adds	r3, r4, r0
     f58:	42a3      	cmp	r3, r4
     f5a:	d92a      	bls.n	fb2 <sark_xalloc+0xae>
     f5c:	428b      	cmp	r3, r1
     f5e:	d902      	bls.n	f66 <sark_xalloc+0x62>
     f60:	1c22      	adds	r2, r4, #0
     f62:	6864      	ldr	r4, [r4, #4]
     f64:	e023      	b.n	fae <sark_xalloc+0xaa>
     f66:	1c18      	adds	r0, r3, #0
     f68:	3008      	adds	r0, #8
     f6a:	4281      	cmp	r1, r0
     f6c:	d904      	bls.n	f78 <sark_xalloc+0x74>
     f6e:	6019      	str	r1, [r3, #0]
     f70:	6861      	ldr	r1, [r4, #4]
     f72:	6059      	str	r1, [r3, #4]
     f74:	6023      	str	r3, [r4, #0]
     f76:	6063      	str	r3, [r4, #4]
     f78:	6863      	ldr	r3, [r4, #4]
     f7a:	2a00      	cmp	r2, #0
     f7c:	d001      	beq.n	f82 <sark_xalloc+0x7e>
     f7e:	6053      	str	r3, [r2, #4]
     f80:	e000      	b.n	f84 <sark_xalloc+0x80>
     f82:	603b      	str	r3, [r7, #0]
     f84:	9a00      	ldr	r2, [sp, #0]
     f86:	2a00      	cmp	r2, #0
     f88:	d003      	beq.n	f92 <sark_xalloc+0x8e>
     f8a:	4660      	mov	r0, ip
     f8c:	2106      	movs	r1, #6
     f8e:	f7ff e92e 	blx	1ec <sark_lock_free>
     f92:	480d      	ldr	r0, [pc, #52]	; (fc8 <RTR_TST2+0xc4>)
     f94:	1833      	adds	r3, r6, r0
     f96:	6063      	str	r3, [r4, #4]
     f98:	2d00      	cmp	r5, #0
     f9a:	d005      	beq.n	fa8 <sark_xalloc+0xa4>
     f9c:	4b09      	ldr	r3, [pc, #36]	; (fc4 <RTR_TST2+0xc0>)
     f9e:	1c22      	adds	r2, r4, #0
     fa0:	681b      	ldr	r3, [r3, #0]
     fa2:	00b6      	lsls	r6, r6, #2
     fa4:	3208      	adds	r2, #8
     fa6:	50f2      	str	r2, [r6, r3]
     fa8:	1c20      	adds	r0, r4, #0
     faa:	3008      	adds	r0, #8
     fac:	e009      	b.n	fc2 <sark_xalloc+0xbe>
     fae:	2c00      	cmp	r4, #0
     fb0:	d1cf      	bne.n	f52 <sark_xalloc+0x4e>
     fb2:	9900      	ldr	r1, [sp, #0]
     fb4:	2900      	cmp	r1, #0
     fb6:	d003      	beq.n	fc0 <sark_xalloc+0xbc>
     fb8:	4660      	mov	r0, ip
     fba:	2106      	movs	r1, #6
     fbc:	f7ff e916 	blx	1ec <sark_lock_free>
     fc0:	2000      	movs	r0, #0
     fc2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
     fc4:	e5007fdc 	.word	0xe5007fdc
     fc8:	ffff0000 	.word	0xffff0000

00000fcc <sark_alloc>:
     fcc:	4a04      	ldr	r2, [pc, #16]	; (fe0 <sark_alloc+0x14>)
     fce:	b508      	push	{r3, lr}
     fd0:	1c03      	adds	r3, r0, #0
     fd2:	6990      	ldr	r0, [r2, #24]
     fd4:	2200      	movs	r2, #0
     fd6:	4359      	muls	r1, r3
     fd8:	1c13      	adds	r3, r2, #0
     fda:	f7ff ff93 	bl	f04 <sark_xalloc>
     fde:	bd08      	pop	{r3, pc}
     fe0:	00400040 	.word	0x00400040

00000fe4 <sark_heap_init>:
     fe4:	1c03      	adds	r3, r0, #0
     fe6:	330c      	adds	r3, #12
     fe8:	3908      	subs	r1, #8
     fea:	6043      	str	r3, [r0, #4]
     fec:	6003      	str	r3, [r0, #0]
     fee:	2300      	movs	r3, #0
     ff0:	6081      	str	r1, [r0, #8]
     ff2:	60c1      	str	r1, [r0, #12]
     ff4:	6103      	str	r3, [r0, #16]
     ff6:	600b      	str	r3, [r1, #0]
     ff8:	604b      	str	r3, [r1, #4]
     ffa:	4770      	bx	lr

00000ffc <io_buf_init>:
     ffc:	b538      	push	{r3, r4, r5, lr}
     ffe:	4d0c      	ldr	r5, [pc, #48]	; (1030 <SV_SIZE+0x30>)
    1000:	4b0c      	ldr	r3, [pc, #48]	; (1034 <SV_SIZE+0x34>)
    1002:	6d29      	ldr	r1, [r5, #80]	; 0x50
    1004:	6818      	ldr	r0, [r3, #0]
    1006:	3110      	adds	r1, #16
    1008:	2200      	movs	r2, #0
    100a:	2301      	movs	r3, #1
    100c:	f7ff ff7a 	bl	f04 <sark_xalloc>
    1010:	1e04      	subs	r4, r0, #0
    1012:	d102      	bne.n	101a <SV_SIZE+0x1a>
    1014:	200e      	movs	r0, #14
    1016:	f7ff f889 	bl	12c <rt_error>
    101a:	69eb      	ldr	r3, [r5, #28]
    101c:	6063      	str	r3, [r4, #4]
    101e:	4a06      	ldr	r2, [pc, #24]	; (1038 <SV_SIZE+0x38>)
    1020:	8b2b      	ldrh	r3, [r5, #24]
    1022:	60a3      	str	r3, [r4, #8]
    1024:	2300      	movs	r3, #0
    1026:	1c20      	adds	r0, r4, #0
    1028:	6023      	str	r3, [r4, #0]
    102a:	6013      	str	r3, [r2, #0]
    102c:	60e3      	str	r3, [r4, #12]
    102e:	bd38      	pop	{r3, r4, r5, pc}
    1030:	e5007f00 	.word	0xe5007f00
    1034:	e5007fd0 	.word	0xe5007fd0
    1038:	00400038 	.word	0x00400038

0000103c <io_put_char>:
    103c:	b570      	push	{r4, r5, r6, lr}
    103e:	1c0d      	adds	r5, r1, #0
    1040:	2803      	cmp	r0, #3
    1042:	d907      	bls.n	1054 <io_put_char+0x18>
    1044:	4a34      	ldr	r2, [pc, #208]	; (1118 <io_put_char+0xdc>)
    1046:	6813      	ldr	r3, [r2, #0]
    1048:	54c1      	strb	r1, [r0, r3]
    104a:	3301      	adds	r3, #1
    104c:	6013      	str	r3, [r2, #0]
    104e:	2200      	movs	r2, #0
    1050:	54c2      	strb	r2, [r0, r3]
    1052:	e060      	b.n	1116 <io_put_char+0xda>
    1054:	2800      	cmp	r0, #0
    1056:	d13a      	bne.n	10ce <io_put_char+0x92>
    1058:	4b30      	ldr	r3, [pc, #192]	; (111c <io_put_char+0xe0>)
    105a:	681b      	ldr	r3, [r3, #0]
    105c:	2b00      	cmp	r3, #0
    105e:	d11d      	bne.n	109c <io_put_char+0x60>
    1060:	2001      	movs	r0, #1
    1062:	2192      	movs	r1, #146	; 0x92
    1064:	4081      	lsls	r1, r0
    1066:	f7ff ffb1 	bl	fcc <sark_alloc>
    106a:	1e04      	subs	r4, r0, #0
    106c:	d102      	bne.n	1074 <io_put_char+0x38>
    106e:	200e      	movs	r0, #14
    1070:	f7ff f85c 	bl	12c <rt_error>
    1074:	2307      	movs	r3, #7
    1076:	7223      	strb	r3, [r4, #8]
    1078:	2300      	movs	r3, #0
    107a:	7263      	strb	r3, [r4, #9]
    107c:	23ff      	movs	r3, #255	; 0xff
    107e:	72a3      	strb	r3, [r4, #10]
    1080:	4b27      	ldr	r3, [pc, #156]	; (1120 <io_put_char+0xe4>)
    1082:	889a      	ldrh	r2, [r3, #4]
    1084:	81a2      	strh	r2, [r4, #12]
    1086:	4a27      	ldr	r2, [pc, #156]	; (1124 <io_put_char+0xe8>)
    1088:	6812      	ldr	r2, [r2, #0]
    108a:	72e2      	strb	r2, [r4, #11]
    108c:	881b      	ldrh	r3, [r3, #0]
    108e:	81e3      	strh	r3, [r4, #14]
    1090:	2340      	movs	r3, #64	; 0x40
    1092:	8223      	strh	r3, [r4, #16]
    1094:	230c      	movs	r3, #12
    1096:	80a3      	strh	r3, [r4, #4]
    1098:	4b20      	ldr	r3, [pc, #128]	; (111c <io_put_char+0xe0>)
    109a:	601c      	str	r4, [r3, #0]
    109c:	4b1f      	ldr	r3, [pc, #124]	; (111c <io_put_char+0xe0>)
    109e:	6818      	ldr	r0, [r3, #0]
    10a0:	8883      	ldrh	r3, [r0, #4]
    10a2:	18c2      	adds	r2, r0, r3
    10a4:	3301      	adds	r3, #1
    10a6:	041b      	lsls	r3, r3, #16
    10a8:	0c1b      	lsrs	r3, r3, #16
    10aa:	7215      	strb	r5, [r2, #8]
    10ac:	8083      	strh	r3, [r0, #4]
    10ae:	2d00      	cmp	r5, #0
    10b0:	d005      	beq.n	10be <io_put_char+0x82>
    10b2:	2d0a      	cmp	r5, #10
    10b4:	d003      	beq.n	10be <io_put_char+0x82>
    10b6:	2286      	movs	r2, #134	; 0x86
    10b8:	0052      	lsls	r2, r2, #1
    10ba:	4293      	cmp	r3, r2
    10bc:	d12b      	bne.n	1116 <io_put_char+0xda>
    10be:	210a      	movs	r1, #10
    10c0:	f7ff fb0a 	bl	6d8 <sark_msg_send>
    10c4:	4b15      	ldr	r3, [pc, #84]	; (111c <io_put_char+0xe0>)
    10c6:	220c      	movs	r2, #12
    10c8:	681b      	ldr	r3, [r3, #0]
    10ca:	809a      	strh	r2, [r3, #4]
    10cc:	e023      	b.n	1116 <io_put_char+0xda>
    10ce:	2802      	cmp	r0, #2
    10d0:	d121      	bne.n	1116 <io_put_char+0xda>
    10d2:	4e15      	ldr	r6, [pc, #84]	; (1128 <io_put_char+0xec>)
    10d4:	6833      	ldr	r3, [r6, #0]
    10d6:	2b00      	cmp	r3, #0
    10d8:	d105      	bne.n	10e6 <io_put_char+0xaa>
    10da:	4b12      	ldr	r3, [pc, #72]	; (1124 <io_put_char+0xe8>)
    10dc:	69dc      	ldr	r4, [r3, #28]
    10de:	f7ff ff8d 	bl	ffc <io_buf_init>
    10e2:	65a0      	str	r0, [r4, #88]	; 0x58
    10e4:	6030      	str	r0, [r6, #0]
    10e6:	4a11      	ldr	r2, [pc, #68]	; (112c <io_put_char+0xf0>)
    10e8:	6834      	ldr	r4, [r6, #0]
    10ea:	6813      	ldr	r3, [r2, #0]
    10ec:	18e1      	adds	r1, r4, r3
    10ee:	3301      	adds	r3, #1
    10f0:	6013      	str	r3, [r2, #0]
    10f2:	4a0b      	ldr	r2, [pc, #44]	; (1120 <io_put_char+0xe4>)
    10f4:	740d      	strb	r5, [r1, #16]
    10f6:	6d12      	ldr	r2, [r2, #80]	; 0x50
    10f8:	4293      	cmp	r3, r2
    10fa:	d107      	bne.n	110c <io_put_char+0xd0>
    10fc:	60e3      	str	r3, [r4, #12]
    10fe:	f7ff ff7d 	bl	ffc <io_buf_init>
    1102:	6833      	ldr	r3, [r6, #0]
    1104:	6020      	str	r0, [r4, #0]
    1106:	681b      	ldr	r3, [r3, #0]
    1108:	6033      	str	r3, [r6, #0]
    110a:	e004      	b.n	1116 <io_put_char+0xda>
    110c:	2d00      	cmp	r5, #0
    110e:	d001      	beq.n	1114 <io_put_char+0xd8>
    1110:	2d0a      	cmp	r5, #10
    1112:	d100      	bne.n	1116 <io_put_char+0xda>
    1114:	60e3      	str	r3, [r4, #12]
    1116:	bd70      	pop	{r4, r5, r6, pc}
    1118:	0040003c 	.word	0x0040003c
    111c:	00400030 	.word	0x00400030
    1120:	e5007f00 	.word	0xe5007f00
    1124:	00400040 	.word	0x00400040
    1128:	00400034 	.word	0x00400034
    112c:	00400038 	.word	0x00400038

00001130 <io_put_fixed>:
    1130:	b5f0      	push	{r4, r5, r6, r7, lr}
    1132:	b08d      	sub	sp, #52	; 0x34
    1134:	9001      	str	r0, [sp, #4]
    1136:	1c15      	adds	r5, r2, #0
    1138:	2b0c      	cmp	r3, #12
    113a:	d900      	bls.n	113e <io_put_fixed+0xe>
    113c:	230c      	movs	r3, #12
    113e:	1c0a      	adds	r2, r1, #0
    1140:	2400      	movs	r4, #0
    1142:	e008      	b.n	1156 <io_put_fixed+0x26>
    1144:	0c17      	lsrs	r7, r2, #16
    1146:	3730      	adds	r7, #48	; 0x30
    1148:	46bc      	mov	ip, r7
    114a:	a805      	add	r0, sp, #20
    114c:	3401      	adds	r4, #1
    114e:	18c7      	adds	r7, r0, r3
    1150:	4266      	negs	r6, r4
    1152:	4660      	mov	r0, ip
    1154:	55b8      	strb	r0, [r7, r6]
    1156:	0412      	lsls	r2, r2, #16
    1158:	0c12      	lsrs	r2, r2, #16
    115a:	200a      	movs	r0, #10
    115c:	4342      	muls	r2, r0
    115e:	429c      	cmp	r4, r3
    1160:	d1f0      	bne.n	1144 <io_put_fixed+0x14>
    1162:	0c12      	lsrs	r2, r2, #16
    1164:	2004      	movs	r0, #4
    1166:	4290      	cmp	r0, r2
    1168:	4180      	sbcs	r0, r0
    116a:	2601      	movs	r6, #1
    116c:	4240      	negs	r0, r0
    116e:	2200      	movs	r2, #0
    1170:	46b4      	mov	ip, r6
    1172:	2730      	movs	r7, #48	; 0x30
    1174:	e00a      	b.n	118c <io_put_fixed+0x5c>
    1176:	a805      	add	r0, sp, #20
    1178:	5c16      	ldrb	r6, [r2, r0]
    117a:	2e38      	cmp	r6, #56	; 0x38
    117c:	d902      	bls.n	1184 <io_put_fixed+0x54>
    117e:	5417      	strb	r7, [r2, r0]
    1180:	2001      	movs	r0, #1
    1182:	e002      	b.n	118a <io_put_fixed+0x5a>
    1184:	3601      	adds	r6, #1
    1186:	5416      	strb	r6, [r2, r0]
    1188:	2000      	movs	r0, #0
    118a:	3201      	adds	r2, #1
    118c:	429a      	cmp	r2, r3
    118e:	d202      	bcs.n	1196 <io_put_fixed+0x66>
    1190:	4666      	mov	r6, ip
    1192:	4230      	tst	r0, r6
    1194:	d1ef      	bne.n	1176 <io_put_fixed+0x46>
    1196:	2b00      	cmp	r3, #0
    1198:	d003      	beq.n	11a2 <io_put_fixed+0x72>
    119a:	242e      	movs	r4, #46	; 0x2e
    119c:	aa05      	add	r2, sp, #20
    119e:	54d4      	strb	r4, [r2, r3]
    11a0:	1c5c      	adds	r4, r3, #1
    11a2:	0c09      	lsrs	r1, r1, #16
    11a4:	1841      	adds	r1, r0, r1
    11a6:	a803      	add	r0, sp, #12
    11a8:	f7ff e892 	blx	2d0 <sark_div10>
    11ac:	9a04      	ldr	r2, [sp, #16]
    11ae:	9903      	ldr	r1, [sp, #12]
    11b0:	ab05      	add	r3, sp, #20
    11b2:	3230      	adds	r2, #48	; 0x30
    11b4:	54e2      	strb	r2, [r4, r3]
    11b6:	1c66      	adds	r6, r4, #1
    11b8:	2900      	cmp	r1, #0
    11ba:	d001      	beq.n	11c0 <io_put_fixed+0x90>
    11bc:	1c34      	adds	r4, r6, #0
    11be:	e7f2      	b.n	11a6 <io_put_fixed+0x76>
    11c0:	9813      	ldr	r0, [sp, #76]	; 0x4c
    11c2:	2800      	cmp	r0, #0
    11c4:	d008      	beq.n	11d8 <io_put_fixed+0xa8>
    11c6:	222d      	movs	r2, #45	; 0x2d
    11c8:	559a      	strb	r2, [r3, r6]
    11ca:	1ca6      	adds	r6, r4, #2
    11cc:	e004      	b.n	11d8 <io_put_fixed+0xa8>
    11ce:	9801      	ldr	r0, [sp, #4]
    11d0:	9912      	ldr	r1, [sp, #72]	; 0x48
    11d2:	f7ff ff33 	bl	103c <io_put_char>
    11d6:	3d01      	subs	r5, #1
    11d8:	1c73      	adds	r3, r6, #1
    11da:	429d      	cmp	r5, r3
    11dc:	d8f7      	bhi.n	11ce <io_put_fixed+0x9e>
    11de:	3e01      	subs	r6, #1
    11e0:	ab05      	add	r3, sp, #20
    11e2:	5cf1      	ldrb	r1, [r6, r3]
    11e4:	9801      	ldr	r0, [sp, #4]
    11e6:	f7ff ff29 	bl	103c <io_put_char>
    11ea:	2e00      	cmp	r6, #0
    11ec:	d1f7      	bne.n	11de <io_put_fixed+0xae>
    11ee:	b00d      	add	sp, #52	; 0x34
    11f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

000011f4 <io_printf>:
    11f4:	b40e      	push	{r1, r2, r3}
    11f6:	b5f0      	push	{r4, r5, r6, r7, lr}
    11f8:	b08c      	sub	sp, #48	; 0x30
    11fa:	1c04      	adds	r4, r0, #0
    11fc:	9d11      	ldr	r5, [sp, #68]	; 0x44
    11fe:	2803      	cmp	r0, #3
    1200:	d100      	bne.n	1204 <io_printf+0x10>
    1202:	e145      	b.n	1490 <io_printf+0x29c>
    1204:	d903      	bls.n	120e <io_printf+0x1a>
    1206:	4aa5      	ldr	r2, [pc, #660]	; (149c <io_printf+0x2a8>)
    1208:	2300      	movs	r3, #0
    120a:	7003      	strb	r3, [r0, #0]
    120c:	6013      	str	r3, [r2, #0]
    120e:	ab12      	add	r3, sp, #72	; 0x48
    1210:	9305      	str	r3, [sp, #20]
    1212:	7829      	ldrb	r1, [r5, #0]
    1214:	2900      	cmp	r1, #0
    1216:	d100      	bne.n	121a <io_printf+0x26>
    1218:	e13a      	b.n	1490 <io_printf+0x29c>
    121a:	2925      	cmp	r1, #37	; 0x25
    121c:	d001      	beq.n	1222 <io_printf+0x2e>
    121e:	3501      	adds	r5, #1
    1220:	e053      	b.n	12ca <io_printf+0xd6>
    1222:	7869      	ldrb	r1, [r5, #1]
    1224:	3502      	adds	r5, #2
    1226:	2900      	cmp	r1, #0
    1228:	d100      	bne.n	122c <io_printf+0x38>
    122a:	e131      	b.n	1490 <io_printf+0x29c>
    122c:	2930      	cmp	r1, #48	; 0x30
    122e:	d002      	beq.n	1236 <io_printf+0x42>
    1230:	2020      	movs	r0, #32
    1232:	9003      	str	r0, [sp, #12]
    1234:	e000      	b.n	1238 <io_printf+0x44>
    1236:	9103      	str	r1, [sp, #12]
    1238:	2600      	movs	r6, #0
    123a:	220a      	movs	r2, #10
    123c:	e007      	b.n	124e <io_printf+0x5a>
    123e:	4356      	muls	r6, r2
    1240:	1876      	adds	r6, r6, r1
    1242:	7829      	ldrb	r1, [r5, #0]
    1244:	3e30      	subs	r6, #48	; 0x30
    1246:	3501      	adds	r5, #1
    1248:	2900      	cmp	r1, #0
    124a:	d100      	bne.n	124e <io_printf+0x5a>
    124c:	e120      	b.n	1490 <io_printf+0x29c>
    124e:	1c0b      	adds	r3, r1, #0
    1250:	3b30      	subs	r3, #48	; 0x30
    1252:	2b09      	cmp	r3, #9
    1254:	d9f3      	bls.n	123e <io_printf+0x4a>
    1256:	1c37      	adds	r7, r6, #0
    1258:	2306      	movs	r3, #6
    125a:	292e      	cmp	r1, #46	; 0x2e
    125c:	d110      	bne.n	1280 <io_printf+0x8c>
    125e:	7829      	ldrb	r1, [r5, #0]
    1260:	2300      	movs	r3, #0
    1262:	3501      	adds	r5, #1
    1264:	200a      	movs	r0, #10
    1266:	e004      	b.n	1272 <io_printf+0x7e>
    1268:	4343      	muls	r3, r0
    126a:	185b      	adds	r3, r3, r1
    126c:	3b30      	subs	r3, #48	; 0x30
    126e:	7829      	ldrb	r1, [r5, #0]
    1270:	3501      	adds	r5, #1
    1272:	1c0a      	adds	r2, r1, #0
    1274:	3a30      	subs	r2, #48	; 0x30
    1276:	2a09      	cmp	r2, #9
    1278:	d9f6      	bls.n	1268 <io_printf+0x74>
    127a:	2900      	cmp	r1, #0
    127c:	d100      	bne.n	1280 <io_printf+0x8c>
    127e:	e107      	b.n	1490 <io_printf+0x29c>
    1280:	296b      	cmp	r1, #107	; 0x6b
    1282:	d100      	bne.n	1286 <io_printf+0x92>
    1284:	e0b0      	b.n	13e8 <io_printf+0x1f4>
    1286:	d80d      	bhi.n	12a4 <io_printf+0xb0>
    1288:	2963      	cmp	r1, #99	; 0x63
    128a:	d01a      	beq.n	12c2 <io_printf+0xce>
    128c:	d805      	bhi.n	129a <io_printf+0xa6>
    128e:	294b      	cmp	r1, #75	; 0x4b
    1290:	d100      	bne.n	1294 <io_printf+0xa0>
    1292:	e09a      	b.n	13ca <io_printf+0x1d6>
    1294:	2952      	cmp	r1, #82	; 0x52
    1296:	d118      	bne.n	12ca <io_printf+0xd6>
    1298:	e09e      	b.n	13d8 <io_printf+0x1e4>
    129a:	2964      	cmp	r1, #100	; 0x64
    129c:	d036      	beq.n	130c <io_printf+0x118>
    129e:	2966      	cmp	r1, #102	; 0x66
    12a0:	d113      	bne.n	12ca <io_printf+0xd6>
    12a2:	e092      	b.n	13ca <io_printf+0x1d6>
    12a4:	2975      	cmp	r1, #117	; 0x75
    12a6:	d066      	beq.n	1376 <io_printf+0x182>
    12a8:	d805      	bhi.n	12b6 <io_printf+0xc2>
    12aa:	2972      	cmp	r1, #114	; 0x72
    12ac:	d100      	bne.n	12b0 <io_printf+0xbc>
    12ae:	e09b      	b.n	13e8 <io_printf+0x1f4>
    12b0:	2973      	cmp	r1, #115	; 0x73
    12b2:	d10a      	bne.n	12ca <io_printf+0xd6>
    12b4:	e00d      	b.n	12d2 <io_printf+0xde>
    12b6:	2978      	cmp	r1, #120	; 0x78
    12b8:	d100      	bne.n	12bc <io_printf+0xc8>
    12ba:	e0a6      	b.n	140a <io_printf+0x216>
    12bc:	297a      	cmp	r1, #122	; 0x7a
    12be:	d104      	bne.n	12ca <io_printf+0xd6>
    12c0:	e0ce      	b.n	1460 <io_printf+0x26c>
    12c2:	9b05      	ldr	r3, [sp, #20]
    12c4:	6819      	ldr	r1, [r3, #0]
    12c6:	1d1a      	adds	r2, r3, #4
    12c8:	9205      	str	r2, [sp, #20]
    12ca:	1c20      	adds	r0, r4, #0
    12cc:	f7ff feb6 	bl	103c <io_put_char>
    12d0:	e79f      	b.n	1212 <io_printf+0x1e>
    12d2:	9b05      	ldr	r3, [sp, #20]
    12d4:	681e      	ldr	r6, [r3, #0]
    12d6:	1d1a      	adds	r2, r3, #4
    12d8:	1c33      	adds	r3, r6, #0
    12da:	9205      	str	r2, [sp, #20]
    12dc:	781a      	ldrb	r2, [r3, #0]
    12de:	1b99      	subs	r1, r3, r6
    12e0:	9103      	str	r1, [sp, #12]
    12e2:	3301      	adds	r3, #1
    12e4:	2a00      	cmp	r2, #0
    12e6:	d1f9      	bne.n	12dc <io_printf+0xe8>
    12e8:	e004      	b.n	12f4 <io_printf+0x100>
    12ea:	1c20      	adds	r0, r4, #0
    12ec:	2120      	movs	r1, #32
    12ee:	f7ff fea5 	bl	103c <io_put_char>
    12f2:	3f01      	subs	r7, #1
    12f4:	9a03      	ldr	r2, [sp, #12]
    12f6:	4297      	cmp	r7, r2
    12f8:	dcf7      	bgt.n	12ea <io_printf+0xf6>
    12fa:	e003      	b.n	1304 <io_printf+0x110>
    12fc:	1c20      	adds	r0, r4, #0
    12fe:	3601      	adds	r6, #1
    1300:	f7ff fe9c 	bl	103c <io_put_char>
    1304:	7831      	ldrb	r1, [r6, #0]
    1306:	2900      	cmp	r1, #0
    1308:	d1f8      	bne.n	12fc <io_printf+0x108>
    130a:	e782      	b.n	1212 <io_printf+0x1e>
    130c:	9b05      	ldr	r3, [sp, #20]
    130e:	6819      	ldr	r1, [r3, #0]
    1310:	1d1a      	adds	r2, r3, #4
    1312:	2300      	movs	r3, #0
    1314:	9205      	str	r2, [sp, #20]
    1316:	9303      	str	r3, [sp, #12]
    1318:	4299      	cmp	r1, r3
    131a:	da02      	bge.n	1322 <io_printf+0x12e>
    131c:	202d      	movs	r0, #45	; 0x2d
    131e:	4249      	negs	r1, r1
    1320:	9003      	str	r0, [sp, #12]
    1322:	2700      	movs	r7, #0
    1324:	a806      	add	r0, sp, #24
    1326:	f7fe efd4 	blx	2d0 <sark_div10>
    132a:	9a07      	ldr	r2, [sp, #28]
    132c:	9906      	ldr	r1, [sp, #24]
    132e:	ab08      	add	r3, sp, #32
    1330:	3230      	adds	r2, #48	; 0x30
    1332:	54fa      	strb	r2, [r7, r3]
    1334:	3701      	adds	r7, #1
    1336:	2900      	cmp	r1, #0
    1338:	d1f4      	bne.n	1324 <io_printf+0x130>
    133a:	e001      	b.n	1340 <io_printf+0x14c>
    133c:	2f00      	cmp	r7, #0
    133e:	d003      	beq.n	1348 <io_printf+0x154>
    1340:	3f01      	subs	r7, #1
    1342:	5cfa      	ldrb	r2, [r7, r3]
    1344:	2a30      	cmp	r2, #48	; 0x30
    1346:	d0f9      	beq.n	133c <io_printf+0x148>
    1348:	9903      	ldr	r1, [sp, #12]
    134a:	2900      	cmp	r1, #0
    134c:	d007      	beq.n	135e <io_printf+0x16a>
    134e:	3701      	adds	r7, #1
    1350:	55d9      	strb	r1, [r3, r7]
    1352:	e004      	b.n	135e <io_printf+0x16a>
    1354:	1c20      	adds	r0, r4, #0
    1356:	2120      	movs	r1, #32
    1358:	f7ff fe70 	bl	103c <io_put_char>
    135c:	3e01      	subs	r6, #1
    135e:	1c7b      	adds	r3, r7, #1
    1360:	429e      	cmp	r6, r3
    1362:	d8f7      	bhi.n	1354 <io_printf+0x160>
    1364:	ab08      	add	r3, sp, #32
    1366:	5cf9      	ldrb	r1, [r7, r3]
    1368:	1c20      	adds	r0, r4, #0
    136a:	3f01      	subs	r7, #1
    136c:	f7ff fe66 	bl	103c <io_put_char>
    1370:	1c79      	adds	r1, r7, #1
    1372:	d1f7      	bne.n	1364 <io_printf+0x170>
    1374:	e74d      	b.n	1212 <io_printf+0x1e>
    1376:	9b05      	ldr	r3, [sp, #20]
    1378:	2700      	movs	r7, #0
    137a:	6819      	ldr	r1, [r3, #0]
    137c:	1d1a      	adds	r2, r3, #4
    137e:	9205      	str	r2, [sp, #20]
    1380:	a806      	add	r0, sp, #24
    1382:	f7fe efa6 	blx	2d0 <sark_div10>
    1386:	9a07      	ldr	r2, [sp, #28]
    1388:	9906      	ldr	r1, [sp, #24]
    138a:	3230      	adds	r2, #48	; 0x30
    138c:	ab08      	add	r3, sp, #32
    138e:	54fa      	strb	r2, [r7, r3]
    1390:	3701      	adds	r7, #1
    1392:	2900      	cmp	r1, #0
    1394:	d1f4      	bne.n	1380 <io_printf+0x18c>
    1396:	e001      	b.n	139c <io_printf+0x1a8>
    1398:	2f00      	cmp	r7, #0
    139a:	d00a      	beq.n	13b2 <io_printf+0x1be>
    139c:	3f01      	subs	r7, #1
    139e:	ab08      	add	r3, sp, #32
    13a0:	5cfb      	ldrb	r3, [r7, r3]
    13a2:	2b30      	cmp	r3, #48	; 0x30
    13a4:	d105      	bne.n	13b2 <io_printf+0x1be>
    13a6:	e7f7      	b.n	1398 <io_printf+0x1a4>
    13a8:	1c20      	adds	r0, r4, #0
    13aa:	9903      	ldr	r1, [sp, #12]
    13ac:	f7ff fe46 	bl	103c <io_put_char>
    13b0:	3e01      	subs	r6, #1
    13b2:	1c7b      	adds	r3, r7, #1
    13b4:	429e      	cmp	r6, r3
    13b6:	d8f7      	bhi.n	13a8 <io_printf+0x1b4>
    13b8:	ab08      	add	r3, sp, #32
    13ba:	5cf9      	ldrb	r1, [r7, r3]
    13bc:	1c20      	adds	r0, r4, #0
    13be:	3f01      	subs	r7, #1
    13c0:	f7ff fe3c 	bl	103c <io_put_char>
    13c4:	1c7a      	adds	r2, r7, #1
    13c6:	d1f7      	bne.n	13b8 <io_printf+0x1c4>
    13c8:	e723      	b.n	1212 <io_printf+0x1e>
    13ca:	9a05      	ldr	r2, [sp, #20]
    13cc:	9803      	ldr	r0, [sp, #12]
    13ce:	1d11      	adds	r1, r2, #4
    13d0:	9105      	str	r1, [sp, #20]
    13d2:	6811      	ldr	r1, [r2, #0]
    13d4:	9000      	str	r0, [sp, #0]
    13d6:	e005      	b.n	13e4 <io_printf+0x1f0>
    13d8:	9a05      	ldr	r2, [sp, #20]
    13da:	1d11      	adds	r1, r2, #4
    13dc:	9105      	str	r1, [sp, #20]
    13de:	6811      	ldr	r1, [r2, #0]
    13e0:	9a03      	ldr	r2, [sp, #12]
    13e2:	9200      	str	r2, [sp, #0]
    13e4:	2200      	movs	r2, #0
    13e6:	e00a      	b.n	13fe <io_printf+0x20a>
    13e8:	9a05      	ldr	r2, [sp, #20]
    13ea:	1d11      	adds	r1, r2, #4
    13ec:	6812      	ldr	r2, [r2, #0]
    13ee:	9105      	str	r1, [sp, #20]
    13f0:	17d0      	asrs	r0, r2, #31
    13f2:	1811      	adds	r1, r2, r0
    13f4:	4041      	eors	r1, r0
    13f6:	0049      	lsls	r1, r1, #1
    13f8:	9803      	ldr	r0, [sp, #12]
    13fa:	0fd2      	lsrs	r2, r2, #31
    13fc:	9000      	str	r0, [sp, #0]
    13fe:	9201      	str	r2, [sp, #4]
    1400:	1c20      	adds	r0, r4, #0
    1402:	1c32      	adds	r2, r6, #0
    1404:	f7ff fe94 	bl	1130 <io_put_fixed>
    1408:	e703      	b.n	1212 <io_printf+0x1e>
    140a:	9b05      	ldr	r3, [sp, #20]
    140c:	210f      	movs	r1, #15
    140e:	1d1a      	adds	r2, r3, #4
    1410:	4823      	ldr	r0, [pc, #140]	; (14a0 <io_printf+0x2ac>)
    1412:	681b      	ldr	r3, [r3, #0]
    1414:	2700      	movs	r7, #0
    1416:	468c      	mov	ip, r1
    1418:	9205      	str	r2, [sp, #20]
    141a:	4662      	mov	r2, ip
    141c:	401a      	ands	r2, r3
    141e:	5c81      	ldrb	r1, [r0, r2]
    1420:	aa08      	add	r2, sp, #32
    1422:	54b9      	strb	r1, [r7, r2]
    1424:	091b      	lsrs	r3, r3, #4
    1426:	3701      	adds	r7, #1
    1428:	2b00      	cmp	r3, #0
    142a:	d1f6      	bne.n	141a <io_printf+0x226>
    142c:	e001      	b.n	1432 <io_printf+0x23e>
    142e:	2f00      	cmp	r7, #0
    1430:	d00a      	beq.n	1448 <io_printf+0x254>
    1432:	3f01      	subs	r7, #1
    1434:	ab08      	add	r3, sp, #32
    1436:	5cfb      	ldrb	r3, [r7, r3]
    1438:	2b30      	cmp	r3, #48	; 0x30
    143a:	d105      	bne.n	1448 <io_printf+0x254>
    143c:	e7f7      	b.n	142e <io_printf+0x23a>
    143e:	1c20      	adds	r0, r4, #0
    1440:	9903      	ldr	r1, [sp, #12]
    1442:	f7ff fdfb 	bl	103c <io_put_char>
    1446:	3e01      	subs	r6, #1
    1448:	1c7b      	adds	r3, r7, #1
    144a:	429e      	cmp	r6, r3
    144c:	d8f7      	bhi.n	143e <io_printf+0x24a>
    144e:	ab08      	add	r3, sp, #32
    1450:	5cf9      	ldrb	r1, [r7, r3]
    1452:	1c20      	adds	r0, r4, #0
    1454:	3f01      	subs	r7, #1
    1456:	f7ff fdf1 	bl	103c <io_put_char>
    145a:	1c7a      	adds	r2, r7, #1
    145c:	d1f7      	bne.n	144e <io_printf+0x25a>
    145e:	e6d8      	b.n	1212 <io_printf+0x1e>
    1460:	9b05      	ldr	r3, [sp, #20]
    1462:	1e77      	subs	r7, r6, #1
    1464:	1d1a      	adds	r2, r3, #4
    1466:	681b      	ldr	r3, [r3, #0]
    1468:	9303      	str	r3, [sp, #12]
    146a:	4b0e      	ldr	r3, [pc, #56]	; (14a4 <io_printf+0x2b0>)
    146c:	9205      	str	r2, [sp, #20]
    146e:	18f6      	adds	r6, r6, r3
    1470:	00b6      	lsls	r6, r6, #2
    1472:	e00a      	b.n	148a <io_printf+0x296>
    1474:	9a03      	ldr	r2, [sp, #12]
    1476:	230f      	movs	r3, #15
    1478:	40f2      	lsrs	r2, r6
    147a:	4013      	ands	r3, r2
    147c:	4a08      	ldr	r2, [pc, #32]	; (14a0 <io_printf+0x2ac>)
    147e:	1c20      	adds	r0, r4, #0
    1480:	5cd1      	ldrb	r1, [r2, r3]
    1482:	f7ff fddb 	bl	103c <io_put_char>
    1486:	3f01      	subs	r7, #1
    1488:	3e04      	subs	r6, #4
    148a:	2f00      	cmp	r7, #0
    148c:	daf2      	bge.n	1474 <io_printf+0x280>
    148e:	e6c0      	b.n	1212 <io_printf+0x1e>
    1490:	b00c      	add	sp, #48	; 0x30
    1492:	bcf0      	pop	{r4, r5, r6, r7}
    1494:	bc08      	pop	{r3}
    1496:	b003      	add	sp, #12
    1498:	4718      	bx	r3
    149a:	46c0      	nop			; (mov r8, r8)
    149c:	0040003c 	.word	0x0040003c
    14a0:	0000152f 	.word	0x0000152f
    14a4:	3fffffff 	.word	0x3fffffff

000014a8 <__io_printf_from_arm>:
    14a8:	e51ff004 	ldr	pc, [pc, #-4]	; 14ac <__io_printf_from_arm+0x4>
    14ac:	000011f5 	.word	0x000011f5

000014b0 <__timer_schedule_proc_from_arm>:
    14b0:	e51ff004 	ldr	pc, [pc, #-4]	; 14b4 <__timer_schedule_proc_from_arm+0x4>
    14b4:	00000da9 	.word	0x00000da9
    14b8:	74696877 	.word	0x74696877
    14bc:	6c620065 	.word	0x6c620065
    14c0:	006b6361 	.word	0x006b6361
    14c4:	3b732523 	.word	0x3b732523
    14c8:	6c696623 	.word	0x6c696623
    14cc:	72233b6c 	.word	0x72233b6c
    14d0:	253b6465 	.word	0x253b6465
    14d4:	54000a64 	.word	0x54000a64
    14d8:	72656d69 	.word	0x72656d69
    14dc:	78656e20 	.word	0x78656e20
    14e0:	64252074 	.word	0x64252074
    14e4:	7453000a 	.word	0x7453000a
    14e8:	65747261 	.word	0x65747261
    14ec:	6f632064 	.word	0x6f632064
    14f0:	25206572 	.word	0x25206572
    14f4:	54000a64 	.word	0x54000a64
    14f8:	696d7265 	.word	0x696d7265
    14fc:	6574616e 	.word	0x6574616e
    1500:	63722064 	.word	0x63722064
    1504:	0a642520 	.word	0x0a642520
    1508:	00000000 	.word	0x00000000

0000150c <build_name>:
    150c:	6d6f682f 6d6a2f65 6f616971 0065442f     /home/jmqiao/De.

0000151c <build_date>:
    151c:	557f4ea3 4b524153 6970532f 6b614e4e     .N.USARK/SpiNNak
    152c:	30007265                                         er.

0000152f <hex>:
    152f:	33323130 37363534 62613938 66656463     0123456789abcdef
	...

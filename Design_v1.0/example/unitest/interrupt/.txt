
/home/jmqiao/Desktop/Update_Spinake_Project/Test_Case/Design_v1.0/example/unitest/interrupt/no-os/interrupt.elf:     file format elf32-littlearm
/home/jmqiao/Desktop/Update_Spinake_Project/Test_Case/Design_v1.0/example/unitest/interrupt/no-os/interrupt.elf
architecture: armv5te, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00001118 memsz 0x00001118 flags r-x
    LOAD off    0x00010000 vaddr 0x00400000 paddr 0x00400000 align 2**15
         filesz 0x00000000 memsz 0x00000118 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 RO_DATA       00001118  00000000  00000000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 ZI_DATA       00000118  00400000  00400000  00010000  2**2
                  ALLOC
  2 .debug_info   0000112a  00000000  00000000  00009118  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_abbrev 0000026c  00000000  00000000  0000a242  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_loc    00000061  00000000  00000000  0000a4ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000038  00000000  00000000  0000a50f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000107  00000000  00000000  0000a547  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000007c4  00000000  00000000  0000a64e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .comment      00000030  00000000  00000000  0000ae12  2**0
                  CONTENTS, READONLY
  9 .ARM.attributes 00000027  00000000  00000000  0000ae42  2**0
                  CONTENTS, READONLY
 10 .debug_frame  00000058  00000000  00000000  0000ae6c  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  RO_DATA	00000000 RO_DATA
00400000 l    d  ZI_DATA	00000000 ZI_DATA
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 libsark.o
00000001 l       *ABS*	00000000 GNU
00000000 l       *ABS*	00000000 NULL
80000000 l       *ABS*	00000000 BIT_31
00000001 l       *ABS*	00000000 BUF_WRITE
00000012 l       *ABS*	00000000 NUM_CPUS
00000006 l       *ABS*	00000000 NUM_LINKS
00000000 l       *ABS*	00000000 ITCM_BASE
00008000 l       *ABS*	00000000 ITCM_SIZE
00008000 l       *ABS*	00000000 ITCM_TOP
00400000 l       *ABS*	00000000 DTCM_BASE
00010000 l       *ABS*	00000000 DTCM_SIZE
00410000 l       *ABS*	00000000 DTCM_TOP
70000000 l       *ABS*	00000000 SDRAM_BASE_UNBUF
60000000 l       *ABS*	00000000 SDRAM_BASE_BUF
60000000 l       *ABS*	00000000 SDRAM_BASE
08000000 l       *ABS*	00000000 SDRAM_SIZE
68000000 l       *ABS*	00000000 SDRAM_TOP
f5000000 l       *ABS*	00000000 SYSRAM_BASE_UNBUF
e5000000 l       *ABS*	00000000 SYSRAM_BASE_BUF
e5000000 l       *ABS*	00000000 SYSRAM_BASE
00008000 l       *ABS*	00000000 SYSRAM_SIZE
e5008000 l       *ABS*	00000000 SYSRAM_TOP
f6000000 l       *ABS*	00000000 ROM_BASE
00008000 l       *ABS*	00000000 ROM_SIZE
f6008000 l       *ABS*	00000000 ROM_TOP
10000000 l       *ABS*	00000000 CC_BASE_UNBUF
20000000 l       *ABS*	00000000 CC_BASE_BUF
20000000 l       *ABS*	00000000 CC_BASE
00000000 l       *ABS*	00000000 CC_TCR
00000004 l       *ABS*	00000000 CC_TXDATA
00000008 l       *ABS*	00000000 CC_TXKEY
0000000c l       *ABS*	00000000 CC_RSR
00000010 l       *ABS*	00000000 CC_RXDATA
00000014 l       *ABS*	00000000 CC_RXKEY
00000018 l       *ABS*	00000000 CC_SAR
0000001c l       *ABS*	00000000 CC_TEST
11000000 l       *ABS*	00000000 TIMER_BASE_UNBUF
21000000 l       *ABS*	00000000 TIMER_BASE_BUF
21000000 l       *ABS*	00000000 TIMER_BASE
00000020 l       *ABS*	00000000 TIMER_OFFSET
21000000 l       *ABS*	00000000 TIMER1_BASE
21000020 l       *ABS*	00000000 TIMER2_BASE
00000000 l       *ABS*	00000000 TC_LOAD
00000004 l       *ABS*	00000000 TC_COUNT
00000008 l       *ABS*	00000000 TC_CONTROL
0000000c l       *ABS*	00000000 TC_INT_CLR
00000010 l       *ABS*	00000000 TC_RAW_INT
00000014 l       *ABS*	00000000 TC_MASK_INT
00000018 l       *ABS*	00000000 TC_BG_LOAD
00000000 l       *ABS*	00000000 T1_LOAD
00000004 l       *ABS*	00000000 T1_COUNT
00000008 l       *ABS*	00000000 T1_CONTROL
0000000c l       *ABS*	00000000 T1_INT_CLR
00000010 l       *ABS*	00000000 T1_RAW_INT
00000014 l       *ABS*	00000000 T1_MASK_INT
00000018 l       *ABS*	00000000 T1_BG_LOAD
00000020 l       *ABS*	00000000 T2_LOAD
00000024 l       *ABS*	00000000 T2_COUNT
00000028 l       *ABS*	00000000 T2_CONTROL
0000002c l       *ABS*	00000000 T2_INT_CLR
00000030 l       *ABS*	00000000 T2_RAW_INT
00000034 l       *ABS*	00000000 T2_MASK_INT
00000038 l       *ABS*	00000000 T2_BG_LOAD
1f000000 l       *ABS*	00000000 VIC_BASE_UNBUF
2f000000 l       *ABS*	00000000 VIC_BASE_BUF
2f000000 l       *ABS*	00000000 VIC_BASE
00000000 l       *ABS*	00000000 VIC_IRQST
00000004 l       *ABS*	00000000 VIC_FIQST
00000008 l       *ABS*	00000000 VIC_RAW
0000000c l       *ABS*	00000000 VIC_SELECT
00000010 l       *ABS*	00000000 VIC_ENABLE
00000014 l       *ABS*	00000000 VIC_DISABLE
00000018 l       *ABS*	00000000 VIC_SOFT_SET
0000001c l       *ABS*	00000000 VIC_SOFT_CLR
00000020 l       *ABS*	00000000 VIC_PROTECT
00000030 l       *ABS*	00000000 VIC_VADDR
00000034 l       *ABS*	00000000 VIC_DEFADDR
00000100 l       *ABS*	00000000 VIC_ADDR
00000100 l       *ABS*	00000000 VIC_ADDR0
00000104 l       *ABS*	00000000 VIC_ADDR1
00000108 l       *ABS*	00000000 VIC_ADDR2
0000010c l       *ABS*	00000000 VIC_ADDR3
00000110 l       *ABS*	00000000 VIC_ADDR4
00000114 l       *ABS*	00000000 VIC_ADDR5
00000118 l       *ABS*	00000000 VIC_ADDR6
0000011c l       *ABS*	00000000 VIC_ADDR7
00000120 l       *ABS*	00000000 VIC_ADDR8
00000124 l       *ABS*	00000000 VIC_ADDR9
00000128 l       *ABS*	00000000 VIC_ADDR10
0000012c l       *ABS*	00000000 VIC_ADDR11
00000130 l       *ABS*	00000000 VIC_ADDR12
00000134 l       *ABS*	00000000 VIC_ADDR13
00000138 l       *ABS*	00000000 VIC_ADDR14
0000013c l       *ABS*	00000000 VIC_ADDR15
00000200 l       *ABS*	00000000 VIC_CNTL
00000200 l       *ABS*	00000000 VIC_CNTL0
00000204 l       *ABS*	00000000 VIC_CNTL1
00000208 l       *ABS*	00000000 VIC_CNTL2
0000020c l       *ABS*	00000000 VIC_CNTL3
00000210 l       *ABS*	00000000 VIC_CNTL4
00000214 l       *ABS*	00000000 VIC_CNTL5
00000218 l       *ABS*	00000000 VIC_CNTL6
0000021c l       *ABS*	00000000 VIC_CNTL7
00000220 l       *ABS*	00000000 VIC_CNTL8
00000224 l       *ABS*	00000000 VIC_CNTL9
00000228 l       *ABS*	00000000 VIC_CNTL10
0000022c l       *ABS*	00000000 VIC_CNTL11
00000230 l       *ABS*	00000000 VIC_CNTL12
00000234 l       *ABS*	00000000 VIC_CNTL13
00000238 l       *ABS*	00000000 VIC_CNTL14
0000023c l       *ABS*	00000000 VIC_CNTL15
00000000 l       *ABS*	00000000 WDOG_INT
00000001 l       *ABS*	00000000 SOFTWARE_INT
00000002 l       *ABS*	00000000 COMM_RX_INT
00000003 l       *ABS*	00000000 COMM_TX_INT
00000004 l       *ABS*	00000000 TIMER1_INT
00000005 l       *ABS*	00000000 TIMER2_INT
00000006 l       *ABS*	00000000 CC_RDY_INT
00000007 l       *ABS*	00000000 CC_RPE_INT
00000008 l       *ABS*	00000000 CC_RFE_INT
00000009 l       *ABS*	00000000 CC_TFL_INT
0000000a l       *ABS*	00000000 CC_TOV_INT
0000000b l       *ABS*	00000000 CC_TMT_INT
0000000c l       *ABS*	00000000 DMA_DONE_INT
0000000d l       *ABS*	00000000 DMA_ERR_INT
0000000e l       *ABS*	00000000 DMA_TO_INT
0000000f l       *ABS*	00000000 RTR_DIAG_INT
00000010 l       *ABS*	00000000 RTR_DUMP_INT
00000011 l       *ABS*	00000000 RTR_ERR_INT
00000012 l       *ABS*	00000000 CPU_INT
00000013 l       *ABS*	00000000 ETH_TX_INT
00000014 l       *ABS*	00000000 ETH_RX_INT
00000015 l       *ABS*	00000000 ETH_PHY_INT
00000016 l       *ABS*	00000000 SLOW_CLK_INT
00000017 l       *ABS*	00000000 CC_TNF_INT
00000018 l       *ABS*	00000000 CC_MC_INT
00000019 l       *ABS*	00000000 CC_P2P_INT
0000001a l       *ABS*	00000000 CC_NN_INT
0000001b l       *ABS*	00000000 CC_FR_INT
0000001c l       *ABS*	00000000 INT0_INT
0000001d l       *ABS*	00000000 INT1_INT
0000001e l       *ABS*	00000000 GPIO8_INT
0000001f l       *ABS*	00000000 GPIO9_INT
30000000 l       *ABS*	00000000 DMA_BASE_UNBUF
40000000 l       *ABS*	00000000 DMA_BASE_BUF
40000000 l       *ABS*	00000000 DMA_BASE
00000004 l       *ABS*	00000000 DMA_ADRS
00000008 l       *ABS*	00000000 DMA_ADRT
0000000c l       *ABS*	00000000 DMA_DESC
00000010 l       *ABS*	00000000 DMA_CTRL
00000014 l       *ABS*	00000000 DMA_STAT
00000018 l       *ABS*	00000000 DMA_GCTL
0000001c l       *ABS*	00000000 DMA_CRCC
00000020 l       *ABS*	00000000 DMA_CRCR
00000024 l       *ABS*	00000000 DMA_TMTV
00000028 l       *ABS*	00000000 DMA_SCTL
00000040 l       *ABS*	00000000 DMA_STAT0
00000044 l       *ABS*	00000000 DMA_STAT1
00000048 l       *ABS*	00000000 DMA_STAT2
0000004c l       *ABS*	00000000 DMA_STAT3
00000050 l       *ABS*	00000000 DMA_STAT4
00000054 l       *ABS*	00000000 DMA_STAT5
00000058 l       *ABS*	00000000 DMA_STAT6
0000005c l       *ABS*	00000000 DMA_STAT7
00000104 l       *ABS*	00000000 DMA_AD2S
00000108 l       *ABS*	00000000 DMA_AD2T
0000010c l       *ABS*	00000000 DMA_DES2
00000180 l       *ABS*	00000000 DMA_CRCT
f0000000 l       *ABS*	00000000 PL340_BASE_UNBUF
e0000000 l       *ABS*	00000000 PL340_BASE_BUF
e0000000 l       *ABS*	00000000 PL340_BASE
00000000 l       *ABS*	00000000 MC_STAT
00000004 l       *ABS*	00000000 MC_CMD
00000008 l       *ABS*	00000000 MC_DIRC
0000000c l       *ABS*	00000000 MC_MCFG
00000010 l       *ABS*	00000000 MC_REFP
00000014 l       *ABS*	00000000 MC_CASL
00000018 l       *ABS*	00000000 MC_DQSS
0000001c l       *ABS*	00000000 MC_MRD
00000020 l       *ABS*	00000000 MC_RAS
00000024 l       *ABS*	00000000 MC_RC
00000028 l       *ABS*	00000000 MC_RCD
0000002c l       *ABS*	00000000 MC_RFC
00000030 l       *ABS*	00000000 MC_RP
00000034 l       *ABS*	00000000 MC_RRD
00000038 l       *ABS*	00000000 MC_WR
0000003c l       *ABS*	00000000 MC_WTR
00000040 l       *ABS*	00000000 MC_XP
00000044 l       *ABS*	00000000 MC_XSR
00000048 l       *ABS*	00000000 MC_ESR
0000004c l       *ABS*	00000000 MC_MCFG2
00000050 l       *ABS*	00000000 MC_MCFG3
00000100 l       *ABS*	00000000 MC_QOS0
00000104 l       *ABS*	00000000 MC_QOS1
00000108 l       *ABS*	00000000 MC_QOS2
0000010c l       *ABS*	00000000 MC_QOS3
00000110 l       *ABS*	00000000 MC_QOS4
00000114 l       *ABS*	00000000 MC_QOS5
00000118 l       *ABS*	00000000 MC_QOS6
0000011c l       *ABS*	00000000 MC_QOS7
00000120 l       *ABS*	00000000 MC_QOS8
00000124 l       *ABS*	00000000 MC_QOS9
00000128 l       *ABS*	00000000 MC_QOS10
0000012c l       *ABS*	00000000 MC_QOS11
00000130 l       *ABS*	00000000 MC_QOS12
00000134 l       *ABS*	00000000 MC_QOS13
00000138 l       *ABS*	00000000 MC_QOS14
0000013c l       *ABS*	00000000 MC_QOS15
00000200 l       *ABS*	00000000 MC_CCFG0
00000204 l       *ABS*	00000000 MC_CCFG1
00000208 l       *ABS*	00000000 MC_CCFG2
0000020c l       *ABS*	00000000 MC_CCFG3
00000300 l       *ABS*	00000000 DLL_STATUS
00000304 l       *ABS*	00000000 DLL_CONFIG0
00000308 l       *ABS*	00000000 DLL_CONFIG1
f1000000 l       *ABS*	00000000 RTR_BASE_UNBUF
e1000000 l       *ABS*	00000000 RTR_BASE_BUF
e1000000 l       *ABS*	00000000 RTR_BASE
00000000 l       *ABS*	00000000 RTR_CONTROL
00000004 l       *ABS*	00000000 RTR_STATUS
00000008 l       *ABS*	00000000 RTR_EHDR
0000000c l       *ABS*	00000000 RTR_EKEY
00000010 l       *ABS*	00000000 RTR_EDAT
00000014 l       *ABS*	00000000 RTR_ESTAT
00000018 l       *ABS*	00000000 RTR_DHDR
0000001c l       *ABS*	00000000 RTR_DKEY
00000020 l       *ABS*	00000000 RTR_DDAT
00000024 l       *ABS*	00000000 RTR_DLINK
00000028 l       *ABS*	00000000 RTR_DSTAT
0000002c l       *ABS*	00000000 RTR_DGEN
00000200 l       *ABS*	00000000 RTR_DGF0
00000204 l       *ABS*	00000000 RTR_DGF1
00000208 l       *ABS*	00000000 RTR_DGF2
0000020c l       *ABS*	00000000 RTR_DGF3
00000210 l       *ABS*	00000000 RTR_DGF4
00000214 l       *ABS*	00000000 RTR_DGF5
00000218 l       *ABS*	00000000 RTR_DGF6
0000021c l       *ABS*	00000000 RTR_DGF7
00000220 l       *ABS*	00000000 RTR_DGF8
00000224 l       *ABS*	00000000 RTR_DGF9
00000228 l       *ABS*	00000000 RTR_DGF10
0000022c l       *ABS*	00000000 RTR_DGF11
00000230 l       *ABS*	00000000 RTR_DGF12
00000234 l       *ABS*	00000000 RTR_DGF13
00000238 l       *ABS*	00000000 RTR_DGF14
0000023c l       *ABS*	00000000 RTR_DGF15
00000300 l       *ABS*	00000000 RTR_DGC0
00000304 l       *ABS*	00000000 RTR_DGC1
00000308 l       *ABS*	00000000 RTR_DGC2
0000030c l       *ABS*	00000000 RTR_DGC3
00000310 l       *ABS*	00000000 RTR_DGC4
00000314 l       *ABS*	00000000 RTR_DGC5
00000318 l       *ABS*	00000000 RTR_DGC6
0000031c l       *ABS*	00000000 RTR_DGC7
00000320 l       *ABS*	00000000 RTR_DGC8
00000324 l       *ABS*	00000000 RTR_DGC9
00000328 l       *ABS*	00000000 RTR_DGC10
0000032c l       *ABS*	00000000 RTR_DGC11
00000330 l       *ABS*	00000000 RTR_DGC12
00000334 l       *ABS*	00000000 RTR_DGC13
00000338 l       *ABS*	00000000 RTR_DGC14
0000033c l       *ABS*	00000000 RTR_DGC15
00000f00 l       *ABS*	00000000 RTR_TST1
00000f04 l       *ABS*	00000000 RTR_TST2
00002000 l       *ABS*	00000000 P2P_TABLE_SIZE
00000400 l       *ABS*	00000000 MC_TABLE_SIZE
00000018 l       *ABS*	00000000 MC_RAM_WIDTH
00ffffff l       *ABS*	00000000 MC_RAM_MASK
00000008 l       *ABS*	00000000 P2P_EPW
00000003 l       *ABS*	00000000 P2P_LOG_EPW
00000007 l       *ABS*	00000000 P2P_EMASK
00000003 l       *ABS*	00000000 P2P_BPE
00000007 l       *ABS*	00000000 P2P_BMASK
00db6db6 l       *ABS*	00000000 P2P_INIT
e1004000 l       *ABS*	00000000 RTR_MCRAM_BASE
e1005000 l       *ABS*	00000000 RTR_MCRAM_TOP
e1008000 l       *ABS*	00000000 RTR_MCKEY_BASE
e1009000 l       *ABS*	00000000 RTR_MCKEY_TOP
e100c000 l       *ABS*	00000000 RTR_MCMASK_BASE
e100d000 l       *ABS*	00000000 RTR_MCMASK_TOP
e1010000 l       *ABS*	00000000 RTR_P2P_BASE
e1018000 l       *ABS*	00000000 RTR_P2P_TOP
00000020 l       *ABS*	00000000 MC_CAM_WIDTH
f2000000 l       *ABS*	00000000 SYSCTL_BASE_UNBUF
e2000000 l       *ABS*	00000000 SYSCTL_BASE_BUF
e2000000 l       *ABS*	00000000 SYSCTL_BASE
5ec00000 l       *ABS*	00000000 SC_CODE
59111012 l       *ABS*	00000000 CHIP_ID_CODE
00000000 l       *ABS*	00000000 SC_CHIP_ID
00000004 l       *ABS*	00000000 SC_CPU_DIS
00000008 l       *ABS*	00000000 SC_SET_IRQ
0000000c l       *ABS*	00000000 SC_CLR_IRQ
00000010 l       *ABS*	00000000 SC_SET_OK
00000010 l       *ABS*	00000000 SC_CPU_OK
00000014 l       *ABS*	00000000 SC_CLR_OK
00000018 l       *ABS*	00000000 SC_SOFT_RST_L
0000001c l       *ABS*	00000000 SC_HARD_RST_L
00000020 l       *ABS*	00000000 SC_SUBS_RST_L
00000024 l       *ABS*	00000000 SC_SOFT_RST_P
00000028 l       *ABS*	00000000 SC_HARD_RST_P
0000002c l       *ABS*	00000000 SC_SUBS_RST_P
00000030 l       *ABS*	00000000 SC_RST_CODE
00000034 l       *ABS*	00000000 SC_MON_ID
00000038 l       *ABS*	00000000 SC_MISC_CTRL
0000003c l       *ABS*	00000000 GPIO_RES
00000040 l       *ABS*	00000000 GPIO_PORT
00000044 l       *ABS*	00000000 GPIO_DIR
00000048 l       *ABS*	00000000 GPIO_SET
0000004c l       *ABS*	00000000 GPIO_CLR
00000048 l       *ABS*	00000000 GPIO_READ
00000050 l       *ABS*	00000000 SC_PLL1
00000054 l       *ABS*	00000000 SC_PLL2
00000058 l       *ABS*	00000000 SC_FLAG
00000058 l       *ABS*	00000000 SC_SETFLAG
0000005c l       *ABS*	00000000 SC_CLRFLAG
00000060 l       *ABS*	00000000 SC_CLKMUX
00000064 l       *ABS*	00000000 SC_SLEEP
00000068 l       *ABS*	00000000 SC_TS0
0000006c l       *ABS*	00000000 SC_TS1
00000070 l       *ABS*	00000000 SC_TS2
00000080 l       *ABS*	00000000 SC_ARB0
00000100 l       *ABS*	00000000 SC_TAS0
00000180 l       *ABS*	00000000 SC_TAC0
00000200 l       *ABS*	00000000 SC_LINK_DIS
00000000 l       *ABS*	00000000 RST_POR
00000001 l       *ABS*	00000000 RST_WDT
00000002 l       *ABS*	00000000 RST_USER
00000003 l       *ABS*	00000000 RST_SW
00000004 l       *ABS*	00000000 RST_WDI
f3000000 l       *ABS*	00000000 WDOG_BASE_UNBUF
e3000000 l       *ABS*	00000000 WDOG_BASE_BUF
e3000000 l       *ABS*	00000000 WDOG_BASE
00000000 l       *ABS*	00000000 WD_LOAD
00000004 l       *ABS*	00000000 WD_COUNT
00000008 l       *ABS*	00000000 WD_CTRL
0000000c l       *ABS*	00000000 WD_INTCLR
00000010 l       *ABS*	00000000 WD_RAWINT
00000014 l       *ABS*	00000000 WD_MSKINT
00000c00 l       *ABS*	00000000 WD_LOCK
1acce551 l       *ABS*	00000000 WD_CODE
00000001 l       *ABS*	00000000 WD_INT_B
00000002 l       *ABS*	00000000 WD_RST_B
f4000000 l       *ABS*	00000000 ETH_BASE_UNBUF
e4000000 l       *ABS*	00000000 ETH_BASE_BUF
e4000000 l       *ABS*	00000000 ETH_BASE
e4000000 l       *ABS*	00000000 ETH_TX_BASE
00000600 l       *ABS*	00000000 ETH_TX_SIZE
e4000600 l       *ABS*	00000000 ETH_TX_TOP
e4004000 l       *ABS*	00000000 ETH_RX_BASE
00000c00 l       *ABS*	00000000 ETH_RX_SIZE
e4004c00 l       *ABS*	00000000 ETH_RX_TOP
e4008000 l       *ABS*	00000000 ETH_RX_DESC_RAM
e400c000 l       *ABS*	00000000 ETH_REGS
00000000 l       *ABS*	00000000 ETH_CONTROL
00000004 l       *ABS*	00000000 ETH_STATUS
00000008 l       *ABS*	00000000 ETH_TX_LEN
0000000c l       *ABS*	00000000 ETH_TX_CMD
00000010 l       *ABS*	00000000 ETH_RX_CMD
00000014 l       *ABS*	00000000 ETH_MAC_LO
00000018 l       *ABS*	00000000 ETH_MAC_HI
0000001c l       *ABS*	00000000 ETH_PHY_CTRL
00000020 l       *ABS*	00000000 ETH_INT_CLR
00000024 l       *ABS*	00000000 ETH_RX_BUF_RP
0000002c l       *ABS*	00000000 ETH_RX_DESC_RP
00000001 l       *ABS*	00000000 ETH_TX_CLR
00000010 l       *ABS*	00000000 ETH_RX_CLR
00000001 l       *ABS*	00000000 PHY_CTRL_NRST
00000002 l       *ABS*	00000000 PHY_CTRL_DIN
00000004 l       *ABS*	00000000 PHY_CTRL_DOUT
00000008 l       *ABS*	00000000 PHY_CTRL_OE
00000010 l       *ABS*	00000000 PHY_CTRL_CLK
00000000 l       *ABS*	00000000 PKT_MC
00400000 l       *ABS*	00000000 PKT_P2P
00800000 l       *ABS*	00000000 PKT_NN
00a00000 l       *ABS*	00000000 PKT_NND
00c00000 l       *ABS*	00000000 PKT_FR
00020000 l       *ABS*	00000000 PKT_PL
00020000 l       *ABS*	00000000 PKT_MC_PL
00420000 l       *ABS*	00000000 PKT_P2P_PL
00820000 l       *ABS*	00000000 PKT_NN_PL
00c20000 l       *ABS*	00000000 PKT_FR_PL
0000000a l       *ABS*	00000000 CLK_XTAL_MHZ
0007011a l       *ABS*	00000000 PLL_260
0007011e l       *ABS*	00000000 PLL_300
00070121 l       *ABS*	00000000 PLL_330
00070128 l       *ABS*	00000000 PLL_400
00000050 l       *ABS*	00000000 PLL_LOCK_TIME
809488a5 l       *ABS*	00000000 PLL_CLK_SEL
00000020 l       *ABS*	00000000 SERIAL_NCS
00000010 l       *ABS*	00000000 SERIAL_CLK
00000008 l       *ABS*	00000000 SERIAL_SI
00000004 l       *ABS*	00000000 SERIAL_SO
00000038 l       *ABS*	00000000 SERIAL_OE
80000000 l       *ABS*	00000000 SDRAM_TQ
40000000 l       *ABS*	00000000 SDRAM_DPD
20000000 l       *ABS*	00000000 SDRAM_HERE
00000001 l       *ABS*	00000000 LED_0
00000010 l       *ABS*	00000000 MODE_USER
00000011 l       *ABS*	00000000 MODE_FIQ
00000012 l       *ABS*	00000000 MODE_IRQ
00000013 l       *ABS*	00000000 MODE_SVC
00000017 l       *ABS*	00000000 MODE_ABT
0000001b l       *ABS*	00000000 MODE_UND
0000001f l       *ABS*	00000000 MODE_SYS
00000020 l       *ABS*	00000000 THUMB_BIT
00000080 l       *ABS*	00000000 IMASK_IRQ
00000040 l       *ABS*	00000000 IMASK_FIQ
000000c0 l       *ABS*	00000000 IMASK_ALL
00000001 l       *ABS*	00000000 SARK_EVENT
00000180 l       *ABS*	00000000 SVC_STACK
00000100 l       *ABS*	00000000 IRQ_STACK
00000100 l       *ABS*	00000000 FIQ_STACK
00000004 l       *ABS*	00000000 NUM_SDP_MSGS
0000000f l       *ABS*	00000000 SARK_SLOT
00000010 l       *ABS*	00000000 INIT_EVENTS
deaddead l       *ABS*	00000000 DEAD_WORD
00000001 l       *ABS*	00000000 APLX_ACOPY
00000002 l       *ABS*	00000000 APLX_RCOPY
00000003 l       *ABS*	00000000 APLX_FILL
00000004 l       *ABS*	00000000 APLX_EXEC
000000ff l       *ABS*	00000000 APLX_END
00000010 l       *ABS*	00000000 APLX_ENTRY_SIZE
00000040 l       *ABS*	00000000 APLX_BUF_SIZE
00007fc0 l       *ABS*	00000000 APLX_BUFFER
000000ff l       *ABS*	00000000 TAG_NONE
00000000 l       *ABS*	00000000 TAG_HOST
00000001 l       *ABS*	00000000 RTR_ALLOC_FIRST
00000400 l       *ABS*	00000000 RTR_ALLOC_LAST
000003ff l       *ABS*	00000000 RTR_ALLOC_MAX
00000001 l       *ABS*	00000000 ALLOC_LOCK
00000002 l       *ABS*	00000000 ALLOC_ID
00000005 l       *ABS*	00000000 A_LOCK_SEMA
00000001 l       *ABS*	00000000 A_RTE_RESET
00000002 l       *ABS*	00000000 A_RTE_UNDEF
00000003 l       *ABS*	00000000 A_RTE_SVC
00000004 l       *ABS*	00000000 A_RTE_PABT
00000005 l       *ABS*	00000000 A_RTE_DABT
00000006 l       *ABS*	00000000 A_RTE_IRQ
00000007 l       *ABS*	00000000 A_RTE_FIQ
00000008 l       *ABS*	00000000 A_RTE_VIC
00000002 l       *ABS*	00000000 A_STATE_RTE
00000006 l       *ABS*	00000000 EVENT_COUNT
00000000 l       *ABS*	00000000 CMD_VER
00000001 l       *ABS*	00000000 CMD_RUN
00000002 l       *ABS*	00000000 CMD_READ
00000003 l       *ABS*	00000000 CMD_WRITE
00000004 l       *ABS*	00000000 CMD_APLX
00000005 l       *ABS*	00000000 CMD_FILL
00000010 l       *ABS*	00000000 CMD_REMAP
00000011 l       *ABS*	00000000 CMD_LINK_READ
00000012 l       *ABS*	00000000 CMD_LINK_WRITE
00000013 l       *ABS*	00000000 CMD_AR
00000014 l       *ABS*	00000000 CMD_NNP
00000015 l       *ABS*	00000000 CMD_P2PC
00000016 l       *ABS*	00000000 CMD_SIG
00000017 l       *ABS*	00000000 CMD_FFD
00000018 l       *ABS*	00000000 CMD_AS
00000019 l       *ABS*	00000000 CMD_LED
0000001a l       *ABS*	00000000 CMD_IPTAG
0000001b l       *ABS*	00000000 CMD_SROM
0000001c l       *ABS*	00000000 CMD_ALLOC
0000001d l       *ABS*	00000000 CMD_RTR
00000040 l       *ABS*	00000000 CMD_TUBE
00000080 l       *ABS*	00000000 RC_OK
00000081 l       *ABS*	00000000 RC_LEN
00000082 l       *ABS*	00000000 RC_SUM
00000083 l       *ABS*	00000000 RC_CMD
00000084 l       *ABS*	00000000 RC_ARG
00000085 l       *ABS*	00000000 RC_PORT
00000086 l       *ABS*	00000000 RC_TIMEOUT
00000087 l       *ABS*	00000000 RC_ROUTE
00000088 l       *ABS*	00000000 RC_CPU
00000089 l       *ABS*	00000000 RC_DEAD
0000008a l       *ABS*	00000000 RC_BUF
0000008b l       *ABS*	00000000 RC_P2P_NOREPLY
0000008c l       *ABS*	00000000 RC_P2P_REJECT
0000008d l       *ABS*	00000000 RC_P2P_BUSY
0000008e l       *ABS*	00000000 RC_P2P_TIMEOUT
0000008f l       *ABS*	00000000 RC_PKT_TX
00000000 l       *ABS*	00000000 TYPE_BYTE
00000001 l       *ABS*	00000000 TYPE_HALF
00000002 l       *ABS*	00000000 TYPE_WORD
00000005 l       *ABS*	00000000 PORT_SHIFT
000000e0 l       *ABS*	00000000 PORT_MASK
0000001f l       *ABS*	00000000 CPU_MASK
000000ff l       *ABS*	00000000 PORT_ETH
00000100 l       *ABS*	00000000 SDP_BUF_SIZE
00000080 l       *ABS*	00000000 VCPU_SIZE
0000002c l       *ABS*	00000000 VCPU_RT_CODE
0000002d l       *ABS*	00000000 VCPU_CPU_FLAGS
0000002e l       *ABS*	00000000 VCPU_CPU_STATE
0000002f l       *ABS*	00000000 VCPU_APP_ID
0000001c l       *ABS*	00000000 SARK_MSG_INT
0000001d l       *ABS*	00000000 SARK_SIG_INT
00000000 l       *ABS*	00000000 SARK_VIRT_CPU
00000008 l       *ABS*	00000000 SARK_RANDOM
00000030 l       *ABS*	00000000 SARK_CPU_CLK
00000020 l       *ABS*	00000000 SV_SSIZE
00000060 l       *ABS*	00000000 SV_USIZE
00000080 l       *ABS*	00000000 SV_ISIZE
00000020 l       *ABS*	00000000 SV_VSIZE
00000040 l       *ABS*	00000000 SV_RSIZE
00001000 l       *ABS*	00000000 SV_SIZE
e5007fe0 l       *ABS*	00000000 SV_SROM
e5007f80 l       *ABS*	00000000 SV_UBASE
e5007f00 l       *ABS*	00000000 SV_IBASE
e5007f00 l       *ABS*	00000000 SV_SV
00000100 l       *ABS*	00000000 SYS_BOOT
e5007000 l       *ABS*	00000000 SYS_USER_TOP
e5000100 l       *ABS*	00000000 SYS_USER_BASE
e5007ee0 l       *ABS*	00000000 SV_VECTORS
e5007ea0 l       *ABS*	00000000 SV_RANDOM
e5007000 l       *ABS*	00000000 SV_VCPU
e5007900 l       *ABS*	00000000 SV_SPARE
000005a0 l       *ABS*	00000000 SPARE_SIZE
e5007fe0 l       *ABS*	00000000 SROM_FLAG_BASE
e5007f80 l       *ABS*	00000000 STATUS_MAP_BASE
e5007ee0 l       *ABS*	00000000 RST_BLOCK_BASE
00008000 l       *ABS*	00000000 SRF_PRESENT
000000f0 l       *ABS*	00000000 SRF_HW_VER
00000008 l       *ABS*	00000000 SRF_PHY_INIT
00000004 l       *ABS*	00000000 SRF_PHY_RST
00000002 l       *ABS*	00000000 SRF_PHY_WAIT
00000001 l       *ABS*	00000000 SRF_ETH
00000000 l       *ABS*	00000000 SRF_NONE
00000020 l       RO_DATA	00000000 reset_vec
00000004 l       RO_DATA	00000000 undef
00000024 l       RO_DATA	00000000 undef_vec
00000028 l       RO_DATA	00000000 svc_vec
0000002c l       RO_DATA	00000000 pabt_vec
00000030 l       RO_DATA	00000000 dabt_vec
0000003c l       RO_DATA	00000000 fiq_vec
00000078 l       RO_DATA	00000000 reset_entry
000000d8 l       RO_DATA	00000000 undef_error
000000e0 l       RO_DATA	00000000 svc_error
000000e8 l       RO_DATA	00000000 pabt_error
000000f0 l       RO_DATA	00000000 dabt_error
00000034 l       RO_DATA	00000000 aplx_proc
00000038 l       RO_DATA	00000000 irq_vec
000000f8 l       RO_DATA	00000000 irq_error
00000100 l       RO_DATA	00000000 fiq_error
00000040 l       RO_DATA	00000000 svc_stack
00000042 l       RO_DATA	00000000 irq_stack
00000044 l       RO_DATA	00000000 fiq_stack
00000046 l       RO_DATA	00000000 stack_size
00000048 l       RO_DATA	00000000 code_top
0000004c l       RO_DATA	00000000 heap_base
00000050 l       RO_DATA	00000000 stack_top
00000054 l       RO_DATA	00000000 stack_fill
00000058 l       RO_DATA	00000000 num_msgs
00000059 l       RO_DATA	00000000 sark_slot
0000005a l       RO_DATA	00000000 num_events
0000005b l       RO_DATA	00000000 api
0000005c l       RO_DATA	00000000 app_id
0000005d l       RO_DATA	00000000 app_flags
0000005e l       RO_DATA	00000000 __PAD
00000060 l       RO_DATA	00000000 event_vec
000000d0 l       RO_DATA	00000000 reset_error
00000114 l       RO_DATA	00000000 exc_error
00000138 l       RO_DATA	00000000 cc_error
000001dc l       RO_DATA	00000000 lg1
00000218 l       RO_DATA	00000000 ws1
00000278 l       RO_DATA	00000000 wc2
00000260 l       RO_DATA	00000000 wc1
0000032c l       RO_DATA	00000000 aplx_buffer
00000330 l       RO_DATA	00000000 aplx_loader
0000031c l       RO_DATA	00000000 aplx_l0
00000348 l       RO_DATA	00000000 aplx_copy
00000344 l       RO_DATA	00000000 aplx_rcopy
00000356 l       RO_DATA	00000000 aplx_fill
00000366 l       RO_DATA	00000000 aplx_exec
0000035c l       RO_DATA	00000000 aplx_l1
00000000 l    df *ABS*	00000000 sark_base.c
00000000 l    df *ABS*	00000000 sark_event.c
00000000 l    df *ABS*	00000000 sark_timer.c
00000000 l    df *ABS*	00000000 sark_hw.c
00000000 l    df *ABS*	00000000 sark_isr.c
00000000 l    df *ABS*	00000000 sark_alloc.c
00000000 l    df *ABS*	00000000 sark_io.c
00000c0c l     F RO_DATA	00000040 io_buf_init
00000d40 l     F RO_DATA	000000c2 io_put_fixed
00400030 l     O ZI_DATA	00000004 io_msg
00001107 l     O RO_DATA	00000011 hex
00400034 l     O ZI_DATA	00000004 io_buf
00400038 l     O ZI_DATA	00000004 buf_ptr
0040003c l     O ZI_DATA	00000004 sp_ptr
00000000 l    df *ABS*	00000000 sark_pkt.c
00000000 l    df *ABS*	00000000 
00000000 l    df *ABS*	00000000 interrupt.c
00000000 l    df *ABS*	00000000 sark_build.c
00000000 l    df *ABS*	00000000 
00000040 l       *ABS*	00000000 RO_FROM
00000010 l       *ABS*	00000000 APLX_ENTRY
00001148 l       *ABS*	00000000 RW_FROM
00000000 l       *UND*	00000000 __deregister_frame_info
00000000 l       *UND*	00000000 _ITM_registerTMCloneTable
00400000 l       *ABS*	00000000 DTCM_BASE
00400000 l       *ABS*	00000000 RW_BASE
00000000 l       *ABS*	00000000 RW_LENGTH
00000040 l       *ABS*	00000000 APLX_SIZE
00000000 l       *UND*	00000000 _ITM_deregisterTMCloneTable
00400000 l       *ABS*	00000000 ZI_BASE
00000000 l       *ABS*	00000000 RO_BASE
00000000 l       *ABS*	00000000 ITCM_BASE
00000000 l       *UND*	00000000 _Jv_RegisterClasses
00000000 l       *UND*	00000000 __register_frame_info
00000118 l       *ABS*	00000000 ZI_LENGTH
000010b8 l     F RO_DATA	00000008 __sark_vic_set_from_arm
000001c8 g     F RO_DATA	00000000 sark_lock_get
000005f4  w    F RO_DATA	00000010 sark_pre_main
000004a0 g     F RO_DATA	00000034 sark_shmsg_get
00000800 g       *ABS*	00000000 STACK_SIZE
00000302 g     F RO_DATA	00000000 sark_bx
00000238 g     F RO_DATA	00000000 sark_msg_cpy
000009a8 g     F RO_DATA	0000003c event_alloc
00000430 g     F RO_DATA	0000001e sark_block_init
00000aec g     F RO_DATA	00000028 sark_fiq_han
00000480 g     F RO_DATA	00000020 sark_msg_free
000003ec g     F RO_DATA	00000024 c_main
000007f0 g     F RO_DATA	00000174 sark_int
00000a7c g     F RO_DATA	00000070 sark_led_set
000002cc g     F RO_DATA	00000000 sark_int_han
000003b4 g     F RO_DATA	00000038 timer_setup
000007dc g     F RO_DATA	00000012 sark_wait
000001b8 g     F RO_DATA	00000000 spin1_mode_restore
000007cc g     F RO_DATA	00000010 sark_cmd_fill
000009e4 g     F RO_DATA	00000050 sark_vic_init
0000016c g     F RO_DATA	00000000 cpu_shutdown
000001b8 g     F RO_DATA	00000000 cpu_int_restore
00410000 g       *ABS*	00000000 STACK_TOP
00400118 g       ZI_DATA	00000000 HEAP_BASE
00000b14 g     F RO_DATA	000000c8 sark_xalloc
00000304 g     F RO_DATA	00000000 __gnu_thumb1_case_uqi
000004d4 g     F RO_DATA	00000024 sark_shmsg_free
0000012c g       RO_DATA	00000000 rt_error
00000420 g     F RO_DATA	00000010 sark_cpu_state
00000604  w    F RO_DATA	00000010 sark_post_main
00000000 g       RO_DATA	00000000 cpu_reset
0000029c g     F RO_DATA	00000000 sark_div10
00000108 g       RO_DATA	00000000 vic_error
000010e4 g     O RO_DATA	00000010 build_name
00000300  w    F RO_DATA	00000000 sark_config
00000964 g     F RO_DATA	0000002c event_pause
000010f4 g     O RO_DATA	00000004 build_date
000001ec g     F RO_DATA	00000000 sark_lock_free
00000bdc g     F RO_DATA	00000018 sark_alloc
0000036c g     F RO_DATA	00000048 timer_int_han
00000190 g     F RO_DATA	00000000 cpu_init_mode
00000248 g     F RO_DATA	00000000 sark_word_cpy
0000017c g     F RO_DATA	00000000 cpu_sleep
00400044 g     O ZI_DATA	0000003c sark
00000614 g     F RO_DATA	000000a8 sark_msg_send
000001c0 g     F RO_DATA	00000000 spin1_wfi
000006bc g     F RO_DATA	00000040 sark_cmd_ver
000001c0 g     F RO_DATA	00000000 cpu_wfi
00000990 g     F RO_DATA	00000018 event_stop
000001a8 g     F RO_DATA	00000000 cpu_int_disable
00000a34 g     F RO_DATA	00000048 sark_vic_set
00000bf4 g     F RO_DATA	00000018 sark_heap_init
00400080 g     O ZI_DATA	00000098 event
00000762 g     F RO_DATA	0000006a sark_cmd_write
000004f8  w    F RO_DATA	000000fc sark_init
00000414  w    F RO_DATA	0000000c rte_handler
00000314 g     F RO_DATA	00000000 sark_aplx
00000e04 g     F RO_DATA	000002b4 io_printf
00000214 g     F RO_DATA	00000000 sark_word_set
00400040 g     O ZI_DATA	00000004 ticks
000002fc g     F RO_DATA	00000000 null_int_han
00000410  w    F RO_DATA	00000002 schedule_sysmode
00000200 g     F RO_DATA	00000000 sark_str_cpy
00400000  w    O ZI_DATA	00000030 callback
00000c4c g     F RO_DATA	000000f4 io_put_char
000001a8 g     F RO_DATA	00000000 spin1_int_disable
000006fc g     F RO_DATA	00000066 sark_cmd_read
00001118 g       *ABS*	00000000 RO_LENGTH
00000450 g     F RO_DATA	00000030 sark_msg_get



Disassembly of section RO_DATA:

00000000 <cpu_reset>:
       0:	e59ff018 	ldr	pc, [pc, #24]	; 20 <reset_vec>

00000004 <undef>:
       4:	e59ff018 	ldr	pc, [pc, #24]	; 24 <undef_vec>
       8:	e59ff018 	ldr	pc, [pc, #24]	; 28 <svc_vec>
       c:	e59ff018 	ldr	pc, [pc, #24]	; 2c <pabt_vec>
      10:	e59ff018 	ldr	pc, [pc, #24]	; 30 <dabt_vec>
      14:	ebfffffa 	bl	4 <undef>
      18:	e51ffff0 	ldr	pc, [pc, #-4080]	; fffff030 <ROM_TOP+0x9ff7030>
      1c:	e59ff018 	ldr	pc, [pc, #24]	; 3c <fiq_vec>

00000020 <reset_vec>:
      20:	00000078 	.word	0x00000078

00000024 <undef_vec>:
      24:	000000d8 	.word	0x000000d8

00000028 <svc_vec>:
      28:	000000e0 	.word	0x000000e0

0000002c <pabt_vec>:
      2c:	000000e8 	.word	0x000000e8

00000030 <dabt_vec>:
      30:	000000f0 	.word	0x000000f0

00000034 <aplx_proc>:
      34:	00000315 	.word	0x00000315

00000038 <irq_vec>:
      38:	000000f8 	.word	0x000000f8

0000003c <fiq_vec>:
      3c:	00000100 	.word	0x00000100

00000040 <svc_stack>:
      40:	0060      	.short	0x0060

00000042 <irq_stack>:
      42:	0040      	.short	0x0040

00000044 <fiq_stack>:
      44:	0040      	.short	0x0040

00000046 <stack_size>:
      46:	0800      	.short	0x0800

00000048 <code_top>:
      48:	00001118 	.word	0x00001118

0000004c <heap_base>:
      4c:	00400118 	.word	0x00400118

00000050 <stack_top>:
      50:	00410000 	.word	0x00410000

00000054 <stack_fill>:
      54:	deaddead 	.word	0xdeaddead

00000058 <num_msgs>:
      58:	04          	.byte	0x04

00000059 <sark_slot>:
      59:	0f          	.byte	0x0f

0000005a <num_events>:
      5a:	10          	.byte	0x10

0000005b <api>:
	...

0000005c <app_id>:
	...

0000005d <app_flags>:
	...

0000005e <__PAD>:
	...

00000060 <event_vec>:
	...

00000078 <reset_entry>:
      78:	e24f1060 	sub	r1, pc, #96	; 0x60
      7c:	e1c103bc 	strh	r0, [r1, #60]	; 0x3c
      80:	e28f0048 	add	r0, pc, #72	; 0x48
      84:	e5810000 	str	r0, [r1]
      88:	e59f00f4 	ldr	r0, [pc, #244]	; 184 <DMA_CRCT+0x4>
      8c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
      90:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
      94:	e3a0d902 	mov	sp, #32768	; 0x8000
      98:	fa000098 	blx	300 <sark_config>
      9c:	e51fd054 	ldr	sp, [pc, #-84]	; 50 <stack_top>
      a0:	e15f26b2 	ldrh	r2, [pc, #-98]	; 46 <stack_size>
      a4:	e51f1058 	ldr	r1, [pc, #-88]	; 54 <stack_fill>
      a8:	e04d0002 	sub	r0, sp, r2
      ac:	eb000058 	bl	214 <sark_word_set>
      b0:	e1a0000d 	mov	r0, sp
      b4:	fa00010f 	blx	4f8 <sark_init>
      b8:	e121f000 	msr	CPSR_c, r0
      bc:	fa0001c6 	blx	7dc <sark_wait>
      c0:	fa00014b 	blx	5f4 <sark_pre_main>
      c4:	eb0000c8 	bl	3ec <c_main>
      c8:	fa00014d 	blx	604 <sark_post_main>
      cc:	eb00002a 	bl	17c <cpu_sleep>

000000d0 <reset_error>:
      d0:	e3a00001 	mov	r0, #1
      d4:	ea000014 	b	12c <rt_error>

000000d8 <undef_error>:
      d8:	e3a0b002 	mov	fp, #2
      dc:	ea00000c 	b	114 <exc_error>

000000e0 <svc_error>:
      e0:	e3a0b003 	mov	fp, #3
      e4:	ea00000a 	b	114 <exc_error>

000000e8 <pabt_error>:
      e8:	e3a0b004 	mov	fp, #4
      ec:	ea000008 	b	114 <exc_error>

000000f0 <dabt_error>:
      f0:	e3a0b005 	mov	fp, #5
      f4:	ea000006 	b	114 <exc_error>

000000f8 <irq_error>:
      f8:	e3a0b006 	mov	fp, #6
      fc:	ea000004 	b	114 <exc_error>

00000100 <fiq_error>:
     100:	e3a0b007 	mov	fp, #7
     104:	ea000002 	b	114 <exc_error>

00000108 <vic_error>:
     108:	e3a0b008 	mov	fp, #8
     10c:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     110:	e5900030 	ldr	r0, [r0, #48]	; 0x30

00000114 <exc_error>:
     114:	e1a0a00e 	mov	sl, lr
     118:	e14f8000 	mrs	r8, SPSR
     11c:	e38890c0 	orr	r9, r8, #192	; 0xc0
     120:	e3c99020 	bic	r9, r9, #32
     124:	e12ff009 	msr	CPSR_fsxc, r9
     128:	ea000002 	b	138 <cc_error>

0000012c <rt_error>:
     12c:	e1a0b000 	mov	fp, r0
     130:	e10f8000 	mrs	r8, CPSR
     134:	e1a0a00e 	mov	sl, lr

00000138 <cc_error>:
     138:	e59fc048 	ldr	ip, [pc, #72]	; 188 <DMA_CRCT+0x8>
     13c:	e59cc000 	ldr	ip, [ip]
     140:	e3a09080 	mov	r9, #128	; 0x80
     144:	e59fe040 	ldr	lr, [pc, #64]	; 18c <DMA_CRCT+0xc>
     148:	e02ee99c 	mla	lr, ip, r9, lr
     14c:	e1a0900d 	mov	r9, sp
     150:	e88e07ff 	stm	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl}
     154:	e5ceb02c 	strb	fp, [lr, #44]	; 0x2c
     158:	e3a08002 	mov	r8, #2
     15c:	e5ce802e 	strb	r8, [lr, #46]	; 0x2e
     160:	e1a0000b 	mov	r0, fp
     164:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
     168:	fa0000a9 	blx	414 <rte_handler>

0000016c <cpu_shutdown>:
     16c:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
     170:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     174:	e3e01000 	mvn	r1, #0
     178:	e5801014 	str	r1, [r0, #20]

0000017c <cpu_sleep>:
     17c:	ee070f90 	mcr	15, 0, r0, cr7, cr0, {4}
     180:	eafffffd 	b	17c <cpu_sleep>
     184:	00001f7e 	.word	0x00001f7e
     188:	00400044 	.word	0x00400044
     18c:	e5007000 	.word	0xe5007000

00000190 <cpu_init_mode>:
     190:	e10f3000 	mrs	r3, CPSR
     194:	e121f001 	msr	CPSR_c, r1
     198:	e1a0d000 	mov	sp, r0
     19c:	e12ff003 	msr	CPSR_fsxc, r3
     1a0:	e0400102 	sub	r0, r0, r2, lsl #2
     1a4:	e12fff1e 	bx	lr

000001a8 <cpu_int_disable>:
     1a8:	e10f0000 	mrs	r0, CPSR
     1ac:	e38010c0 	orr	r1, r0, #192	; 0xc0
     1b0:	e121f001 	msr	CPSR_c, r1
     1b4:	e12fff1e 	bx	lr

000001b8 <cpu_int_restore>:
     1b8:	e12ff000 	msr	CPSR_fsxc, r0
     1bc:	e12fff1e 	bx	lr

000001c0 <cpu_wfi>:
     1c0:	ee070f90 	mcr	15, 0, r0, cr7, cr0, {4}
     1c4:	e12fff1e 	bx	lr

000001c8 <sark_lock_get>:
     1c8:	e3a0c4e2 	mov	ip, #-503316480	; 0xe2000000
     1cc:	e08cc100 	add	ip, ip, r0, lsl #2
     1d0:	e10f0000 	mrs	r0, CPSR
     1d4:	e38010c0 	orr	r1, r0, #192	; 0xc0
     1d8:	e121f001 	msr	CPSR_c, r1

000001dc <lg1>:
     1dc:	e59c1100 	ldr	r1, [ip, #256]	; 0x100
     1e0:	e3110102 	tst	r1, #-2147483648	; 0x80000000
     1e4:	1afffffc 	bne	1dc <lg1>
     1e8:	e12fff1e 	bx	lr

000001ec <sark_lock_free>:
     1ec:	e3a0c4e2 	mov	ip, #-503316480	; 0xe2000000
     1f0:	e08c1101 	add	r1, ip, r1, lsl #2
     1f4:	e5911180 	ldr	r1, [r1, #384]	; 0x180
     1f8:	e121f000 	msr	CPSR_c, r0
     1fc:	e12fff1e 	bx	lr

00000200 <sark_str_cpy>:
     200:	e4d12001 	ldrb	r2, [r1], #1
     204:	e3520000 	cmp	r2, #0
     208:	e4c02001 	strb	r2, [r0], #1
     20c:	1afffffb 	bne	200 <sark_str_cpy>
     210:	e12fff1e 	bx	lr

00000214 <sark_word_set>:
     214:	e1a03001 	mov	r3, r1

00000218 <ws1>:
     218:	e2522010 	subs	r2, r2, #16
     21c:	28a0000a 	stmiacs	r0!, {r1, r3}
     220:	28a0000a 	stmiacs	r0!, {r1, r3}
     224:	2afffffb 	bcs	218 <ws1>
     228:	e1b02e82 	lsls	r2, r2, #29
     22c:	28a0000a 	stmiacs	r0!, {r1, r3}
     230:	48a00002 	stmiami	r0!, {r1}
     234:	e12fff1e 	bx	lr

00000238 <sark_msg_cpy>:
     238:	e2800004 	add	r0, r0, #4
     23c:	e2811004 	add	r1, r1, #4
     240:	e1d120b0 	ldrh	r2, [r1]
     244:	e2822004 	add	r2, r2, #4

00000248 <sark_word_cpy>:
     248:	e3120003 	tst	r2, #3
     24c:	13c22003 	bicne	r2, r2, #3
     250:	12822004 	addne	r2, r2, #4
     254:	e92d4010 	push	{r4, lr}
     258:	e2522020 	subs	r2, r2, #32
     25c:	3a000005 	bcc	278 <wc2>

00000260 <wc1>:
     260:	e8b15018 	ldm	r1!, {r3, r4, ip, lr}
     264:	e8a05018 	stmia	r0!, {r3, r4, ip, lr}
     268:	e8b15018 	ldm	r1!, {r3, r4, ip, lr}
     26c:	e8a05018 	stmia	r0!, {r3, r4, ip, lr}
     270:	e2522020 	subs	r2, r2, #32
     274:	2afffff9 	bcs	260 <wc1>

00000278 <wc2>:
     278:	e1b0ce02 	lsls	ip, r2, #28
     27c:	28b15018 	ldmcs	r1!, {r3, r4, ip, lr}
     280:	28a05018 	stmiacs	r0!, {r3, r4, ip, lr}
     284:	48b10018 	ldmmi	r1!, {r3, r4}
     288:	48a00018 	stmiami	r0!, {r3, r4}
     28c:	e1b0cf02 	lsls	ip, r2, #30
     290:	24913004 	ldrcs	r3, [r1], #4
     294:	24803004 	strcs	r3, [r0], #4
     298:	e8bd8010 	pop	{r4, pc}

0000029c <sark_div10>:
     29c:	e241200a 	sub	r2, r1, #10
     2a0:	e0411121 	sub	r1, r1, r1, lsr #2
     2a4:	e0811221 	add	r1, r1, r1, lsr #4
     2a8:	e0811421 	add	r1, r1, r1, lsr #8
     2ac:	e0811821 	add	r1, r1, r1, lsr #16
     2b0:	e1a011a1 	lsr	r1, r1, #3
     2b4:	e0813101 	add	r3, r1, r1, lsl #2
     2b8:	e0522083 	subs	r2, r2, r3, lsl #1
     2bc:	52811001 	addpl	r1, r1, #1
     2c0:	4282200a 	addmi	r2, r2, #10
     2c4:	e8800006 	stm	r0, {r1, r2}
     2c8:	e12fff1e 	bx	lr

000002cc <sark_int_han>:
     2cc:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
     2d0:	e24e0004 	sub	r0, lr, #4
     2d4:	e14fc000 	mrs	ip, SPSR
     2d8:	e321f01f 	msr	CPSR_c, #31
     2dc:	e92d5000 	push	{ip, lr}
     2e0:	fa000142 	blx	7f0 <sark_int>
     2e4:	e8bd5000 	pop	{ip, lr}
     2e8:	e321f092 	msr	CPSR_c, #146	; 0x92
     2ec:	e16ff00c 	msr	SPSR_fsxc, ip
     2f0:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     2f4:	e5800030 	str	r0, [r0, #48]	; 0x30
     2f8:	e8bd500f 	pop	{r0, r1, r2, r3, ip, lr}

000002fc <null_int_han>:
     2fc:	e25ef004 	subs	pc, lr, #4

00000300 <sark_config>:
     300:	4770      	bx	lr

00000302 <sark_bx>:
     302:	4700      	bx	r0

00000304 <__gnu_thumb1_case_uqi>:
     304:	468c      	mov	ip, r1
     306:	4671      	mov	r1, lr
     308:	3901      	subs	r1, #1
     30a:	5c09      	ldrb	r1, [r1, r0]
     30c:	0049      	lsls	r1, r1, #1
     30e:	448e      	add	lr, r1
     310:	4661      	mov	r1, ip
     312:	4770      	bx	lr

00000314 <sark_aplx>:
     314:	b5f2      	push	{r1, r4, r5, r6, r7, lr}
     316:	4905      	ldr	r1, [pc, #20]	; (32c <aplx_buffer>)
     318:	a605      	add	r6, pc, #20	; (adr r6, 330 <aplx_loader>)
     31a:	2740      	movs	r7, #64	; 0x40

0000031c <aplx_l0>:
     31c:	ce3c      	ldmia	r6!, {r2, r3, r4, r5}
     31e:	c13c      	stmia	r1!, {r2, r3, r4, r5}
     320:	3f10      	subs	r7, #16
     322:	d1fb      	bne.n	31c <aplx_l0>
     324:	1c04      	adds	r4, r0, #0
     326:	393f      	subs	r1, #63	; 0x3f
     328:	4708      	bx	r1
	...

0000032c <aplx_buffer>:
     32c:	00007fc0 	.word	0x00007fc0

00000330 <aplx_loader>:
     330:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
     332:	2801      	cmp	r0, #1
     334:	d008      	beq.n	348 <aplx_copy>
     336:	2802      	cmp	r0, #2
     338:	d004      	beq.n	344 <aplx_rcopy>
     33a:	2803      	cmp	r0, #3
     33c:	d00b      	beq.n	356 <aplx_fill>
     33e:	2804      	cmp	r0, #4
     340:	d011      	beq.n	366 <aplx_exec>
     342:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

00000344 <aplx_rcopy>:
     344:	1912      	adds	r2, r2, r4
     346:	3a10      	subs	r2, #16

00000348 <aplx_copy>:
     348:	cae1      	ldmia	r2!, {r0, r5, r6, r7}
     34a:	c1e1      	stmia	r1!, {r0, r5, r6, r7}
     34c:	cae1      	ldmia	r2!, {r0, r5, r6, r7}
     34e:	c1e1      	stmia	r1!, {r0, r5, r6, r7}
     350:	3b20      	subs	r3, #32
     352:	d8f9      	bhi.n	348 <aplx_copy>
     354:	e7ec      	b.n	330 <aplx_loader>

00000356 <aplx_fill>:
     356:	1c1d      	adds	r5, r3, #0
     358:	1c1e      	adds	r6, r3, #0
     35a:	1c1f      	adds	r7, r3, #0

0000035c <aplx_l1>:
     35c:	c1e8      	stmia	r1!, {r3, r5, r6, r7}
     35e:	c1e8      	stmia	r1!, {r3, r5, r6, r7}
     360:	3a20      	subs	r2, #32
     362:	d8fb      	bhi.n	35c <aplx_l1>
     364:	e7e4      	b.n	330 <aplx_loader>

00000366 <aplx_exec>:
     366:	9800      	ldr	r0, [sp, #0]
     368:	4788      	blx	r1
     36a:	e7e1      	b.n	330 <aplx_loader>

0000036c <timer_int_han>:
     36c:	e24ee004 	sub	lr, lr, #4
     370:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
     374:	e3a03421 	mov	r3, #553648128	; 0x21000000
     378:	e583300c 	str	r3, [r3, #12]
     37c:	e3a00004 	mov	r0, #4
     380:	fa0001bd 	blx	a7c <sark_led_set>
     384:	e59f3020 	ldr	r3, [pc, #32]	; 3ac <timer_int_han+0x40>
     388:	e3a00002 	mov	r0, #2
     38c:	e5932000 	ldr	r2, [r3]
     390:	e59f1018 	ldr	r1, [pc, #24]	; 3b0 <timer_int_han+0x44>
     394:	e2822001 	add	r2, r2, #1
     398:	e5832000 	str	r2, [r3]
     39c:	fa000298 	blx	e04 <io_printf>
     3a0:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
     3a4:	e5833030 	str	r3, [r3, #48]	; 0x30
     3a8:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^
     3ac:	00400040 	.word	0x00400040
     3b0:	000010c0 	.word	0x000010c0

000003b4 <timer_setup>:
     3b4:	e3a03421 	mov	r3, #553648128	; 0x21000000
     3b8:	e3a020e2 	mov	r2, #226	; 0xe2
     3bc:	e5832008 	str	r2, [r3, #8]
     3c0:	e59f201c 	ldr	r2, [pc, #28]	; 3e4 <timer_setup+0x30>
     3c4:	e3a01004 	mov	r1, #4
     3c8:	e1d223b0 	ldrh	r2, [r2, #48]	; 0x30
     3cc:	e0000092 	mul	r0, r2, r0
     3d0:	e3a02001 	mov	r2, #1
     3d4:	e5830000 	str	r0, [r3]
     3d8:	e3a00000 	mov	r0, #0
     3dc:	e59f3004 	ldr	r3, [pc, #4]	; 3e8 <timer_setup+0x34>
     3e0:	ea000334 	b	10b8 <__sark_vic_set_from_arm>
     3e4:	00400044 	.word	0x00400044
     3e8:	0000036c 	.word	0x0000036c

000003ec <c_main>:
     3ec:	e92d4008 	push	{r3, lr}
     3f0:	e3a00000 	mov	r0, #0
     3f4:	e59f100c 	ldr	r1, [pc, #12]	; 408 <MC_TABLE_SIZE+0x8>
     3f8:	fa000281 	blx	e04 <io_printf>
     3fc:	e59f0008 	ldr	r0, [pc, #8]	; 40c <MC_TABLE_SIZE+0xc>
     400:	ebffffeb 	bl	3b4 <timer_setup>
     404:	ebffff5c 	bl	17c <cpu_sleep>
     408:	000010c9 	.word	0x000010c9
     40c:	0007a120 	.word	0x0007a120

00000410 <schedule_sysmode>:
     410:	4770      	bx	lr
	...

00000414 <rte_handler>:
     414:	4b01      	ldr	r3, [pc, #4]	; (41c <rte_handler+0x8>)
     416:	2208      	movs	r2, #8
     418:	701a      	strb	r2, [r3, #0]
     41a:	4770      	bx	lr
     41c:	e5007f2b 	.word	0xe5007f2b

00000420 <sark_cpu_state>:
     420:	4b02      	ldr	r3, [pc, #8]	; (42c <sark_cpu_state+0xc>)
     422:	69db      	ldr	r3, [r3, #28]
     424:	332e      	adds	r3, #46	; 0x2e
     426:	7018      	strb	r0, [r3, #0]
     428:	4770      	bx	lr
     42a:	46c0      	nop			; (mov r8, r8)
     42c:	00400044 	.word	0x00400044

00000430 <sark_block_init>:
     430:	b530      	push	{r4, r5, lr}
     432:	1c0b      	adds	r3, r1, #0
     434:	1c04      	adds	r4, r0, #0
     436:	e002      	b.n	43e <sark_block_init+0xe>
     438:	18a5      	adds	r5, r4, r2
     43a:	6025      	str	r5, [r4, #0]
     43c:	1c2c      	adds	r4, r5, #0
     43e:	3b01      	subs	r3, #1
     440:	2b00      	cmp	r3, #0
     442:	d1f9      	bne.n	438 <sark_block_init+0x8>
     444:	3901      	subs	r1, #1
     446:	434a      	muls	r2, r1
     448:	1880      	adds	r0, r0, r2
     44a:	6003      	str	r3, [r0, #0]
     44c:	bd30      	pop	{r4, r5, pc}
	...

00000450 <sark_msg_get>:
     450:	b510      	push	{r4, lr}
     452:	f7ff eeaa 	blx	1a8 <cpu_int_disable>
     456:	4b09      	ldr	r3, [pc, #36]	; (47c <sark_msg_get+0x2c>)
     458:	6a1c      	ldr	r4, [r3, #32]
     45a:	2c00      	cmp	r4, #0
     45c:	d00a      	beq.n	474 <sark_msg_get+0x24>
     45e:	6822      	ldr	r2, [r4, #0]
     460:	621a      	str	r2, [r3, #32]
     462:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
     464:	8cd9      	ldrh	r1, [r3, #38]	; 0x26
     466:	3201      	adds	r2, #1
     468:	0412      	lsls	r2, r2, #16
     46a:	0c12      	lsrs	r2, r2, #16
     46c:	849a      	strh	r2, [r3, #36]	; 0x24
     46e:	4291      	cmp	r1, r2
     470:	d200      	bcs.n	474 <sark_msg_get+0x24>
     472:	84da      	strh	r2, [r3, #38]	; 0x26
     474:	f7ff eea0 	blx	1b8 <cpu_int_restore>
     478:	1c20      	adds	r0, r4, #0
     47a:	bd10      	pop	{r4, pc}
     47c:	00400044 	.word	0x00400044

00000480 <sark_msg_free>:
     480:	b510      	push	{r4, lr}
     482:	1c04      	adds	r4, r0, #0
     484:	f7ff ee90 	blx	1a8 <cpu_int_disable>
     488:	4b04      	ldr	r3, [pc, #16]	; (49c <sark_msg_free+0x1c>)
     48a:	6a1a      	ldr	r2, [r3, #32]
     48c:	6022      	str	r2, [r4, #0]
     48e:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
     490:	621c      	str	r4, [r3, #32]
     492:	3a01      	subs	r2, #1
     494:	849a      	strh	r2, [r3, #36]	; 0x24
     496:	f7ff ee90 	blx	1b8 <cpu_int_restore>
     49a:	bd10      	pop	{r4, pc}
     49c:	00400044 	.word	0x00400044

000004a0 <sark_shmsg_get>:
     4a0:	b510      	push	{r4, lr}
     4a2:	2000      	movs	r0, #0
     4a4:	f7ff ee90 	blx	1c8 <sark_lock_get>
     4a8:	4b09      	ldr	r3, [pc, #36]	; (4d0 <sark_shmsg_get+0x30>)
     4aa:	681c      	ldr	r4, [r3, #0]
     4ac:	2c00      	cmp	r4, #0
     4ae:	d00a      	beq.n	4c6 <sark_shmsg_get+0x26>
     4b0:	6822      	ldr	r2, [r4, #0]
     4b2:	601a      	str	r2, [r3, #0]
     4b4:	889a      	ldrh	r2, [r3, #4]
     4b6:	88d9      	ldrh	r1, [r3, #6]
     4b8:	3201      	adds	r2, #1
     4ba:	0412      	lsls	r2, r2, #16
     4bc:	0c12      	lsrs	r2, r2, #16
     4be:	809a      	strh	r2, [r3, #4]
     4c0:	4291      	cmp	r1, r2
     4c2:	d200      	bcs.n	4c6 <sark_shmsg_get+0x26>
     4c4:	80da      	strh	r2, [r3, #6]
     4c6:	2100      	movs	r1, #0
     4c8:	f7ff ee90 	blx	1ec <sark_lock_free>
     4cc:	1c20      	adds	r0, r4, #0
     4ce:	bd10      	pop	{r4, pc}
     4d0:	e5007f68 	.word	0xe5007f68

000004d4 <sark_shmsg_free>:
     4d4:	b510      	push	{r4, lr}
     4d6:	1c04      	adds	r4, r0, #0
     4d8:	2000      	movs	r0, #0
     4da:	f7ff ee76 	blx	1c8 <sark_lock_get>
     4de:	4b05      	ldr	r3, [pc, #20]	; (4f4 <sark_shmsg_free+0x20>)
     4e0:	2100      	movs	r1, #0
     4e2:	681a      	ldr	r2, [r3, #0]
     4e4:	6022      	str	r2, [r4, #0]
     4e6:	889a      	ldrh	r2, [r3, #4]
     4e8:	601c      	str	r4, [r3, #0]
     4ea:	3a01      	subs	r2, #1
     4ec:	809a      	strh	r2, [r3, #4]
     4ee:	f7ff ee7e 	blx	1ec <sark_lock_free>
     4f2:	bd10      	pop	{r4, pc}
     4f4:	e5007f68 	.word	0xe5007f68

000004f8 <sark_init>:
     4f8:	b570      	push	{r4, r5, r6, lr}
     4fa:	2520      	movs	r5, #32
     4fc:	1c04      	adds	r4, r0, #0
     4fe:	8c28      	ldrh	r0, [r5, #32]
     500:	8c6a      	ldrh	r2, [r5, #34]	; 0x22
     502:	0080      	lsls	r0, r0, #2
     504:	1a20      	subs	r0, r4, r0
     506:	21d2      	movs	r1, #210	; 0xd2
     508:	f7ff ee42 	blx	190 <cpu_init_mode>
     50c:	8caa      	ldrh	r2, [r5, #36]	; 0x24
     50e:	21d1      	movs	r1, #209	; 0xd1
     510:	f7ff ee3e 	blx	190 <cpu_init_mode>
     514:	2200      	movs	r2, #0
     516:	21df      	movs	r1, #223	; 0xdf
     518:	f7ff ee3a 	blx	190 <cpu_init_mode>
     51c:	8ce9      	ldrh	r1, [r5, #38]	; 0x26
     51e:	2658      	movs	r6, #88	; 0x58
     520:	0889      	lsrs	r1, r1, #2
     522:	0089      	lsls	r1, r1, #2
     524:	1a61      	subs	r1, r4, r1
     526:	4c2a      	ldr	r4, [pc, #168]	; (5d0 <SPARE_SIZE+0x30>)
     528:	6121      	str	r1, [r4, #16]
     52a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
     52c:	6160      	str	r0, [r4, #20]
     52e:	f000 fb61 	bl	bf4 <sark_heap_init>
     532:	4b28      	ldr	r3, [pc, #160]	; (5d4 <SPARE_SIZE+0x34>)
     534:	4a28      	ldr	r2, [pc, #160]	; (5d8 <SPARE_SIZE+0x38>)
     536:	681b      	ldr	r3, [r3, #0]
     538:	4d28      	ldr	r5, [pc, #160]	; (5dc <SPARE_SIZE+0x3c>)
     53a:	0e1b      	lsrs	r3, r3, #24
     53c:	6063      	str	r3, [r4, #4]
     53e:	189b      	adds	r3, r3, r2
     540:	2192      	movs	r1, #146	; 0x92
     542:	0049      	lsls	r1, r1, #1
     544:	61a0      	str	r0, [r4, #24]
     546:	791b      	ldrb	r3, [r3, #4]
     548:	6023      	str	r3, [r4, #0]
     54a:	8cab      	ldrh	r3, [r5, #36]	; 0x24
     54c:	8623      	strh	r3, [r4, #48]	; 0x30
     54e:	4b24      	ldr	r3, [pc, #144]	; (5e0 <SPARE_SIZE+0x40>)
     550:	60a3      	str	r3, [r4, #8]
     552:	7830      	ldrb	r0, [r6, #0]
     554:	f000 fb42 	bl	bdc <sark_alloc>
     558:	2292      	movs	r2, #146	; 0x92
     55a:	0052      	lsls	r2, r2, #1
     55c:	6220      	str	r0, [r4, #32]
     55e:	7831      	ldrb	r1, [r6, #0]
     560:	f7ff ff66 	bl	430 <sark_block_init>
     564:	6823      	ldr	r3, [r4, #0]
     566:	2b11      	cmp	r3, #17
     568:	d81d      	bhi.n	5a6 <SPARE_SIZE+0x6>
     56a:	4a1e      	ldr	r2, [pc, #120]	; (5e4 <SPARE_SIZE+0x44>)
     56c:	01d8      	lsls	r0, r3, #7
     56e:	1880      	adds	r0, r0, r2
     570:	6daa      	ldr	r2, [r5, #88]	; 0x58
     572:	61e0      	str	r0, [r4, #28]
     574:	4353      	muls	r3, r2
     576:	6d6a      	ldr	r2, [r5, #84]	; 0x54
     578:	009b      	lsls	r3, r3, #2
     57a:	18d3      	adds	r3, r2, r3
     57c:	2100      	movs	r1, #0
     57e:	2270      	movs	r2, #112	; 0x70
     580:	6363      	str	r3, [r4, #52]	; 0x34
     582:	f7ff ee48 	blx	214 <sark_word_set>
     586:	69e0      	ldr	r0, [r4, #28]
     588:	2205      	movs	r2, #5
     58a:	1c03      	adds	r3, r0, #0
     58c:	332e      	adds	r3, #46	; 0x2e
     58e:	701a      	strb	r2, [r3, #0]
     590:	235c      	movs	r3, #92	; 0x5c
     592:	781a      	ldrb	r2, [r3, #0]
     594:	1c03      	adds	r3, r0, #0
     596:	332f      	adds	r3, #47	; 0x2f
     598:	701a      	strb	r2, [r3, #0]
     59a:	69ed      	ldr	r5, [r5, #28]
     59c:	6445      	str	r5, [r0, #68]	; 0x44
     59e:	4912      	ldr	r1, [pc, #72]	; (5e8 <SPARE_SIZE+0x48>)
     5a0:	3048      	adds	r0, #72	; 0x48
     5a2:	f7ff ee2e 	blx	200 <sark_str_cpy>
     5a6:	f000 fa1d 	bl	9e4 <sark_vic_init>
     5aa:	2359      	movs	r3, #89	; 0x59
     5ac:	7818      	ldrb	r0, [r3, #0]
     5ae:	2112      	movs	r1, #18
     5b0:	2201      	movs	r2, #1
     5b2:	4b0e      	ldr	r3, [pc, #56]	; (5ec <SPARE_SIZE+0x4c>)
     5b4:	f000 fa3e 	bl	a34 <sark_vic_set>
     5b8:	2106      	movs	r1, #6
     5ba:	2201      	movs	r2, #1
     5bc:	2010      	movs	r0, #16
     5be:	4b0c      	ldr	r3, [pc, #48]	; (5f0 <SPARE_SIZE+0x50>)
     5c0:	f000 fa38 	bl	a34 <sark_vic_set>
     5c4:	235a      	movs	r3, #90	; 0x5a
     5c6:	7818      	ldrb	r0, [r3, #0]
     5c8:	f000 f9ee 	bl	9a8 <event_alloc>
     5cc:	201f      	movs	r0, #31
     5ce:	bd70      	pop	{r4, r5, r6, pc}
     5d0:	00400044 	.word	0x00400044
     5d4:	40000014 	.word	0x40000014
     5d8:	e5007f90 	.word	0xe5007f90
     5dc:	e5007f00 	.word	0xe5007f00
     5e0:	deaddead 	.word	0xdeaddead
     5e4:	e5007000 	.word	0xe5007000
     5e8:	000010e4 	.word	0x000010e4
     5ec:	000002cc 	.word	0x000002cc
     5f0:	00000aec 	.word	0x00000aec

000005f4 <sark_pre_main>:
     5f4:	4b02      	ldr	r3, [pc, #8]	; (600 <ETH_TX_SIZE>)
     5f6:	2206      	movs	r2, #6
     5f8:	69db      	ldr	r3, [r3, #28]
     5fa:	332e      	adds	r3, #46	; 0x2e
     5fc:	701a      	strb	r2, [r3, #0]
     5fe:	4770      	bx	lr
     600:	00400044 	.word	0x00400044

00000604 <sark_post_main>:
     604:	4b02      	ldr	r3, [pc, #8]	; (610 <sark_post_main+0xc>)
     606:	220b      	movs	r2, #11
     608:	69db      	ldr	r3, [r3, #28]
     60a:	332e      	adds	r3, #46	; 0x2e
     60c:	701a      	strb	r2, [r3, #0]
     60e:	4770      	bx	lr
     610:	00400044 	.word	0x00400044

00000614 <sark_msg_send>:
     614:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     616:	1c05      	adds	r5, r0, #0
     618:	1c0f      	adds	r7, r1, #0
     61a:	f7ff ff41 	bl	4a0 <sark_shmsg_get>
     61e:	1c04      	adds	r4, r0, #0
     620:	3800      	subs	r0, #0
     622:	d03d      	beq.n	6a0 <sark_msg_send+0x8c>
     624:	1c29      	adds	r1, r5, #0
     626:	f7ff ee08 	blx	238 <sark_msg_cpy>
     62a:	4e1e      	ldr	r6, [pc, #120]	; (6a4 <sark_msg_send+0x90>)
     62c:	2501      	movs	r5, #1
     62e:	69f3      	ldr	r3, [r6, #28]
     630:	1c28      	adds	r0, r5, #0
     632:	635c      	str	r4, [r3, #52]	; 0x34
     634:	3339      	adds	r3, #57	; 0x39
     636:	701d      	strb	r5, [r3, #0]
     638:	f7ff edc6 	blx	1c8 <sark_lock_get>
     63c:	6831      	ldr	r1, [r6, #0]
     63e:	4a1a      	ldr	r2, [pc, #104]	; (6a8 <sark_msg_send+0x94>)
     640:	1c2e      	adds	r6, r5, #0
     642:	6813      	ldr	r3, [r2, #0]
     644:	408e      	lsls	r6, r1
     646:	1c31      	adds	r1, r6, #0
     648:	4319      	orrs	r1, r3
     64a:	6011      	str	r1, [r2, #0]
     64c:	2b00      	cmp	r3, #0
     64e:	d106      	bne.n	65e <sark_msg_send+0x4a>
     650:	4b16      	ldr	r3, [pc, #88]	; (6ac <sark_msg_send+0x98>)
     652:	4a17      	ldr	r2, [pc, #92]	; (6b0 <sark_msg_send+0x9c>)
     654:	781b      	ldrb	r3, [r3, #0]
     656:	409d      	lsls	r5, r3
     658:	4b16      	ldr	r3, [pc, #88]	; (6b4 <sark_msg_send+0xa0>)
     65a:	18ad      	adds	r5, r5, r2
     65c:	601d      	str	r5, [r3, #0]
     65e:	2101      	movs	r1, #1
     660:	f7ff edc4 	blx	1ec <sark_lock_free>
     664:	4b0f      	ldr	r3, [pc, #60]	; (6a4 <sark_msg_send+0x90>)
     666:	4a14      	ldr	r2, [pc, #80]	; (6b8 <sark_msg_send+0xa4>)
     668:	69db      	ldr	r3, [r3, #28]
     66a:	6815      	ldr	r5, [r2, #0]
     66c:	1c18      	adds	r0, r3, #0
     66e:	3039      	adds	r0, #57	; 0x39
     670:	e008      	b.n	684 <sark_msg_send+0x70>
     672:	6811      	ldr	r1, [r2, #0]
     674:	1b49      	subs	r1, r1, r5
     676:	42b9      	cmp	r1, r7
     678:	d904      	bls.n	684 <sark_msg_send+0x70>
     67a:	3339      	adds	r3, #57	; 0x39
     67c:	781b      	ldrb	r3, [r3, #0]
     67e:	2b00      	cmp	r3, #0
     680:	d009      	beq.n	696 <sark_msg_send+0x82>
     682:	e003      	b.n	68c <sark_msg_send+0x78>
     684:	7801      	ldrb	r1, [r0, #0]
     686:	2900      	cmp	r1, #0
     688:	d1f3      	bne.n	672 <sark_msg_send+0x5e>
     68a:	e7f6      	b.n	67a <sark_msg_send+0x66>
     68c:	1c20      	adds	r0, r4, #0
     68e:	f7ff ff21 	bl	4d4 <sark_shmsg_free>
     692:	2000      	movs	r0, #0
     694:	e004      	b.n	6a0 <sark_msg_send+0x8c>
     696:	4b03      	ldr	r3, [pc, #12]	; (6a4 <sark_msg_send+0x90>)
     698:	2001      	movs	r0, #1
     69a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     69c:	3201      	adds	r2, #1
     69e:	62da      	str	r2, [r3, #44]	; 0x2c
     6a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     6a2:	46c0      	nop			; (mov r8, r8)
     6a4:	00400044 	.word	0x00400044
     6a8:	e5007fec 	.word	0xe5007fec
     6ac:	e5007fa8 	.word	0xe5007fa8
     6b0:	5ec00000 	.word	0x5ec00000
     6b4:	e2000008 	.word	0xe2000008
     6b8:	e5007f10 	.word	0xe5007f10

000006bc <sark_cmd_ver>:
     6bc:	b508      	push	{r3, lr}
     6be:	4b0a      	ldr	r3, [pc, #40]	; (6e8 <sark_cmd_ver+0x2c>)
     6c0:	6859      	ldr	r1, [r3, #4]
     6c2:	681b      	ldr	r3, [r3, #0]
     6c4:	020a      	lsls	r2, r1, #8
     6c6:	18d3      	adds	r3, r2, r3
     6c8:	4a08      	ldr	r2, [pc, #32]	; (6ec <sark_cmd_ver+0x30>)
     6ca:	4909      	ldr	r1, [pc, #36]	; (6f0 <sark_cmd_ver+0x34>)
     6cc:	8812      	ldrh	r2, [r2, #0]
     6ce:	0412      	lsls	r2, r2, #16
     6d0:	189b      	adds	r3, r3, r2
     6d2:	6143      	str	r3, [r0, #20]
     6d4:	4b07      	ldr	r3, [pc, #28]	; (6f4 <sark_cmd_ver+0x38>)
     6d6:	6183      	str	r3, [r0, #24]
     6d8:	4b07      	ldr	r3, [pc, #28]	; (6f8 <sark_cmd_ver+0x3c>)
     6da:	681b      	ldr	r3, [r3, #0]
     6dc:	61c3      	str	r3, [r0, #28]
     6de:	3020      	adds	r0, #32
     6e0:	f7ff ed8e 	blx	200 <sark_str_cpy>
     6e4:	201b      	movs	r0, #27
     6e6:	bd08      	pop	{r3, pc}
     6e8:	00400044 	.word	0x00400044
     6ec:	e5007f00 	.word	0xe5007f00
     6f0:	000010f8 	.word	0x000010f8
     6f4:	00850100 	.word	0x00850100
     6f8:	000010f4 	.word	0x000010f4

000006fc <sark_cmd_read>:
     6fc:	69c1      	ldr	r1, [r0, #28]
     6fe:	b530      	push	{r4, r5, lr}
     700:	6983      	ldr	r3, [r0, #24]
     702:	2902      	cmp	r1, #2
     704:	d803      	bhi.n	70e <sark_cmd_read+0x12>
     706:	2280      	movs	r2, #128	; 0x80
     708:	0052      	lsls	r2, r2, #1
     70a:	429a      	cmp	r2, r3
     70c:	d203      	bcs.n	716 <sark_cmd_read+0x1a>
     70e:	2384      	movs	r3, #132	; 0x84
     710:	8203      	strh	r3, [r0, #16]
     712:	2300      	movs	r3, #0
     714:	e023      	b.n	75e <sark_cmd_read+0x62>
     716:	6942      	ldr	r2, [r0, #20]
     718:	3014      	adds	r0, #20
     71a:	2900      	cmp	r1, #0
     71c:	d108      	bne.n	730 <sark_cmd_read+0x34>
     71e:	18d1      	adds	r1, r2, r3
     720:	1a80      	subs	r0, r0, r2
     722:	e002      	b.n	72a <sark_cmd_read+0x2e>
     724:	7814      	ldrb	r4, [r2, #0]
     726:	5484      	strb	r4, [r0, r2]
     728:	3201      	adds	r2, #1
     72a:	428a      	cmp	r2, r1
     72c:	d1fa      	bne.n	724 <sark_cmd_read+0x28>
     72e:	e016      	b.n	75e <sark_cmd_read+0x62>
     730:	2901      	cmp	r1, #1
     732:	d10a      	bne.n	74a <sark_cmd_read+0x4e>
     734:	0859      	lsrs	r1, r3, #1
     736:	0049      	lsls	r1, r1, #1
     738:	1889      	adds	r1, r1, r2
     73a:	1a80      	subs	r0, r0, r2
     73c:	e002      	b.n	744 <sark_cmd_read+0x48>
     73e:	8814      	ldrh	r4, [r2, #0]
     740:	5284      	strh	r4, [r0, r2]
     742:	3202      	adds	r2, #2
     744:	428a      	cmp	r2, r1
     746:	d1fa      	bne.n	73e <sark_cmd_read+0x42>
     748:	e009      	b.n	75e <sark_cmd_read+0x62>
     74a:	089c      	lsrs	r4, r3, #2
     74c:	00a4      	lsls	r4, r4, #2
     74e:	1904      	adds	r4, r0, r4
     750:	1c01      	adds	r1, r0, #0
     752:	e002      	b.n	75a <sark_cmd_read+0x5e>
     754:	1a0d      	subs	r5, r1, r0
     756:	58ad      	ldr	r5, [r5, r2]
     758:	c120      	stmia	r1!, {r5}
     75a:	42a1      	cmp	r1, r4
     75c:	d1fa      	bne.n	754 <sark_cmd_read+0x58>
     75e:	1c18      	adds	r0, r3, #0
     760:	bd30      	pop	{r4, r5, pc}

00000762 <sark_cmd_write>:
     762:	69c1      	ldr	r1, [r0, #28]
     764:	b530      	push	{r4, r5, lr}
     766:	6982      	ldr	r2, [r0, #24]
     768:	2902      	cmp	r1, #2
     76a:	d803      	bhi.n	774 <sark_cmd_write+0x12>
     76c:	2380      	movs	r3, #128	; 0x80
     76e:	005b      	lsls	r3, r3, #1
     770:	4293      	cmp	r3, r2
     772:	d202      	bcs.n	77a <sark_cmd_write+0x18>
     774:	2384      	movs	r3, #132	; 0x84
     776:	8203      	strh	r3, [r0, #16]
     778:	e026      	b.n	7c8 <sark_cmd_write+0x66>
     77a:	6943      	ldr	r3, [r0, #20]
     77c:	2900      	cmp	r1, #0
     77e:	d10b      	bne.n	798 <sark_cmd_write+0x36>
     780:	1881      	adds	r1, r0, r2
     782:	1c02      	adds	r2, r0, #0
     784:	e005      	b.n	792 <sark_cmd_write+0x30>
     786:	1c14      	adds	r4, r2, #0
     788:	3420      	adds	r4, #32
     78a:	7825      	ldrb	r5, [r4, #0]
     78c:	1a14      	subs	r4, r2, r0
     78e:	3201      	adds	r2, #1
     790:	54e5      	strb	r5, [r4, r3]
     792:	428a      	cmp	r2, r1
     794:	d1f7      	bne.n	786 <sark_cmd_write+0x24>
     796:	e017      	b.n	7c8 <sark_cmd_write+0x66>
     798:	3020      	adds	r0, #32
     79a:	2901      	cmp	r1, #1
     79c:	d10b      	bne.n	7b6 <sark_cmd_write+0x54>
     79e:	0851      	lsrs	r1, r2, #1
     7a0:	0049      	lsls	r1, r1, #1
     7a2:	1841      	adds	r1, r0, r1
     7a4:	1c02      	adds	r2, r0, #0
     7a6:	e003      	b.n	7b0 <sark_cmd_write+0x4e>
     7a8:	8815      	ldrh	r5, [r2, #0]
     7aa:	1a14      	subs	r4, r2, r0
     7ac:	3202      	adds	r2, #2
     7ae:	52e5      	strh	r5, [r4, r3]
     7b0:	428a      	cmp	r2, r1
     7b2:	d1f9      	bne.n	7a8 <sark_cmd_write+0x46>
     7b4:	e008      	b.n	7c8 <sark_cmd_write+0x66>
     7b6:	0892      	lsrs	r2, r2, #2
     7b8:	0092      	lsls	r2, r2, #2
     7ba:	18d2      	adds	r2, r2, r3
     7bc:	1ac0      	subs	r0, r0, r3
     7be:	e001      	b.n	7c4 <sark_cmd_write+0x62>
     7c0:	58c1      	ldr	r1, [r0, r3]
     7c2:	c302      	stmia	r3!, {r1}
     7c4:	4293      	cmp	r3, r2
     7c6:	d1fb      	bne.n	7c0 <sark_cmd_write+0x5e>
     7c8:	2000      	movs	r0, #0
     7ca:	bd30      	pop	{r4, r5, pc}

000007cc <sark_cmd_fill>:
     7cc:	b508      	push	{r3, lr}
     7ce:	1c03      	adds	r3, r0, #0
     7d0:	3314      	adds	r3, #20
     7d2:	cb07      	ldmia	r3!, {r0, r1, r2}
     7d4:	f7ff ed1e 	blx	214 <sark_word_set>
     7d8:	2000      	movs	r0, #0
     7da:	bd08      	pop	{r3, pc}

000007dc <sark_wait>:
     7dc:	b508      	push	{r3, lr}
     7de:	e001      	b.n	7e4 <sark_wait+0x8>
     7e0:	f7ff ecee 	blx	1c0 <cpu_wfi>
     7e4:	235d      	movs	r3, #93	; 0x5d
     7e6:	781b      	ldrb	r3, [r3, #0]
     7e8:	07da      	lsls	r2, r3, #31
     7ea:	d4f9      	bmi.n	7e0 <sark_wait+0x4>
     7ec:	bd08      	pop	{r3, pc}
	...

000007f0 <sark_int>:
     7f0:	4b55      	ldr	r3, [pc, #340]	; (948 <STACK_SIZE+0x148>)
     7f2:	2101      	movs	r1, #1
     7f4:	685a      	ldr	r2, [r3, #4]
     7f6:	b570      	push	{r4, r5, r6, lr}
     7f8:	4091      	lsls	r1, r2
     7fa:	4a54      	ldr	r2, [pc, #336]	; (94c <STACK_SIZE+0x14c>)
     7fc:	1889      	adds	r1, r1, r2
     7fe:	4a54      	ldr	r2, [pc, #336]	; (950 <STACK_SIZE+0x150>)
     800:	6011      	str	r1, [r2, #0]
     802:	69da      	ldr	r2, [r3, #28]
     804:	1c11      	adds	r1, r2, #0
     806:	3138      	adds	r1, #56	; 0x38
     808:	780b      	ldrb	r3, [r1, #0]
     80a:	2b00      	cmp	r3, #0
     80c:	d100      	bne.n	810 <STACK_SIZE+0x10>
     80e:	e099      	b.n	944 <STACK_SIZE+0x144>
     810:	6b15      	ldr	r5, [r2, #48]	; 0x30
     812:	2b02      	cmp	r3, #2
     814:	d100      	bne.n	818 <STACK_SIZE+0x18>
     816:	6310      	str	r0, [r2, #48]	; 0x30
     818:	2200      	movs	r2, #0
     81a:	700a      	strb	r2, [r1, #0]
     81c:	2b03      	cmp	r3, #3
     81e:	d124      	bne.n	86a <STACK_SIZE+0x6a>
     820:	1ee8      	subs	r0, r5, #3
     822:	280a      	cmp	r0, #10
     824:	d900      	bls.n	828 <STACK_SIZE+0x28>
     826:	e08d      	b.n	944 <STACK_SIZE+0x144>
     828:	f7ff fd6c 	bl	304 <__gnu_thumb1_case_uqi>
     82c:	068c8c10 	.word	0x068c8c10
     830:	161b0c08 	.word	0x161b0c08
     834:	1616      	.short	0x1616
     836:	16          	.byte	0x16
     837:	00          	.byte	0x00
     838:	2001      	movs	r0, #1
     83a:	e000      	b.n	83e <STACK_SIZE+0x3e>
     83c:	2000      	movs	r0, #0
     83e:	f000 f891 	bl	964 <event_pause>
     842:	e07f      	b.n	944 <STACK_SIZE+0x144>
     844:	20ff      	movs	r0, #255	; 0xff
     846:	f000 f8a3 	bl	990 <event_stop>
     84a:	e07b      	b.n	944 <STACK_SIZE+0x144>
     84c:	235d      	movs	r3, #93	; 0x5d
     84e:	781a      	ldrb	r2, [r3, #0]
     850:	2101      	movs	r1, #1
     852:	438a      	bics	r2, r1
     854:	701a      	strb	r2, [r3, #0]
     856:	e075      	b.n	944 <STACK_SIZE+0x144>
     858:	4b3e      	ldr	r3, [pc, #248]	; (954 <STACK_SIZE+0x154>)
     85a:	2280      	movs	r2, #128	; 0x80
     85c:	62dd      	str	r5, [r3, #44]	; 0x2c
     85e:	0592      	lsls	r2, r2, #22
     860:	e000      	b.n	864 <STACK_SIZE+0x64>
     862:	2210      	movs	r2, #16
     864:	4b3c      	ldr	r3, [pc, #240]	; (958 <STACK_SIZE+0x158>)
     866:	601a      	str	r2, [r3, #0]
     868:	e06c      	b.n	944 <STACK_SIZE+0x144>
     86a:	2b01      	cmp	r3, #1
     86c:	d16a      	bne.n	944 <STACK_SIZE+0x144>
     86e:	f7ff fdef 	bl	450 <sark_msg_get>
     872:	1e04      	subs	r4, r0, #0
     874:	d063      	beq.n	93e <STACK_SIZE+0x13e>
     876:	1c29      	adds	r1, r5, #0
     878:	1c20      	adds	r0, r4, #0
     87a:	f7ff ecde 	blx	238 <sark_msg_cpy>
     87e:	1c28      	adds	r0, r5, #0
     880:	f7ff fe28 	bl	4d4 <sark_shmsg_free>
     884:	4b30      	ldr	r3, [pc, #192]	; (948 <STACK_SIZE+0x148>)
     886:	6a9a      	ldr	r2, [r3, #40]	; 0x28
     888:	3201      	adds	r2, #1
     88a:	629a      	str	r2, [r3, #40]	; 0x28
     88c:	7aa5      	ldrb	r5, [r4, #10]
     88e:	231f      	movs	r3, #31
     890:	1c28      	adds	r0, r5, #0
     892:	4398      	bics	r0, r3
     894:	d130      	bne.n	8f8 <STACK_SIZE+0xf8>
     896:	88a3      	ldrh	r3, [r4, #4]
     898:	2b17      	cmp	r3, #23
     89a:	d801      	bhi.n	8a0 <STACK_SIZE+0xa0>
     89c:	2381      	movs	r3, #129	; 0x81
     89e:	e01b      	b.n	8d8 <STACK_SIZE+0xd8>
     8a0:	8a23      	ldrh	r3, [r4, #16]
     8a2:	2280      	movs	r2, #128	; 0x80
     8a4:	8222      	strh	r2, [r4, #16]
     8a6:	2b00      	cmp	r3, #0
     8a8:	d103      	bne.n	8b2 <STACK_SIZE+0xb2>
     8aa:	1c20      	adds	r0, r4, #0
     8ac:	f7ff ff06 	bl	6bc <sark_cmd_ver>
     8b0:	e013      	b.n	8da <STACK_SIZE+0xda>
     8b2:	2b02      	cmp	r3, #2
     8b4:	d103      	bne.n	8be <STACK_SIZE+0xbe>
     8b6:	1c20      	adds	r0, r4, #0
     8b8:	f7ff ff20 	bl	6fc <sark_cmd_read>
     8bc:	e00d      	b.n	8da <STACK_SIZE+0xda>
     8be:	2b03      	cmp	r3, #3
     8c0:	d103      	bne.n	8ca <STACK_SIZE+0xca>
     8c2:	1c20      	adds	r0, r4, #0
     8c4:	f7ff ff4d 	bl	762 <sark_cmd_write>
     8c8:	e007      	b.n	8da <STACK_SIZE+0xda>
     8ca:	2b05      	cmp	r3, #5
     8cc:	d103      	bne.n	8d6 <STACK_SIZE+0xd6>
     8ce:	1c20      	adds	r0, r4, #0
     8d0:	f7ff ff7c 	bl	7cc <sark_cmd_fill>
     8d4:	e001      	b.n	8da <STACK_SIZE+0xda>
     8d6:	2383      	movs	r3, #131	; 0x83
     8d8:	8223      	strh	r3, [r4, #16]
     8da:	7aa2      	ldrb	r2, [r4, #10]
     8dc:	7ae1      	ldrb	r1, [r4, #11]
     8de:	89a3      	ldrh	r3, [r4, #12]
     8e0:	300c      	adds	r0, #12
     8e2:	72e2      	strb	r2, [r4, #11]
     8e4:	89e2      	ldrh	r2, [r4, #14]
     8e6:	80a0      	strh	r0, [r4, #4]
     8e8:	72a1      	strb	r1, [r4, #10]
     8ea:	81a2      	strh	r2, [r4, #12]
     8ec:	81e3      	strh	r3, [r4, #14]
     8ee:	1c20      	adds	r0, r4, #0
     8f0:	210a      	movs	r1, #10
     8f2:	f7ff fe8f 	bl	614 <sark_msg_send>
     8f6:	e01e      	b.n	936 <STACK_SIZE+0x136>
     8f8:	235b      	movs	r3, #91	; 0x5b
     8fa:	781b      	ldrb	r3, [r3, #0]
     8fc:	2b00      	cmp	r3, #0
     8fe:	d00f      	beq.n	920 <STACK_SIZE+0x120>
     900:	4b16      	ldr	r3, [pc, #88]	; (95c <STACK_SIZE+0x15c>)
     902:	699b      	ldr	r3, [r3, #24]
     904:	2b00      	cmp	r3, #0
     906:	d016      	beq.n	936 <STACK_SIZE+0x136>
     908:	f7ff ec4e 	blx	1a8 <cpu_int_disable>
     90c:	096a      	lsrs	r2, r5, #5
     90e:	1c21      	adds	r1, r4, #0
     910:	1c06      	adds	r6, r0, #0
     912:	2003      	movs	r0, #3
     914:	f7ff fd7c 	bl	410 <schedule_sysmode>
     918:	1c30      	adds	r0, r6, #0
     91a:	f7ff ec4e 	blx	1b8 <cpu_int_restore>
     91e:	e011      	b.n	944 <STACK_SIZE+0x144>
     920:	4b0f      	ldr	r3, [pc, #60]	; (960 <STACK_SIZE+0x160>)
     922:	681a      	ldr	r2, [r3, #0]
     924:	2380      	movs	r3, #128	; 0x80
     926:	055b      	lsls	r3, r3, #21
     928:	421a      	tst	r2, r3
     92a:	d004      	beq.n	936 <STACK_SIZE+0x136>
     92c:	4a09      	ldr	r2, [pc, #36]	; (954 <STACK_SIZE+0x154>)
     92e:	6294      	str	r4, [r2, #40]	; 0x28
     930:	4a09      	ldr	r2, [pc, #36]	; (958 <STACK_SIZE+0x158>)
     932:	6013      	str	r3, [r2, #0]
     934:	e006      	b.n	944 <STACK_SIZE+0x144>
     936:	1c20      	adds	r0, r4, #0
     938:	f7ff fda2 	bl	480 <sark_msg_free>
     93c:	e002      	b.n	944 <STACK_SIZE+0x144>
     93e:	1c28      	adds	r0, r5, #0
     940:	f7ff fdc8 	bl	4d4 <sark_shmsg_free>
     944:	bd70      	pop	{r4, r5, r6, pc}
     946:	46c0      	nop			; (mov r8, r8)
     948:	00400044 	.word	0x00400044
     94c:	5ec00000 	.word	0x5ec00000
     950:	e200000c 	.word	0xe200000c
     954:	00400080 	.word	0x00400080
     958:	1f000018 	.word	0x1f000018
     95c:	00400000 	.word	0x00400000
     960:	1f000010 	.word	0x1f000010

00000964 <event_pause>:
     964:	b538      	push	{r3, r4, r5, lr}
     966:	1c05      	adds	r5, r0, #0
     968:	4c08      	ldr	r4, [pc, #32]	; (98c <event_pause+0x28>)
     96a:	2800      	cmp	r0, #0
     96c:	d003      	beq.n	976 <event_pause+0x12>
     96e:	2301      	movs	r3, #1
     970:	7623      	strb	r3, [r4, #24]
     972:	200a      	movs	r0, #10
     974:	e001      	b.n	97a <event_pause+0x16>
     976:	7620      	strb	r0, [r4, #24]
     978:	2007      	movs	r0, #7
     97a:	f7ff fd51 	bl	420 <sark_cpu_state>
     97e:	6b23      	ldr	r3, [r4, #48]	; 0x30
     980:	2b00      	cmp	r3, #0
     982:	d002      	beq.n	98a <event_pause+0x26>
     984:	6b61      	ldr	r1, [r4, #52]	; 0x34
     986:	1c28      	adds	r0, r5, #0
     988:	4798      	blx	r3
     98a:	bd38      	pop	{r3, r4, r5, pc}
     98c:	00400080 	.word	0x00400080

00000990 <event_stop>:
     990:	4b03      	ldr	r3, [pc, #12]	; (9a0 <event_stop+0x10>)
     992:	2202      	movs	r2, #2
     994:	761a      	strb	r2, [r3, #24]
     996:	4a03      	ldr	r2, [pc, #12]	; (9a4 <event_stop+0x14>)
     998:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
     99a:	6011      	str	r1, [r2, #0]
     99c:	6398      	str	r0, [r3, #56]	; 0x38
     99e:	4770      	bx	lr
     9a0:	00400080 	.word	0x00400080
     9a4:	1f000014 	.word	0x1f000014

000009a8 <event_alloc>:
     9a8:	b570      	push	{r4, r5, r6, lr}
     9aa:	2118      	movs	r1, #24
     9ac:	1c06      	adds	r6, r0, #0
     9ae:	f000 f915 	bl	bdc <sark_alloc>
     9b2:	4d0b      	ldr	r5, [pc, #44]	; (9e0 <event_alloc+0x38>)
     9b4:	1e04      	subs	r4, r0, #0
     9b6:	d00d      	beq.n	9d4 <event_alloc+0x2c>
     9b8:	1c31      	adds	r1, r6, #0
     9ba:	2218      	movs	r2, #24
     9bc:	f7ff fd38 	bl	430 <sark_block_init>
     9c0:	1c06      	adds	r6, r0, #0
     9c2:	f7ff ebf2 	blx	1a8 <cpu_int_disable>
     9c6:	682a      	ldr	r2, [r5, #0]
     9c8:	6032      	str	r2, [r6, #0]
     9ca:	602c      	str	r4, [r5, #0]
     9cc:	f7ff ebf4 	blx	1b8 <cpu_int_restore>
     9d0:	2001      	movs	r0, #1
     9d2:	e003      	b.n	9dc <event_alloc+0x34>
     9d4:	696a      	ldr	r2, [r5, #20]
     9d6:	2308      	movs	r3, #8
     9d8:	4313      	orrs	r3, r2
     9da:	616b      	str	r3, [r5, #20]
     9dc:	bd70      	pop	{r4, r5, r6, pc}
     9de:	46c0      	nop			; (mov r8, r8)
     9e0:	00400080 	.word	0x00400080

000009e4 <sark_vic_init>:
     9e4:	4b0b      	ldr	r3, [pc, #44]	; (a14 <sark_vic_init+0x30>)
     9e6:	2201      	movs	r2, #1
     9e8:	4252      	negs	r2, r2
     9ea:	b510      	push	{r4, lr}
     9ec:	601a      	str	r2, [r3, #0]
     9ee:	4b0a      	ldr	r3, [pc, #40]	; (a18 <sark_vic_init+0x34>)
     9f0:	2200      	movs	r2, #0
     9f2:	601a      	str	r2, [r3, #0]
     9f4:	4b09      	ldr	r3, [pc, #36]	; (a1c <sark_vic_init+0x38>)
     9f6:	4c0a      	ldr	r4, [pc, #40]	; (a20 <sark_vic_init+0x3c>)
     9f8:	601a      	str	r2, [r3, #0]
     9fa:	490a      	ldr	r1, [pc, #40]	; (a24 <sark_vic_init+0x40>)
     9fc:	4b0a      	ldr	r3, [pc, #40]	; (a28 <sark_vic_init+0x44>)
     9fe:	1e58      	subs	r0, r3, #1
     a00:	601a      	str	r2, [r3, #0]
     a02:	38ff      	subs	r0, #255	; 0xff
     a04:	3304      	adds	r3, #4
     a06:	6004      	str	r4, [r0, #0]
     a08:	428b      	cmp	r3, r1
     a0a:	d1f8      	bne.n	9fe <sark_vic_init+0x1a>
     a0c:	4b07      	ldr	r3, [pc, #28]	; (a2c <sark_vic_init+0x48>)
     a0e:	4a08      	ldr	r2, [pc, #32]	; (a30 <sark_vic_init+0x4c>)
     a10:	601a      	str	r2, [r3, #0]
     a12:	bd10      	pop	{r4, pc}
     a14:	1f000014 	.word	0x1f000014
     a18:	1f00000c 	.word	0x1f00000c
     a1c:	1f000030 	.word	0x1f000030
     a20:	00000108 	.word	0x00000108
     a24:	1f000240 	.word	0x1f000240
     a28:	1f000200 	.word	0x1f000200
     a2c:	1f000034 	.word	0x1f000034
     a30:	000002fc 	.word	0x000002fc

00000a34 <sark_vic_set>:
     a34:	b530      	push	{r4, r5, lr}
     a36:	2810      	cmp	r0, #16
     a38:	d106      	bne.n	a48 <sark_vic_set+0x14>
     a3a:	2020      	movs	r0, #32
     a3c:	61c3      	str	r3, [r0, #28]
     a3e:	2001      	movs	r0, #1
     a40:	4b0a      	ldr	r3, [pc, #40]	; (a6c <sark_vic_set+0x38>)
     a42:	4088      	lsls	r0, r1
     a44:	6018      	str	r0, [r3, #0]
     a46:	e009      	b.n	a5c <sark_vic_set+0x28>
     a48:	4d09      	ldr	r5, [pc, #36]	; (a70 <sark_vic_set+0x3c>)
     a4a:	0084      	lsls	r4, r0, #2
     a4c:	1964      	adds	r4, r4, r5
     a4e:	6023      	str	r3, [r4, #0]
     a50:	4b08      	ldr	r3, [pc, #32]	; (a74 <sark_vic_set+0x40>)
     a52:	0080      	lsls	r0, r0, #2
     a54:	18c0      	adds	r0, r0, r3
     a56:	2320      	movs	r3, #32
     a58:	430b      	orrs	r3, r1
     a5a:	6003      	str	r3, [r0, #0]
     a5c:	2a00      	cmp	r2, #0
     a5e:	d004      	beq.n	a6a <sark_vic_set+0x36>
     a60:	2301      	movs	r3, #1
     a62:	408b      	lsls	r3, r1
     a64:	1c19      	adds	r1, r3, #0
     a66:	4b04      	ldr	r3, [pc, #16]	; (a78 <sark_vic_set+0x44>)
     a68:	6019      	str	r1, [r3, #0]
     a6a:	bd30      	pop	{r4, r5, pc}
     a6c:	1f00000c 	.word	0x1f00000c
     a70:	1f000100 	.word	0x1f000100
     a74:	1f000200 	.word	0x1f000200
     a78:	1f000010 	.word	0x1f000010

00000a7c <sark_led_set>:
     a7c:	4b17      	ldr	r3, [pc, #92]	; (adc <sark_led_set+0x60>)
     a7e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     a80:	681b      	ldr	r3, [r3, #0]
     a82:	260f      	movs	r6, #15
     a84:	4033      	ands	r3, r6
     a86:	9301      	str	r3, [sp, #4]
     a88:	2301      	movs	r3, #1
     a8a:	1c1c      	adds	r4, r3, #0
     a8c:	2702      	movs	r7, #2
     a8e:	e020      	b.n	ad2 <sark_led_set+0x56>
     a90:	4a12      	ldr	r2, [pc, #72]	; (adc <sark_led_set+0x60>)
     a92:	08d9      	lsrs	r1, r3, #3
     a94:	0089      	lsls	r1, r1, #2
     a96:	1889      	adds	r1, r1, r2
     a98:	2207      	movs	r2, #7
     a9a:	401a      	ands	r2, r3
     a9c:	6809      	ldr	r1, [r1, #0]
     a9e:	0092      	lsls	r2, r2, #2
     aa0:	40d1      	lsrs	r1, r2
     aa2:	1c0a      	adds	r2, r1, #0
     aa4:	4032      	ands	r2, r6
     aa6:	1c25      	adds	r5, r4, #0
     aa8:	4095      	lsls	r5, r2
     aaa:	1c01      	adds	r1, r0, #0
     aac:	1c2a      	adds	r2, r5, #0
     aae:	1c05      	adds	r5, r0, #0
     ab0:	4021      	ands	r1, r4
     ab2:	403d      	ands	r5, r7
     ab4:	0880      	lsrs	r0, r0, #2
     ab6:	2d00      	cmp	r5, #0
     ab8:	d104      	bne.n	ac4 <sark_led_set+0x48>
     aba:	2900      	cmp	r1, #0
     abc:	d008      	beq.n	ad0 <sark_led_set+0x54>
     abe:	4908      	ldr	r1, [pc, #32]	; (ae0 <sark_led_set+0x64>)
     ac0:	6809      	ldr	r1, [r1, #0]
     ac2:	4011      	ands	r1, r2
     ac4:	2900      	cmp	r1, #0
     ac6:	d001      	beq.n	acc <sark_led_set+0x50>
     ac8:	4906      	ldr	r1, [pc, #24]	; (ae4 <sark_led_set+0x68>)
     aca:	e000      	b.n	ace <sark_led_set+0x52>
     acc:	4906      	ldr	r1, [pc, #24]	; (ae8 <sark_led_set+0x6c>)
     ace:	600a      	str	r2, [r1, #0]
     ad0:	3301      	adds	r3, #1
     ad2:	9901      	ldr	r1, [sp, #4]
     ad4:	428b      	cmp	r3, r1
     ad6:	d9db      	bls.n	a90 <sark_led_set+0x14>
     ad8:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
     ada:	46c0      	nop			; (mov r8, r8)
     adc:	e5007f30 	.word	0xe5007f30
     ae0:	e2000040 	.word	0xe2000040
     ae4:	e200004c 	.word	0xe200004c
     ae8:	e2000048 	.word	0xe2000048

00000aec <sark_fiq_han>:
     aec:	e92d000c 	push	{r2, r3}
     af0:	e3a03202 	mov	r3, #536870912	; 0x20000000
     af4:	e5933014 	ldr	r3, [r3, #20]
     af8:	e59f3010 	ldr	r3, [pc, #16]	; b10 <sark_fiq_han+0x24>
     afc:	e5932038 	ldr	r2, [r3, #56]	; 0x38
     b00:	e2822001 	add	r2, r2, #1
     b04:	e5832038 	str	r2, [r3, #56]	; 0x38
     b08:	e8bd000c 	pop	{r2, r3}
     b0c:	e25ef004 	subs	pc, lr, #4
     b10:	00400044 	.word	0x00400044

00000b14 <sark_xalloc>:
     b14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     b16:	1c07      	adds	r7, r0, #0
     b18:	1c15      	adds	r5, r2, #0
     b1a:	2aff      	cmp	r2, #255	; 0xff
     b1c:	d858      	bhi.n	bd0 <sark_xalloc+0xbc>
     b1e:	2900      	cmp	r1, #0
     b20:	d100      	bne.n	b24 <sark_xalloc+0x10>
     b22:	e055      	b.n	bd0 <sark_xalloc+0xbc>
     b24:	0a1e      	lsrs	r6, r3, #8
     b26:	0798      	lsls	r0, r3, #30
     b28:	d401      	bmi.n	b2e <sark_xalloc+0x1a>
     b2a:	225c      	movs	r2, #92	; 0x5c
     b2c:	7816      	ldrb	r6, [r2, #0]
     b2e:	0236      	lsls	r6, r6, #8
     b30:	1976      	adds	r6, r6, r5
     b32:	2d00      	cmp	r5, #0
     b34:	d005      	beq.n	b42 <sark_xalloc+0x2e>
     b36:	4a27      	ldr	r2, [pc, #156]	; (bd4 <sark_xalloc+0xc0>)
     b38:	00b0      	lsls	r0, r6, #2
     b3a:	6812      	ldr	r2, [r2, #0]
     b3c:	5882      	ldr	r2, [r0, r2]
     b3e:	2a00      	cmp	r2, #0
     b40:	d146      	bne.n	bd0 <sark_xalloc+0xbc>
     b42:	2203      	movs	r2, #3
     b44:	3103      	adds	r1, #3
     b46:	4391      	bics	r1, r2
     b48:	2201      	movs	r2, #1
     b4a:	3108      	adds	r1, #8
     b4c:	4013      	ands	r3, r2
     b4e:	9101      	str	r1, [sp, #4]
     b50:	9300      	str	r3, [sp, #0]
     b52:	d003      	beq.n	b5c <sark_xalloc+0x48>
     b54:	2006      	movs	r0, #6
     b56:	f7ff eb38 	blx	1c8 <sark_lock_get>
     b5a:	4684      	mov	ip, r0
     b5c:	683c      	ldr	r4, [r7, #0]
     b5e:	2200      	movs	r2, #0
     b60:	e02d      	b.n	bbe <sark_xalloc+0xaa>
     b62:	9801      	ldr	r0, [sp, #4]
     b64:	6821      	ldr	r1, [r4, #0]
     b66:	1823      	adds	r3, r4, r0
     b68:	42a3      	cmp	r3, r4
     b6a:	d92a      	bls.n	bc2 <sark_xalloc+0xae>
     b6c:	428b      	cmp	r3, r1
     b6e:	d902      	bls.n	b76 <sark_xalloc+0x62>
     b70:	1c22      	adds	r2, r4, #0
     b72:	6864      	ldr	r4, [r4, #4]
     b74:	e023      	b.n	bbe <sark_xalloc+0xaa>
     b76:	1c18      	adds	r0, r3, #0
     b78:	3008      	adds	r0, #8
     b7a:	4281      	cmp	r1, r0
     b7c:	d904      	bls.n	b88 <sark_xalloc+0x74>
     b7e:	6019      	str	r1, [r3, #0]
     b80:	6861      	ldr	r1, [r4, #4]
     b82:	6059      	str	r1, [r3, #4]
     b84:	6023      	str	r3, [r4, #0]
     b86:	6063      	str	r3, [r4, #4]
     b88:	6863      	ldr	r3, [r4, #4]
     b8a:	2a00      	cmp	r2, #0
     b8c:	d001      	beq.n	b92 <sark_xalloc+0x7e>
     b8e:	6053      	str	r3, [r2, #4]
     b90:	e000      	b.n	b94 <sark_xalloc+0x80>
     b92:	603b      	str	r3, [r7, #0]
     b94:	9a00      	ldr	r2, [sp, #0]
     b96:	2a00      	cmp	r2, #0
     b98:	d003      	beq.n	ba2 <sark_xalloc+0x8e>
     b9a:	4660      	mov	r0, ip
     b9c:	2106      	movs	r1, #6
     b9e:	f7ff eb26 	blx	1ec <sark_lock_free>
     ba2:	480d      	ldr	r0, [pc, #52]	; (bd8 <sark_xalloc+0xc4>)
     ba4:	1833      	adds	r3, r6, r0
     ba6:	6063      	str	r3, [r4, #4]
     ba8:	2d00      	cmp	r5, #0
     baa:	d005      	beq.n	bb8 <sark_xalloc+0xa4>
     bac:	4b09      	ldr	r3, [pc, #36]	; (bd4 <sark_xalloc+0xc0>)
     bae:	1c22      	adds	r2, r4, #0
     bb0:	681b      	ldr	r3, [r3, #0]
     bb2:	00b6      	lsls	r6, r6, #2
     bb4:	3208      	adds	r2, #8
     bb6:	50f2      	str	r2, [r6, r3]
     bb8:	1c20      	adds	r0, r4, #0
     bba:	3008      	adds	r0, #8
     bbc:	e009      	b.n	bd2 <sark_xalloc+0xbe>
     bbe:	2c00      	cmp	r4, #0
     bc0:	d1cf      	bne.n	b62 <sark_xalloc+0x4e>
     bc2:	9900      	ldr	r1, [sp, #0]
     bc4:	2900      	cmp	r1, #0
     bc6:	d003      	beq.n	bd0 <sark_xalloc+0xbc>
     bc8:	4660      	mov	r0, ip
     bca:	2106      	movs	r1, #6
     bcc:	f7ff eb0e 	blx	1ec <sark_lock_free>
     bd0:	2000      	movs	r0, #0
     bd2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
     bd4:	e5007fdc 	.word	0xe5007fdc
     bd8:	ffff0000 	.word	0xffff0000

00000bdc <sark_alloc>:
     bdc:	4a04      	ldr	r2, [pc, #16]	; (bf0 <sark_alloc+0x14>)
     bde:	b508      	push	{r3, lr}
     be0:	1c03      	adds	r3, r0, #0
     be2:	6990      	ldr	r0, [r2, #24]
     be4:	2200      	movs	r2, #0
     be6:	4359      	muls	r1, r3
     be8:	1c13      	adds	r3, r2, #0
     bea:	f7ff ff93 	bl	b14 <sark_xalloc>
     bee:	bd08      	pop	{r3, pc}
     bf0:	00400044 	.word	0x00400044

00000bf4 <sark_heap_init>:
     bf4:	1c03      	adds	r3, r0, #0
     bf6:	330c      	adds	r3, #12
     bf8:	3908      	subs	r1, #8
     bfa:	6043      	str	r3, [r0, #4]
     bfc:	6003      	str	r3, [r0, #0]
     bfe:	2300      	movs	r3, #0
     c00:	6081      	str	r1, [r0, #8]
     c02:	60c1      	str	r1, [r0, #12]
     c04:	6103      	str	r3, [r0, #16]
     c06:	600b      	str	r3, [r1, #0]
     c08:	604b      	str	r3, [r1, #4]
     c0a:	4770      	bx	lr

00000c0c <io_buf_init>:
     c0c:	b538      	push	{r3, r4, r5, lr}
     c0e:	4d0c      	ldr	r5, [pc, #48]	; (c40 <io_buf_init+0x34>)
     c10:	4b0c      	ldr	r3, [pc, #48]	; (c44 <io_buf_init+0x38>)
     c12:	6d29      	ldr	r1, [r5, #80]	; 0x50
     c14:	6818      	ldr	r0, [r3, #0]
     c16:	3110      	adds	r1, #16
     c18:	2200      	movs	r2, #0
     c1a:	2301      	movs	r3, #1
     c1c:	f7ff ff7a 	bl	b14 <sark_xalloc>
     c20:	1e04      	subs	r4, r0, #0
     c22:	d102      	bne.n	c2a <io_buf_init+0x1e>
     c24:	200e      	movs	r0, #14
     c26:	f7ff fa81 	bl	12c <rt_error>
     c2a:	69eb      	ldr	r3, [r5, #28]
     c2c:	6063      	str	r3, [r4, #4]
     c2e:	4a06      	ldr	r2, [pc, #24]	; (c48 <io_buf_init+0x3c>)
     c30:	8b2b      	ldrh	r3, [r5, #24]
     c32:	60a3      	str	r3, [r4, #8]
     c34:	2300      	movs	r3, #0
     c36:	1c20      	adds	r0, r4, #0
     c38:	6023      	str	r3, [r4, #0]
     c3a:	6013      	str	r3, [r2, #0]
     c3c:	60e3      	str	r3, [r4, #12]
     c3e:	bd38      	pop	{r3, r4, r5, pc}
     c40:	e5007f00 	.word	0xe5007f00
     c44:	e5007fd0 	.word	0xe5007fd0
     c48:	00400038 	.word	0x00400038

00000c4c <io_put_char>:
     c4c:	b570      	push	{r4, r5, r6, lr}
     c4e:	1c0d      	adds	r5, r1, #0
     c50:	2803      	cmp	r0, #3
     c52:	d907      	bls.n	c64 <io_put_char+0x18>
     c54:	4a34      	ldr	r2, [pc, #208]	; (d28 <io_put_char+0xdc>)
     c56:	6813      	ldr	r3, [r2, #0]
     c58:	54c1      	strb	r1, [r0, r3]
     c5a:	3301      	adds	r3, #1
     c5c:	6013      	str	r3, [r2, #0]
     c5e:	2200      	movs	r2, #0
     c60:	54c2      	strb	r2, [r0, r3]
     c62:	e060      	b.n	d26 <io_put_char+0xda>
     c64:	2800      	cmp	r0, #0
     c66:	d13a      	bne.n	cde <io_put_char+0x92>
     c68:	4b30      	ldr	r3, [pc, #192]	; (d2c <io_put_char+0xe0>)
     c6a:	681b      	ldr	r3, [r3, #0]
     c6c:	2b00      	cmp	r3, #0
     c6e:	d11d      	bne.n	cac <io_put_char+0x60>
     c70:	2001      	movs	r0, #1
     c72:	2192      	movs	r1, #146	; 0x92
     c74:	4081      	lsls	r1, r0
     c76:	f7ff ffb1 	bl	bdc <sark_alloc>
     c7a:	1e04      	subs	r4, r0, #0
     c7c:	d102      	bne.n	c84 <io_put_char+0x38>
     c7e:	200e      	movs	r0, #14
     c80:	f7ff fa54 	bl	12c <rt_error>
     c84:	2307      	movs	r3, #7
     c86:	7223      	strb	r3, [r4, #8]
     c88:	2300      	movs	r3, #0
     c8a:	7263      	strb	r3, [r4, #9]
     c8c:	23ff      	movs	r3, #255	; 0xff
     c8e:	72a3      	strb	r3, [r4, #10]
     c90:	4b27      	ldr	r3, [pc, #156]	; (d30 <io_put_char+0xe4>)
     c92:	889a      	ldrh	r2, [r3, #4]
     c94:	81a2      	strh	r2, [r4, #12]
     c96:	4a27      	ldr	r2, [pc, #156]	; (d34 <io_put_char+0xe8>)
     c98:	6812      	ldr	r2, [r2, #0]
     c9a:	72e2      	strb	r2, [r4, #11]
     c9c:	881b      	ldrh	r3, [r3, #0]
     c9e:	81e3      	strh	r3, [r4, #14]
     ca0:	2340      	movs	r3, #64	; 0x40
     ca2:	8223      	strh	r3, [r4, #16]
     ca4:	230c      	movs	r3, #12
     ca6:	80a3      	strh	r3, [r4, #4]
     ca8:	4b20      	ldr	r3, [pc, #128]	; (d2c <io_put_char+0xe0>)
     caa:	601c      	str	r4, [r3, #0]
     cac:	4b1f      	ldr	r3, [pc, #124]	; (d2c <io_put_char+0xe0>)
     cae:	6818      	ldr	r0, [r3, #0]
     cb0:	8883      	ldrh	r3, [r0, #4]
     cb2:	18c2      	adds	r2, r0, r3
     cb4:	3301      	adds	r3, #1
     cb6:	041b      	lsls	r3, r3, #16
     cb8:	0c1b      	lsrs	r3, r3, #16
     cba:	7215      	strb	r5, [r2, #8]
     cbc:	8083      	strh	r3, [r0, #4]
     cbe:	2d00      	cmp	r5, #0
     cc0:	d005      	beq.n	cce <io_put_char+0x82>
     cc2:	2d0a      	cmp	r5, #10
     cc4:	d003      	beq.n	cce <io_put_char+0x82>
     cc6:	2286      	movs	r2, #134	; 0x86
     cc8:	0052      	lsls	r2, r2, #1
     cca:	4293      	cmp	r3, r2
     ccc:	d12b      	bne.n	d26 <io_put_char+0xda>
     cce:	210a      	movs	r1, #10
     cd0:	f7ff fca0 	bl	614 <sark_msg_send>
     cd4:	4b15      	ldr	r3, [pc, #84]	; (d2c <io_put_char+0xe0>)
     cd6:	220c      	movs	r2, #12
     cd8:	681b      	ldr	r3, [r3, #0]
     cda:	809a      	strh	r2, [r3, #4]
     cdc:	e023      	b.n	d26 <io_put_char+0xda>
     cde:	2802      	cmp	r0, #2
     ce0:	d121      	bne.n	d26 <io_put_char+0xda>
     ce2:	4e15      	ldr	r6, [pc, #84]	; (d38 <io_put_char+0xec>)
     ce4:	6833      	ldr	r3, [r6, #0]
     ce6:	2b00      	cmp	r3, #0
     ce8:	d105      	bne.n	cf6 <io_put_char+0xaa>
     cea:	4b12      	ldr	r3, [pc, #72]	; (d34 <io_put_char+0xe8>)
     cec:	69dc      	ldr	r4, [r3, #28]
     cee:	f7ff ff8d 	bl	c0c <io_buf_init>
     cf2:	65a0      	str	r0, [r4, #88]	; 0x58
     cf4:	6030      	str	r0, [r6, #0]
     cf6:	4a11      	ldr	r2, [pc, #68]	; (d3c <io_put_char+0xf0>)
     cf8:	6834      	ldr	r4, [r6, #0]
     cfa:	6813      	ldr	r3, [r2, #0]
     cfc:	18e1      	adds	r1, r4, r3
     cfe:	3301      	adds	r3, #1
     d00:	6013      	str	r3, [r2, #0]
     d02:	4a0b      	ldr	r2, [pc, #44]	; (d30 <io_put_char+0xe4>)
     d04:	740d      	strb	r5, [r1, #16]
     d06:	6d12      	ldr	r2, [r2, #80]	; 0x50
     d08:	4293      	cmp	r3, r2
     d0a:	d107      	bne.n	d1c <io_put_char+0xd0>
     d0c:	60e3      	str	r3, [r4, #12]
     d0e:	f7ff ff7d 	bl	c0c <io_buf_init>
     d12:	6833      	ldr	r3, [r6, #0]
     d14:	6020      	str	r0, [r4, #0]
     d16:	681b      	ldr	r3, [r3, #0]
     d18:	6033      	str	r3, [r6, #0]
     d1a:	e004      	b.n	d26 <io_put_char+0xda>
     d1c:	2d00      	cmp	r5, #0
     d1e:	d001      	beq.n	d24 <io_put_char+0xd8>
     d20:	2d0a      	cmp	r5, #10
     d22:	d100      	bne.n	d26 <io_put_char+0xda>
     d24:	60e3      	str	r3, [r4, #12]
     d26:	bd70      	pop	{r4, r5, r6, pc}
     d28:	0040003c 	.word	0x0040003c
     d2c:	00400030 	.word	0x00400030
     d30:	e5007f00 	.word	0xe5007f00
     d34:	00400044 	.word	0x00400044
     d38:	00400034 	.word	0x00400034
     d3c:	00400038 	.word	0x00400038

00000d40 <io_put_fixed>:
     d40:	b5f0      	push	{r4, r5, r6, r7, lr}
     d42:	b08d      	sub	sp, #52	; 0x34
     d44:	9001      	str	r0, [sp, #4]
     d46:	1c15      	adds	r5, r2, #0
     d48:	2b0c      	cmp	r3, #12
     d4a:	d900      	bls.n	d4e <io_put_fixed+0xe>
     d4c:	230c      	movs	r3, #12
     d4e:	1c0a      	adds	r2, r1, #0
     d50:	2400      	movs	r4, #0
     d52:	e008      	b.n	d66 <io_put_fixed+0x26>
     d54:	0c17      	lsrs	r7, r2, #16
     d56:	3730      	adds	r7, #48	; 0x30
     d58:	46bc      	mov	ip, r7
     d5a:	a805      	add	r0, sp, #20
     d5c:	3401      	adds	r4, #1
     d5e:	18c7      	adds	r7, r0, r3
     d60:	4266      	negs	r6, r4
     d62:	4660      	mov	r0, ip
     d64:	55b8      	strb	r0, [r7, r6]
     d66:	0412      	lsls	r2, r2, #16
     d68:	0c12      	lsrs	r2, r2, #16
     d6a:	200a      	movs	r0, #10
     d6c:	4342      	muls	r2, r0
     d6e:	429c      	cmp	r4, r3
     d70:	d1f0      	bne.n	d54 <io_put_fixed+0x14>
     d72:	0c12      	lsrs	r2, r2, #16
     d74:	2004      	movs	r0, #4
     d76:	4290      	cmp	r0, r2
     d78:	4180      	sbcs	r0, r0
     d7a:	2601      	movs	r6, #1
     d7c:	4240      	negs	r0, r0
     d7e:	2200      	movs	r2, #0
     d80:	46b4      	mov	ip, r6
     d82:	2730      	movs	r7, #48	; 0x30
     d84:	e00a      	b.n	d9c <io_put_fixed+0x5c>
     d86:	a805      	add	r0, sp, #20
     d88:	5c16      	ldrb	r6, [r2, r0]
     d8a:	2e38      	cmp	r6, #56	; 0x38
     d8c:	d902      	bls.n	d94 <io_put_fixed+0x54>
     d8e:	5417      	strb	r7, [r2, r0]
     d90:	2001      	movs	r0, #1
     d92:	e002      	b.n	d9a <io_put_fixed+0x5a>
     d94:	3601      	adds	r6, #1
     d96:	5416      	strb	r6, [r2, r0]
     d98:	2000      	movs	r0, #0
     d9a:	3201      	adds	r2, #1
     d9c:	429a      	cmp	r2, r3
     d9e:	d202      	bcs.n	da6 <io_put_fixed+0x66>
     da0:	4666      	mov	r6, ip
     da2:	4230      	tst	r0, r6
     da4:	d1ef      	bne.n	d86 <io_put_fixed+0x46>
     da6:	2b00      	cmp	r3, #0
     da8:	d003      	beq.n	db2 <io_put_fixed+0x72>
     daa:	242e      	movs	r4, #46	; 0x2e
     dac:	aa05      	add	r2, sp, #20
     dae:	54d4      	strb	r4, [r2, r3]
     db0:	1c5c      	adds	r4, r3, #1
     db2:	0c09      	lsrs	r1, r1, #16
     db4:	1841      	adds	r1, r0, r1
     db6:	a803      	add	r0, sp, #12
     db8:	f7ff ea70 	blx	29c <sark_div10>
     dbc:	9a04      	ldr	r2, [sp, #16]
     dbe:	9903      	ldr	r1, [sp, #12]
     dc0:	ab05      	add	r3, sp, #20
     dc2:	3230      	adds	r2, #48	; 0x30
     dc4:	54e2      	strb	r2, [r4, r3]
     dc6:	1c66      	adds	r6, r4, #1
     dc8:	2900      	cmp	r1, #0
     dca:	d001      	beq.n	dd0 <io_put_fixed+0x90>
     dcc:	1c34      	adds	r4, r6, #0
     dce:	e7f2      	b.n	db6 <io_put_fixed+0x76>
     dd0:	9813      	ldr	r0, [sp, #76]	; 0x4c
     dd2:	2800      	cmp	r0, #0
     dd4:	d008      	beq.n	de8 <io_put_fixed+0xa8>
     dd6:	222d      	movs	r2, #45	; 0x2d
     dd8:	559a      	strb	r2, [r3, r6]
     dda:	1ca6      	adds	r6, r4, #2
     ddc:	e004      	b.n	de8 <io_put_fixed+0xa8>
     dde:	9801      	ldr	r0, [sp, #4]
     de0:	9912      	ldr	r1, [sp, #72]	; 0x48
     de2:	f7ff ff33 	bl	c4c <io_put_char>
     de6:	3d01      	subs	r5, #1
     de8:	1c73      	adds	r3, r6, #1
     dea:	429d      	cmp	r5, r3
     dec:	d8f7      	bhi.n	dde <io_put_fixed+0x9e>
     dee:	3e01      	subs	r6, #1
     df0:	ab05      	add	r3, sp, #20
     df2:	5cf1      	ldrb	r1, [r6, r3]
     df4:	9801      	ldr	r0, [sp, #4]
     df6:	f7ff ff29 	bl	c4c <io_put_char>
     dfa:	2e00      	cmp	r6, #0
     dfc:	d1f7      	bne.n	dee <io_put_fixed+0xae>
     dfe:	b00d      	add	sp, #52	; 0x34
     e00:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

00000e04 <io_printf>:
     e04:	b40e      	push	{r1, r2, r3}
     e06:	b5f0      	push	{r4, r5, r6, r7, lr}
     e08:	b08c      	sub	sp, #48	; 0x30
     e0a:	1c04      	adds	r4, r0, #0
     e0c:	9d11      	ldr	r5, [sp, #68]	; 0x44
     e0e:	2803      	cmp	r0, #3
     e10:	d100      	bne.n	e14 <io_printf+0x10>
     e12:	e145      	b.n	10a0 <SV_SIZE+0xa0>
     e14:	d903      	bls.n	e1e <io_printf+0x1a>
     e16:	4aa5      	ldr	r2, [pc, #660]	; (10ac <SV_SIZE+0xac>)
     e18:	2300      	movs	r3, #0
     e1a:	7003      	strb	r3, [r0, #0]
     e1c:	6013      	str	r3, [r2, #0]
     e1e:	ab12      	add	r3, sp, #72	; 0x48
     e20:	9305      	str	r3, [sp, #20]
     e22:	7829      	ldrb	r1, [r5, #0]
     e24:	2900      	cmp	r1, #0
     e26:	d100      	bne.n	e2a <io_printf+0x26>
     e28:	e13a      	b.n	10a0 <SV_SIZE+0xa0>
     e2a:	2925      	cmp	r1, #37	; 0x25
     e2c:	d001      	beq.n	e32 <io_printf+0x2e>
     e2e:	3501      	adds	r5, #1
     e30:	e053      	b.n	eda <io_printf+0xd6>
     e32:	7869      	ldrb	r1, [r5, #1]
     e34:	3502      	adds	r5, #2
     e36:	2900      	cmp	r1, #0
     e38:	d100      	bne.n	e3c <io_printf+0x38>
     e3a:	e131      	b.n	10a0 <SV_SIZE+0xa0>
     e3c:	2930      	cmp	r1, #48	; 0x30
     e3e:	d002      	beq.n	e46 <io_printf+0x42>
     e40:	2020      	movs	r0, #32
     e42:	9003      	str	r0, [sp, #12]
     e44:	e000      	b.n	e48 <io_printf+0x44>
     e46:	9103      	str	r1, [sp, #12]
     e48:	2600      	movs	r6, #0
     e4a:	220a      	movs	r2, #10
     e4c:	e007      	b.n	e5e <io_printf+0x5a>
     e4e:	4356      	muls	r6, r2
     e50:	1876      	adds	r6, r6, r1
     e52:	7829      	ldrb	r1, [r5, #0]
     e54:	3e30      	subs	r6, #48	; 0x30
     e56:	3501      	adds	r5, #1
     e58:	2900      	cmp	r1, #0
     e5a:	d100      	bne.n	e5e <io_printf+0x5a>
     e5c:	e120      	b.n	10a0 <SV_SIZE+0xa0>
     e5e:	1c0b      	adds	r3, r1, #0
     e60:	3b30      	subs	r3, #48	; 0x30
     e62:	2b09      	cmp	r3, #9
     e64:	d9f3      	bls.n	e4e <io_printf+0x4a>
     e66:	1c37      	adds	r7, r6, #0
     e68:	2306      	movs	r3, #6
     e6a:	292e      	cmp	r1, #46	; 0x2e
     e6c:	d110      	bne.n	e90 <io_printf+0x8c>
     e6e:	7829      	ldrb	r1, [r5, #0]
     e70:	2300      	movs	r3, #0
     e72:	3501      	adds	r5, #1
     e74:	200a      	movs	r0, #10
     e76:	e004      	b.n	e82 <io_printf+0x7e>
     e78:	4343      	muls	r3, r0
     e7a:	185b      	adds	r3, r3, r1
     e7c:	3b30      	subs	r3, #48	; 0x30
     e7e:	7829      	ldrb	r1, [r5, #0]
     e80:	3501      	adds	r5, #1
     e82:	1c0a      	adds	r2, r1, #0
     e84:	3a30      	subs	r2, #48	; 0x30
     e86:	2a09      	cmp	r2, #9
     e88:	d9f6      	bls.n	e78 <io_printf+0x74>
     e8a:	2900      	cmp	r1, #0
     e8c:	d100      	bne.n	e90 <io_printf+0x8c>
     e8e:	e107      	b.n	10a0 <SV_SIZE+0xa0>
     e90:	296b      	cmp	r1, #107	; 0x6b
     e92:	d100      	bne.n	e96 <io_printf+0x92>
     e94:	e0b0      	b.n	ff8 <RTR_TST2+0xf4>
     e96:	d80d      	bhi.n	eb4 <io_printf+0xb0>
     e98:	2963      	cmp	r1, #99	; 0x63
     e9a:	d01a      	beq.n	ed2 <io_printf+0xce>
     e9c:	d805      	bhi.n	eaa <io_printf+0xa6>
     e9e:	294b      	cmp	r1, #75	; 0x4b
     ea0:	d100      	bne.n	ea4 <io_printf+0xa0>
     ea2:	e09a      	b.n	fda <RTR_TST2+0xd6>
     ea4:	2952      	cmp	r1, #82	; 0x52
     ea6:	d118      	bne.n	eda <io_printf+0xd6>
     ea8:	e09e      	b.n	fe8 <RTR_TST2+0xe4>
     eaa:	2964      	cmp	r1, #100	; 0x64
     eac:	d036      	beq.n	f1c <RTR_TST2+0x18>
     eae:	2966      	cmp	r1, #102	; 0x66
     eb0:	d113      	bne.n	eda <io_printf+0xd6>
     eb2:	e092      	b.n	fda <RTR_TST2+0xd6>
     eb4:	2975      	cmp	r1, #117	; 0x75
     eb6:	d066      	beq.n	f86 <RTR_TST2+0x82>
     eb8:	d805      	bhi.n	ec6 <io_printf+0xc2>
     eba:	2972      	cmp	r1, #114	; 0x72
     ebc:	d100      	bne.n	ec0 <io_printf+0xbc>
     ebe:	e09b      	b.n	ff8 <RTR_TST2+0xf4>
     ec0:	2973      	cmp	r1, #115	; 0x73
     ec2:	d10a      	bne.n	eda <io_printf+0xd6>
     ec4:	e00d      	b.n	ee2 <io_printf+0xde>
     ec6:	2978      	cmp	r1, #120	; 0x78
     ec8:	d100      	bne.n	ecc <io_printf+0xc8>
     eca:	e0a6      	b.n	101a <SV_SIZE+0x1a>
     ecc:	297a      	cmp	r1, #122	; 0x7a
     ece:	d104      	bne.n	eda <io_printf+0xd6>
     ed0:	e0ce      	b.n	1070 <SV_SIZE+0x70>
     ed2:	9b05      	ldr	r3, [sp, #20]
     ed4:	6819      	ldr	r1, [r3, #0]
     ed6:	1d1a      	adds	r2, r3, #4
     ed8:	9205      	str	r2, [sp, #20]
     eda:	1c20      	adds	r0, r4, #0
     edc:	f7ff feb6 	bl	c4c <io_put_char>
     ee0:	e79f      	b.n	e22 <io_printf+0x1e>
     ee2:	9b05      	ldr	r3, [sp, #20]
     ee4:	681e      	ldr	r6, [r3, #0]
     ee6:	1d1a      	adds	r2, r3, #4
     ee8:	1c33      	adds	r3, r6, #0
     eea:	9205      	str	r2, [sp, #20]
     eec:	781a      	ldrb	r2, [r3, #0]
     eee:	1b99      	subs	r1, r3, r6
     ef0:	9103      	str	r1, [sp, #12]
     ef2:	3301      	adds	r3, #1
     ef4:	2a00      	cmp	r2, #0
     ef6:	d1f9      	bne.n	eec <io_printf+0xe8>
     ef8:	e004      	b.n	f04 <RTR_TST2>
     efa:	1c20      	adds	r0, r4, #0
     efc:	2120      	movs	r1, #32
     efe:	f7ff fea5 	bl	c4c <io_put_char>
     f02:	3f01      	subs	r7, #1
     f04:	9a03      	ldr	r2, [sp, #12]
     f06:	4297      	cmp	r7, r2
     f08:	dcf7      	bgt.n	efa <io_printf+0xf6>
     f0a:	e003      	b.n	f14 <RTR_TST2+0x10>
     f0c:	1c20      	adds	r0, r4, #0
     f0e:	3601      	adds	r6, #1
     f10:	f7ff fe9c 	bl	c4c <io_put_char>
     f14:	7831      	ldrb	r1, [r6, #0]
     f16:	2900      	cmp	r1, #0
     f18:	d1f8      	bne.n	f0c <RTR_TST2+0x8>
     f1a:	e782      	b.n	e22 <io_printf+0x1e>
     f1c:	9b05      	ldr	r3, [sp, #20]
     f1e:	6819      	ldr	r1, [r3, #0]
     f20:	1d1a      	adds	r2, r3, #4
     f22:	2300      	movs	r3, #0
     f24:	9205      	str	r2, [sp, #20]
     f26:	9303      	str	r3, [sp, #12]
     f28:	4299      	cmp	r1, r3
     f2a:	da02      	bge.n	f32 <RTR_TST2+0x2e>
     f2c:	202d      	movs	r0, #45	; 0x2d
     f2e:	4249      	negs	r1, r1
     f30:	9003      	str	r0, [sp, #12]
     f32:	2700      	movs	r7, #0
     f34:	a806      	add	r0, sp, #24
     f36:	f7ff e9b2 	blx	29c <sark_div10>
     f3a:	9a07      	ldr	r2, [sp, #28]
     f3c:	9906      	ldr	r1, [sp, #24]
     f3e:	ab08      	add	r3, sp, #32
     f40:	3230      	adds	r2, #48	; 0x30
     f42:	54fa      	strb	r2, [r7, r3]
     f44:	3701      	adds	r7, #1
     f46:	2900      	cmp	r1, #0
     f48:	d1f4      	bne.n	f34 <RTR_TST2+0x30>
     f4a:	e001      	b.n	f50 <RTR_TST2+0x4c>
     f4c:	2f00      	cmp	r7, #0
     f4e:	d003      	beq.n	f58 <RTR_TST2+0x54>
     f50:	3f01      	subs	r7, #1
     f52:	5cfa      	ldrb	r2, [r7, r3]
     f54:	2a30      	cmp	r2, #48	; 0x30
     f56:	d0f9      	beq.n	f4c <RTR_TST2+0x48>
     f58:	9903      	ldr	r1, [sp, #12]
     f5a:	2900      	cmp	r1, #0
     f5c:	d007      	beq.n	f6e <RTR_TST2+0x6a>
     f5e:	3701      	adds	r7, #1
     f60:	55d9      	strb	r1, [r3, r7]
     f62:	e004      	b.n	f6e <RTR_TST2+0x6a>
     f64:	1c20      	adds	r0, r4, #0
     f66:	2120      	movs	r1, #32
     f68:	f7ff fe70 	bl	c4c <io_put_char>
     f6c:	3e01      	subs	r6, #1
     f6e:	1c7b      	adds	r3, r7, #1
     f70:	429e      	cmp	r6, r3
     f72:	d8f7      	bhi.n	f64 <RTR_TST2+0x60>
     f74:	ab08      	add	r3, sp, #32
     f76:	5cf9      	ldrb	r1, [r7, r3]
     f78:	1c20      	adds	r0, r4, #0
     f7a:	3f01      	subs	r7, #1
     f7c:	f7ff fe66 	bl	c4c <io_put_char>
     f80:	1c79      	adds	r1, r7, #1
     f82:	d1f7      	bne.n	f74 <RTR_TST2+0x70>
     f84:	e74d      	b.n	e22 <io_printf+0x1e>
     f86:	9b05      	ldr	r3, [sp, #20]
     f88:	2700      	movs	r7, #0
     f8a:	6819      	ldr	r1, [r3, #0]
     f8c:	1d1a      	adds	r2, r3, #4
     f8e:	9205      	str	r2, [sp, #20]
     f90:	a806      	add	r0, sp, #24
     f92:	f7ff e984 	blx	29c <sark_div10>
     f96:	9a07      	ldr	r2, [sp, #28]
     f98:	9906      	ldr	r1, [sp, #24]
     f9a:	3230      	adds	r2, #48	; 0x30
     f9c:	ab08      	add	r3, sp, #32
     f9e:	54fa      	strb	r2, [r7, r3]
     fa0:	3701      	adds	r7, #1
     fa2:	2900      	cmp	r1, #0
     fa4:	d1f4      	bne.n	f90 <RTR_TST2+0x8c>
     fa6:	e001      	b.n	fac <RTR_TST2+0xa8>
     fa8:	2f00      	cmp	r7, #0
     faa:	d00a      	beq.n	fc2 <RTR_TST2+0xbe>
     fac:	3f01      	subs	r7, #1
     fae:	ab08      	add	r3, sp, #32
     fb0:	5cfb      	ldrb	r3, [r7, r3]
     fb2:	2b30      	cmp	r3, #48	; 0x30
     fb4:	d105      	bne.n	fc2 <RTR_TST2+0xbe>
     fb6:	e7f7      	b.n	fa8 <RTR_TST2+0xa4>
     fb8:	1c20      	adds	r0, r4, #0
     fba:	9903      	ldr	r1, [sp, #12]
     fbc:	f7ff fe46 	bl	c4c <io_put_char>
     fc0:	3e01      	subs	r6, #1
     fc2:	1c7b      	adds	r3, r7, #1
     fc4:	429e      	cmp	r6, r3
     fc6:	d8f7      	bhi.n	fb8 <RTR_TST2+0xb4>
     fc8:	ab08      	add	r3, sp, #32
     fca:	5cf9      	ldrb	r1, [r7, r3]
     fcc:	1c20      	adds	r0, r4, #0
     fce:	3f01      	subs	r7, #1
     fd0:	f7ff fe3c 	bl	c4c <io_put_char>
     fd4:	1c7a      	adds	r2, r7, #1
     fd6:	d1f7      	bne.n	fc8 <RTR_TST2+0xc4>
     fd8:	e723      	b.n	e22 <io_printf+0x1e>
     fda:	9a05      	ldr	r2, [sp, #20]
     fdc:	9803      	ldr	r0, [sp, #12]
     fde:	1d11      	adds	r1, r2, #4
     fe0:	9105      	str	r1, [sp, #20]
     fe2:	6811      	ldr	r1, [r2, #0]
     fe4:	9000      	str	r0, [sp, #0]
     fe6:	e005      	b.n	ff4 <RTR_TST2+0xf0>
     fe8:	9a05      	ldr	r2, [sp, #20]
     fea:	1d11      	adds	r1, r2, #4
     fec:	9105      	str	r1, [sp, #20]
     fee:	6811      	ldr	r1, [r2, #0]
     ff0:	9a03      	ldr	r2, [sp, #12]
     ff2:	9200      	str	r2, [sp, #0]
     ff4:	2200      	movs	r2, #0
     ff6:	e00a      	b.n	100e <SV_SIZE+0xe>
     ff8:	9a05      	ldr	r2, [sp, #20]
     ffa:	1d11      	adds	r1, r2, #4
     ffc:	6812      	ldr	r2, [r2, #0]
     ffe:	9105      	str	r1, [sp, #20]
    1000:	17d0      	asrs	r0, r2, #31
    1002:	1811      	adds	r1, r2, r0
    1004:	4041      	eors	r1, r0
    1006:	0049      	lsls	r1, r1, #1
    1008:	9803      	ldr	r0, [sp, #12]
    100a:	0fd2      	lsrs	r2, r2, #31
    100c:	9000      	str	r0, [sp, #0]
    100e:	9201      	str	r2, [sp, #4]
    1010:	1c20      	adds	r0, r4, #0
    1012:	1c32      	adds	r2, r6, #0
    1014:	f7ff fe94 	bl	d40 <io_put_fixed>
    1018:	e703      	b.n	e22 <io_printf+0x1e>
    101a:	9b05      	ldr	r3, [sp, #20]
    101c:	210f      	movs	r1, #15
    101e:	1d1a      	adds	r2, r3, #4
    1020:	4823      	ldr	r0, [pc, #140]	; (10b0 <SV_SIZE+0xb0>)
    1022:	681b      	ldr	r3, [r3, #0]
    1024:	2700      	movs	r7, #0
    1026:	468c      	mov	ip, r1
    1028:	9205      	str	r2, [sp, #20]
    102a:	4662      	mov	r2, ip
    102c:	401a      	ands	r2, r3
    102e:	5c81      	ldrb	r1, [r0, r2]
    1030:	aa08      	add	r2, sp, #32
    1032:	54b9      	strb	r1, [r7, r2]
    1034:	091b      	lsrs	r3, r3, #4
    1036:	3701      	adds	r7, #1
    1038:	2b00      	cmp	r3, #0
    103a:	d1f6      	bne.n	102a <SV_SIZE+0x2a>
    103c:	e001      	b.n	1042 <SV_SIZE+0x42>
    103e:	2f00      	cmp	r7, #0
    1040:	d00a      	beq.n	1058 <SV_SIZE+0x58>
    1042:	3f01      	subs	r7, #1
    1044:	ab08      	add	r3, sp, #32
    1046:	5cfb      	ldrb	r3, [r7, r3]
    1048:	2b30      	cmp	r3, #48	; 0x30
    104a:	d105      	bne.n	1058 <SV_SIZE+0x58>
    104c:	e7f7      	b.n	103e <SV_SIZE+0x3e>
    104e:	1c20      	adds	r0, r4, #0
    1050:	9903      	ldr	r1, [sp, #12]
    1052:	f7ff fdfb 	bl	c4c <io_put_char>
    1056:	3e01      	subs	r6, #1
    1058:	1c7b      	adds	r3, r7, #1
    105a:	429e      	cmp	r6, r3
    105c:	d8f7      	bhi.n	104e <SV_SIZE+0x4e>
    105e:	ab08      	add	r3, sp, #32
    1060:	5cf9      	ldrb	r1, [r7, r3]
    1062:	1c20      	adds	r0, r4, #0
    1064:	3f01      	subs	r7, #1
    1066:	f7ff fdf1 	bl	c4c <io_put_char>
    106a:	1c7a      	adds	r2, r7, #1
    106c:	d1f7      	bne.n	105e <SV_SIZE+0x5e>
    106e:	e6d8      	b.n	e22 <io_printf+0x1e>
    1070:	9b05      	ldr	r3, [sp, #20]
    1072:	1e77      	subs	r7, r6, #1
    1074:	1d1a      	adds	r2, r3, #4
    1076:	681b      	ldr	r3, [r3, #0]
    1078:	9303      	str	r3, [sp, #12]
    107a:	4b0e      	ldr	r3, [pc, #56]	; (10b4 <SV_SIZE+0xb4>)
    107c:	9205      	str	r2, [sp, #20]
    107e:	18f6      	adds	r6, r6, r3
    1080:	00b6      	lsls	r6, r6, #2
    1082:	e00a      	b.n	109a <SV_SIZE+0x9a>
    1084:	9a03      	ldr	r2, [sp, #12]
    1086:	230f      	movs	r3, #15
    1088:	40f2      	lsrs	r2, r6
    108a:	4013      	ands	r3, r2
    108c:	4a08      	ldr	r2, [pc, #32]	; (10b0 <SV_SIZE+0xb0>)
    108e:	1c20      	adds	r0, r4, #0
    1090:	5cd1      	ldrb	r1, [r2, r3]
    1092:	f7ff fddb 	bl	c4c <io_put_char>
    1096:	3f01      	subs	r7, #1
    1098:	3e04      	subs	r6, #4
    109a:	2f00      	cmp	r7, #0
    109c:	daf2      	bge.n	1084 <SV_SIZE+0x84>
    109e:	e6c0      	b.n	e22 <io_printf+0x1e>
    10a0:	b00c      	add	sp, #48	; 0x30
    10a2:	bcf0      	pop	{r4, r5, r6, r7}
    10a4:	bc08      	pop	{r3}
    10a6:	b003      	add	sp, #12
    10a8:	4718      	bx	r3
    10aa:	46c0      	nop			; (mov r8, r8)
    10ac:	0040003c 	.word	0x0040003c
    10b0:	00001107 	.word	0x00001107
    10b4:	3fffffff 	.word	0x3fffffff

000010b8 <__sark_vic_set_from_arm>:
    10b8:	e51ff004 	ldr	pc, [pc, #-4]	; 10bc <__sark_vic_set_from_arm+0x4>
    10bc:	00000a35 	.word	0x00000a35
    10c0:	6b636954 	.word	0x6b636954
    10c4:	0a642520 	.word	0x0a642520
    10c8:	6d695400 	.word	0x6d695400
    10cc:	69207265 	.word	0x69207265
    10d0:	7265746e 	.word	0x7265746e
    10d4:	74707572 	.word	0x74707572
    10d8:	61786520 	.word	0x61786520
    10dc:	656c706d 	.word	0x656c706d
    10e0:	0000000a 	.word	0x0000000a

000010e4 <build_name>:
    10e4:	6d6f682f 6d6a2f65 6f616971 0065442f     /home/jmqiao/De.

000010f4 <build_date>:
    10f4:	557f5022 4b524153 6970532f 6b614e4e     "P.USARK/SpiNNak
    1104:	30007265                                         er.

00001107 <hex>:
    1107:	33323130 37363534 62613938 66656463     0123456789abcdef
	...


hello.elf:     file format elf32-littlearm
hello.elf
architecture: armv5te, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00001a52 memsz 0x00001a52 flags r-x
    LOAD off    0x00010000 vaddr 0x00400000 paddr 0x00400000 align 2**15
         filesz 0x00000008 memsz 0x000006b8 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 RO_DATA       00001a52  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 RW_DATA       00000008  00400000  00400000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 ZI_DATA       000006b0  00400008  00400008  00010008  2**2
                  ALLOC
  3 .comment      00000030  00000000  00000000  00010008  2**0
                  CONTENTS, READONLY
  4 .ARM.attributes 00000027  00000000  00000000  00010038  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  RO_DATA	00000000 RO_DATA
00400000 l    d  RW_DATA	00000000 RW_DATA
00400008 l    d  ZI_DATA	00000000 ZI_DATA
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    df *ABS*	00000000 libsark.o
00000001 l       *ABS*	00000000 GNU
00000000 l       *ABS*	00000000 NULL
80000000 l       *ABS*	00000000 BIT_31
00000001 l       *ABS*	00000000 BUF_WRITE
00000012 l       *ABS*	00000000 NUM_CPUS
00000006 l       *ABS*	00000000 NUM_LINKS
00000000 l       *ABS*	00000000 ITCM_BASE
00008000 l       *ABS*	00000000 ITCM_SIZE
00008000 l       *ABS*	00000000 ITCM_TOP
00400000 l       *ABS*	00000000 DTCM_BASE
00010000 l       *ABS*	00000000 DTCM_SIZE
00410000 l       *ABS*	00000000 DTCM_TOP
70000000 l       *ABS*	00000000 SDRAM_BASE_UNBUF
60000000 l       *ABS*	00000000 SDRAM_BASE_BUF
60000000 l       *ABS*	00000000 SDRAM_BASE
08000000 l       *ABS*	00000000 SDRAM_SIZE
68000000 l       *ABS*	00000000 SDRAM_TOP
f5000000 l       *ABS*	00000000 SYSRAM_BASE_UNBUF
e5000000 l       *ABS*	00000000 SYSRAM_BASE_BUF
e5000000 l       *ABS*	00000000 SYSRAM_BASE
00008000 l       *ABS*	00000000 SYSRAM_SIZE
e5008000 l       *ABS*	00000000 SYSRAM_TOP
f6000000 l       *ABS*	00000000 ROM_BASE
00008000 l       *ABS*	00000000 ROM_SIZE
f6008000 l       *ABS*	00000000 ROM_TOP
10000000 l       *ABS*	00000000 CC_BASE_UNBUF
20000000 l       *ABS*	00000000 CC_BASE_BUF
20000000 l       *ABS*	00000000 CC_BASE
00000000 l       *ABS*	00000000 CC_TCR
00000004 l       *ABS*	00000000 CC_TXDATA
00000008 l       *ABS*	00000000 CC_TXKEY
0000000c l       *ABS*	00000000 CC_RSR
00000010 l       *ABS*	00000000 CC_RXDATA
00000014 l       *ABS*	00000000 CC_RXKEY
00000018 l       *ABS*	00000000 CC_SAR
0000001c l       *ABS*	00000000 CC_TEST
11000000 l       *ABS*	00000000 TIMER_BASE_UNBUF
21000000 l       *ABS*	00000000 TIMER_BASE_BUF
21000000 l       *ABS*	00000000 TIMER_BASE
00000020 l       *ABS*	00000000 TIMER_OFFSET
21000000 l       *ABS*	00000000 TIMER1_BASE
21000020 l       *ABS*	00000000 TIMER2_BASE
00000000 l       *ABS*	00000000 TC_LOAD
00000004 l       *ABS*	00000000 TC_COUNT
00000008 l       *ABS*	00000000 TC_CONTROL
0000000c l       *ABS*	00000000 TC_INT_CLR
00000010 l       *ABS*	00000000 TC_RAW_INT
00000014 l       *ABS*	00000000 TC_MASK_INT
00000018 l       *ABS*	00000000 TC_BG_LOAD
00000000 l       *ABS*	00000000 T1_LOAD
00000004 l       *ABS*	00000000 T1_COUNT
00000008 l       *ABS*	00000000 T1_CONTROL
0000000c l       *ABS*	00000000 T1_INT_CLR
00000010 l       *ABS*	00000000 T1_RAW_INT
00000014 l       *ABS*	00000000 T1_MASK_INT
00000018 l       *ABS*	00000000 T1_BG_LOAD
00000020 l       *ABS*	00000000 T2_LOAD
00000024 l       *ABS*	00000000 T2_COUNT
00000028 l       *ABS*	00000000 T2_CONTROL
0000002c l       *ABS*	00000000 T2_INT_CLR
00000030 l       *ABS*	00000000 T2_RAW_INT
00000034 l       *ABS*	00000000 T2_MASK_INT
00000038 l       *ABS*	00000000 T2_BG_LOAD
1f000000 l       *ABS*	00000000 VIC_BASE_UNBUF
2f000000 l       *ABS*	00000000 VIC_BASE_BUF
2f000000 l       *ABS*	00000000 VIC_BASE
00000000 l       *ABS*	00000000 VIC_IRQST
00000004 l       *ABS*	00000000 VIC_FIQST
00000008 l       *ABS*	00000000 VIC_RAW
0000000c l       *ABS*	00000000 VIC_SELECT
00000010 l       *ABS*	00000000 VIC_ENABLE
00000014 l       *ABS*	00000000 VIC_DISABLE
00000018 l       *ABS*	00000000 VIC_SOFT_SET
0000001c l       *ABS*	00000000 VIC_SOFT_CLR
00000020 l       *ABS*	00000000 VIC_PROTECT
00000030 l       *ABS*	00000000 VIC_VADDR
00000034 l       *ABS*	00000000 VIC_DEFADDR
00000100 l       *ABS*	00000000 VIC_ADDR
00000100 l       *ABS*	00000000 VIC_ADDR0
00000104 l       *ABS*	00000000 VIC_ADDR1
00000108 l       *ABS*	00000000 VIC_ADDR2
0000010c l       *ABS*	00000000 VIC_ADDR3
00000110 l       *ABS*	00000000 VIC_ADDR4
00000114 l       *ABS*	00000000 VIC_ADDR5
00000118 l       *ABS*	00000000 VIC_ADDR6
0000011c l       *ABS*	00000000 VIC_ADDR7
00000120 l       *ABS*	00000000 VIC_ADDR8
00000124 l       *ABS*	00000000 VIC_ADDR9
00000128 l       *ABS*	00000000 VIC_ADDR10
0000012c l       *ABS*	00000000 VIC_ADDR11
00000130 l       *ABS*	00000000 VIC_ADDR12
00000134 l       *ABS*	00000000 VIC_ADDR13
00000138 l       *ABS*	00000000 VIC_ADDR14
0000013c l       *ABS*	00000000 VIC_ADDR15
00000200 l       *ABS*	00000000 VIC_CNTL
00000200 l       *ABS*	00000000 VIC_CNTL0
00000204 l       *ABS*	00000000 VIC_CNTL1
00000208 l       *ABS*	00000000 VIC_CNTL2
0000020c l       *ABS*	00000000 VIC_CNTL3
00000210 l       *ABS*	00000000 VIC_CNTL4
00000214 l       *ABS*	00000000 VIC_CNTL5
00000218 l       *ABS*	00000000 VIC_CNTL6
0000021c l       *ABS*	00000000 VIC_CNTL7
00000220 l       *ABS*	00000000 VIC_CNTL8
00000224 l       *ABS*	00000000 VIC_CNTL9
00000228 l       *ABS*	00000000 VIC_CNTL10
0000022c l       *ABS*	00000000 VIC_CNTL11
00000230 l       *ABS*	00000000 VIC_CNTL12
00000234 l       *ABS*	00000000 VIC_CNTL13
00000238 l       *ABS*	00000000 VIC_CNTL14
0000023c l       *ABS*	00000000 VIC_CNTL15
00000000 l       *ABS*	00000000 WDOG_INT
00000001 l       *ABS*	00000000 SOFTWARE_INT
00000002 l       *ABS*	00000000 COMM_RX_INT
00000003 l       *ABS*	00000000 COMM_TX_INT
00000004 l       *ABS*	00000000 TIMER1_INT
00000005 l       *ABS*	00000000 TIMER2_INT
00000006 l       *ABS*	00000000 CC_RDY_INT
00000007 l       *ABS*	00000000 CC_RPE_INT
00000008 l       *ABS*	00000000 CC_RFE_INT
00000009 l       *ABS*	00000000 CC_TFL_INT
0000000a l       *ABS*	00000000 CC_TOV_INT
0000000b l       *ABS*	00000000 CC_TMT_INT
0000000c l       *ABS*	00000000 DMA_DONE_INT
0000000d l       *ABS*	00000000 DMA_ERR_INT
0000000e l       *ABS*	00000000 DMA_TO_INT
0000000f l       *ABS*	00000000 RTR_DIAG_INT
00000010 l       *ABS*	00000000 RTR_DUMP_INT
00000011 l       *ABS*	00000000 RTR_ERR_INT
00000012 l       *ABS*	00000000 CPU_INT
00000013 l       *ABS*	00000000 ETH_TX_INT
00000014 l       *ABS*	00000000 ETH_RX_INT
00000015 l       *ABS*	00000000 ETH_PHY_INT
00000016 l       *ABS*	00000000 SLOW_CLK_INT
00000017 l       *ABS*	00000000 CC_TNF_INT
00000018 l       *ABS*	00000000 CC_MC_INT
00000019 l       *ABS*	00000000 CC_P2P_INT
0000001a l       *ABS*	00000000 CC_NN_INT
0000001b l       *ABS*	00000000 CC_FR_INT
0000001c l       *ABS*	00000000 INT0_INT
0000001d l       *ABS*	00000000 INT1_INT
0000001e l       *ABS*	00000000 GPIO8_INT
0000001f l       *ABS*	00000000 GPIO9_INT
30000000 l       *ABS*	00000000 DMA_BASE_UNBUF
40000000 l       *ABS*	00000000 DMA_BASE_BUF
40000000 l       *ABS*	00000000 DMA_BASE
00000004 l       *ABS*	00000000 DMA_ADRS
00000008 l       *ABS*	00000000 DMA_ADRT
0000000c l       *ABS*	00000000 DMA_DESC
00000010 l       *ABS*	00000000 DMA_CTRL
00000014 l       *ABS*	00000000 DMA_STAT
00000018 l       *ABS*	00000000 DMA_GCTL
0000001c l       *ABS*	00000000 DMA_CRCC
00000020 l       *ABS*	00000000 DMA_CRCR
00000024 l       *ABS*	00000000 DMA_TMTV
00000028 l       *ABS*	00000000 DMA_SCTL
00000040 l       *ABS*	00000000 DMA_STAT0
00000044 l       *ABS*	00000000 DMA_STAT1
00000048 l       *ABS*	00000000 DMA_STAT2
0000004c l       *ABS*	00000000 DMA_STAT3
00000050 l       *ABS*	00000000 DMA_STAT4
00000054 l       *ABS*	00000000 DMA_STAT5
00000058 l       *ABS*	00000000 DMA_STAT6
0000005c l       *ABS*	00000000 DMA_STAT7
00000104 l       *ABS*	00000000 DMA_AD2S
00000108 l       *ABS*	00000000 DMA_AD2T
0000010c l       *ABS*	00000000 DMA_DES2
00000180 l       *ABS*	00000000 DMA_CRCT
f0000000 l       *ABS*	00000000 PL340_BASE_UNBUF
e0000000 l       *ABS*	00000000 PL340_BASE_BUF
e0000000 l       *ABS*	00000000 PL340_BASE
00000000 l       *ABS*	00000000 MC_STAT
00000004 l       *ABS*	00000000 MC_CMD
00000008 l       *ABS*	00000000 MC_DIRC
0000000c l       *ABS*	00000000 MC_MCFG
00000010 l       *ABS*	00000000 MC_REFP
00000014 l       *ABS*	00000000 MC_CASL
00000018 l       *ABS*	00000000 MC_DQSS
0000001c l       *ABS*	00000000 MC_MRD
00000020 l       *ABS*	00000000 MC_RAS
00000024 l       *ABS*	00000000 MC_RC
00000028 l       *ABS*	00000000 MC_RCD
0000002c l       *ABS*	00000000 MC_RFC
00000030 l       *ABS*	00000000 MC_RP
00000034 l       *ABS*	00000000 MC_RRD
00000038 l       *ABS*	00000000 MC_WR
0000003c l       *ABS*	00000000 MC_WTR
00000040 l       *ABS*	00000000 MC_XP
00000044 l       *ABS*	00000000 MC_XSR
00000048 l       *ABS*	00000000 MC_ESR
0000004c l       *ABS*	00000000 MC_MCFG2
00000050 l       *ABS*	00000000 MC_MCFG3
00000100 l       *ABS*	00000000 MC_QOS0
00000104 l       *ABS*	00000000 MC_QOS1
00000108 l       *ABS*	00000000 MC_QOS2
0000010c l       *ABS*	00000000 MC_QOS3
00000110 l       *ABS*	00000000 MC_QOS4
00000114 l       *ABS*	00000000 MC_QOS5
00000118 l       *ABS*	00000000 MC_QOS6
0000011c l       *ABS*	00000000 MC_QOS7
00000120 l       *ABS*	00000000 MC_QOS8
00000124 l       *ABS*	00000000 MC_QOS9
00000128 l       *ABS*	00000000 MC_QOS10
0000012c l       *ABS*	00000000 MC_QOS11
00000130 l       *ABS*	00000000 MC_QOS12
00000134 l       *ABS*	00000000 MC_QOS13
00000138 l       *ABS*	00000000 MC_QOS14
0000013c l       *ABS*	00000000 MC_QOS15
00000200 l       *ABS*	00000000 MC_CCFG0
00000204 l       *ABS*	00000000 MC_CCFG1
00000208 l       *ABS*	00000000 MC_CCFG2
0000020c l       *ABS*	00000000 MC_CCFG3
00000300 l       *ABS*	00000000 DLL_STATUS
00000304 l       *ABS*	00000000 DLL_CONFIG0
00000308 l       *ABS*	00000000 DLL_CONFIG1
f1000000 l       *ABS*	00000000 RTR_BASE_UNBUF
e1000000 l       *ABS*	00000000 RTR_BASE_BUF
e1000000 l       *ABS*	00000000 RTR_BASE
00000000 l       *ABS*	00000000 RTR_CONTROL
00000004 l       *ABS*	00000000 RTR_STATUS
00000008 l       *ABS*	00000000 RTR_EHDR
0000000c l       *ABS*	00000000 RTR_EKEY
00000010 l       *ABS*	00000000 RTR_EDAT
00000014 l       *ABS*	00000000 RTR_ESTAT
00000018 l       *ABS*	00000000 RTR_DHDR
0000001c l       *ABS*	00000000 RTR_DKEY
00000020 l       *ABS*	00000000 RTR_DDAT
00000024 l       *ABS*	00000000 RTR_DLINK
00000028 l       *ABS*	00000000 RTR_DSTAT
0000002c l       *ABS*	00000000 RTR_DGEN
00000200 l       *ABS*	00000000 RTR_DGF0
00000204 l       *ABS*	00000000 RTR_DGF1
00000208 l       *ABS*	00000000 RTR_DGF2
0000020c l       *ABS*	00000000 RTR_DGF3
00000210 l       *ABS*	00000000 RTR_DGF4
00000214 l       *ABS*	00000000 RTR_DGF5
00000218 l       *ABS*	00000000 RTR_DGF6
0000021c l       *ABS*	00000000 RTR_DGF7
00000220 l       *ABS*	00000000 RTR_DGF8
00000224 l       *ABS*	00000000 RTR_DGF9
00000228 l       *ABS*	00000000 RTR_DGF10
0000022c l       *ABS*	00000000 RTR_DGF11
00000230 l       *ABS*	00000000 RTR_DGF12
00000234 l       *ABS*	00000000 RTR_DGF13
00000238 l       *ABS*	00000000 RTR_DGF14
0000023c l       *ABS*	00000000 RTR_DGF15
00000300 l       *ABS*	00000000 RTR_DGC0
00000304 l       *ABS*	00000000 RTR_DGC1
00000308 l       *ABS*	00000000 RTR_DGC2
0000030c l       *ABS*	00000000 RTR_DGC3
00000310 l       *ABS*	00000000 RTR_DGC4
00000314 l       *ABS*	00000000 RTR_DGC5
00000318 l       *ABS*	00000000 RTR_DGC6
0000031c l       *ABS*	00000000 RTR_DGC7
00000320 l       *ABS*	00000000 RTR_DGC8
00000324 l       *ABS*	00000000 RTR_DGC9
00000328 l       *ABS*	00000000 RTR_DGC10
0000032c l       *ABS*	00000000 RTR_DGC11
00000330 l       *ABS*	00000000 RTR_DGC12
00000334 l       *ABS*	00000000 RTR_DGC13
00000338 l       *ABS*	00000000 RTR_DGC14
0000033c l       *ABS*	00000000 RTR_DGC15
00000f00 l       *ABS*	00000000 RTR_TST1
00000f04 l       *ABS*	00000000 RTR_TST2
00002000 l       *ABS*	00000000 P2P_TABLE_SIZE
00000400 l       *ABS*	00000000 MC_TABLE_SIZE
00000018 l       *ABS*	00000000 MC_RAM_WIDTH
00ffffff l       *ABS*	00000000 MC_RAM_MASK
00000008 l       *ABS*	00000000 P2P_EPW
00000003 l       *ABS*	00000000 P2P_LOG_EPW
00000007 l       *ABS*	00000000 P2P_EMASK
00000003 l       *ABS*	00000000 P2P_BPE
00000007 l       *ABS*	00000000 P2P_BMASK
00db6db6 l       *ABS*	00000000 P2P_INIT
e1004000 l       *ABS*	00000000 RTR_MCRAM_BASE
e1005000 l       *ABS*	00000000 RTR_MCRAM_TOP
e1008000 l       *ABS*	00000000 RTR_MCKEY_BASE
e1009000 l       *ABS*	00000000 RTR_MCKEY_TOP
e100c000 l       *ABS*	00000000 RTR_MCMASK_BASE
e100d000 l       *ABS*	00000000 RTR_MCMASK_TOP
e1010000 l       *ABS*	00000000 RTR_P2P_BASE
e1018000 l       *ABS*	00000000 RTR_P2P_TOP
00000020 l       *ABS*	00000000 MC_CAM_WIDTH
f2000000 l       *ABS*	00000000 SYSCTL_BASE_UNBUF
e2000000 l       *ABS*	00000000 SYSCTL_BASE_BUF
e2000000 l       *ABS*	00000000 SYSCTL_BASE
5ec00000 l       *ABS*	00000000 SC_CODE
59111012 l       *ABS*	00000000 CHIP_ID_CODE
00000000 l       *ABS*	00000000 SC_CHIP_ID
00000004 l       *ABS*	00000000 SC_CPU_DIS
00000008 l       *ABS*	00000000 SC_SET_IRQ
0000000c l       *ABS*	00000000 SC_CLR_IRQ
00000010 l       *ABS*	00000000 SC_SET_OK
00000010 l       *ABS*	00000000 SC_CPU_OK
00000014 l       *ABS*	00000000 SC_CLR_OK
00000018 l       *ABS*	00000000 SC_SOFT_RST_L
0000001c l       *ABS*	00000000 SC_HARD_RST_L
00000020 l       *ABS*	00000000 SC_SUBS_RST_L
00000024 l       *ABS*	00000000 SC_SOFT_RST_P
00000028 l       *ABS*	00000000 SC_HARD_RST_P
0000002c l       *ABS*	00000000 SC_SUBS_RST_P
00000030 l       *ABS*	00000000 SC_RST_CODE
00000034 l       *ABS*	00000000 SC_MON_ID
00000038 l       *ABS*	00000000 SC_MISC_CTRL
0000003c l       *ABS*	00000000 GPIO_RES
00000040 l       *ABS*	00000000 GPIO_PORT
00000044 l       *ABS*	00000000 GPIO_DIR
00000048 l       *ABS*	00000000 GPIO_SET
0000004c l       *ABS*	00000000 GPIO_CLR
00000048 l       *ABS*	00000000 GPIO_READ
00000050 l       *ABS*	00000000 SC_PLL1
00000054 l       *ABS*	00000000 SC_PLL2
00000058 l       *ABS*	00000000 SC_FLAG
00000058 l       *ABS*	00000000 SC_SETFLAG
0000005c l       *ABS*	00000000 SC_CLRFLAG
00000060 l       *ABS*	00000000 SC_CLKMUX
00000064 l       *ABS*	00000000 SC_SLEEP
00000068 l       *ABS*	00000000 SC_TS0
0000006c l       *ABS*	00000000 SC_TS1
00000070 l       *ABS*	00000000 SC_TS2
00000080 l       *ABS*	00000000 SC_ARB0
00000100 l       *ABS*	00000000 SC_TAS0
00000180 l       *ABS*	00000000 SC_TAC0
00000200 l       *ABS*	00000000 SC_LINK_DIS
00000000 l       *ABS*	00000000 RST_POR
00000001 l       *ABS*	00000000 RST_WDT
00000002 l       *ABS*	00000000 RST_USER
00000003 l       *ABS*	00000000 RST_SW
00000004 l       *ABS*	00000000 RST_WDI
f3000000 l       *ABS*	00000000 WDOG_BASE_UNBUF
e3000000 l       *ABS*	00000000 WDOG_BASE_BUF
e3000000 l       *ABS*	00000000 WDOG_BASE
00000000 l       *ABS*	00000000 WD_LOAD
00000004 l       *ABS*	00000000 WD_COUNT
00000008 l       *ABS*	00000000 WD_CTRL
0000000c l       *ABS*	00000000 WD_INTCLR
00000010 l       *ABS*	00000000 WD_RAWINT
00000014 l       *ABS*	00000000 WD_MSKINT
00000c00 l       *ABS*	00000000 WD_LOCK
1acce551 l       *ABS*	00000000 WD_CODE
00000001 l       *ABS*	00000000 WD_INT_B
00000002 l       *ABS*	00000000 WD_RST_B
f4000000 l       *ABS*	00000000 ETH_BASE_UNBUF
e4000000 l       *ABS*	00000000 ETH_BASE_BUF
e4000000 l       *ABS*	00000000 ETH_BASE
e4000000 l       *ABS*	00000000 ETH_TX_BASE
00000600 l       *ABS*	00000000 ETH_TX_SIZE
e4000600 l       *ABS*	00000000 ETH_TX_TOP
e4004000 l       *ABS*	00000000 ETH_RX_BASE
00000c00 l       *ABS*	00000000 ETH_RX_SIZE
e4004c00 l       *ABS*	00000000 ETH_RX_TOP
e4008000 l       *ABS*	00000000 ETH_RX_DESC_RAM
e400c000 l       *ABS*	00000000 ETH_REGS
00000000 l       *ABS*	00000000 ETH_CONTROL
00000004 l       *ABS*	00000000 ETH_STATUS
00000008 l       *ABS*	00000000 ETH_TX_LEN
0000000c l       *ABS*	00000000 ETH_TX_CMD
00000010 l       *ABS*	00000000 ETH_RX_CMD
00000014 l       *ABS*	00000000 ETH_MAC_LO
00000018 l       *ABS*	00000000 ETH_MAC_HI
0000001c l       *ABS*	00000000 ETH_PHY_CTRL
00000020 l       *ABS*	00000000 ETH_INT_CLR
00000024 l       *ABS*	00000000 ETH_RX_BUF_RP
0000002c l       *ABS*	00000000 ETH_RX_DESC_RP
00000001 l       *ABS*	00000000 ETH_TX_CLR
00000010 l       *ABS*	00000000 ETH_RX_CLR
00000001 l       *ABS*	00000000 PHY_CTRL_NRST
00000002 l       *ABS*	00000000 PHY_CTRL_DIN
00000004 l       *ABS*	00000000 PHY_CTRL_DOUT
00000008 l       *ABS*	00000000 PHY_CTRL_OE
00000010 l       *ABS*	00000000 PHY_CTRL_CLK
00000000 l       *ABS*	00000000 PKT_MC
00400000 l       *ABS*	00000000 PKT_P2P
00800000 l       *ABS*	00000000 PKT_NN
00a00000 l       *ABS*	00000000 PKT_NND
00c00000 l       *ABS*	00000000 PKT_FR
00020000 l       *ABS*	00000000 PKT_PL
00020000 l       *ABS*	00000000 PKT_MC_PL
00420000 l       *ABS*	00000000 PKT_P2P_PL
00820000 l       *ABS*	00000000 PKT_NN_PL
00c20000 l       *ABS*	00000000 PKT_FR_PL
0000000a l       *ABS*	00000000 CLK_XTAL_MHZ
0007011a l       *ABS*	00000000 PLL_260
0007011e l       *ABS*	00000000 PLL_300
00070121 l       *ABS*	00000000 PLL_330
00070128 l       *ABS*	00000000 PLL_400
00000050 l       *ABS*	00000000 PLL_LOCK_TIME
809488a5 l       *ABS*	00000000 PLL_CLK_SEL
00000020 l       *ABS*	00000000 SERIAL_NCS
00000010 l       *ABS*	00000000 SERIAL_CLK
00000008 l       *ABS*	00000000 SERIAL_SI
00000004 l       *ABS*	00000000 SERIAL_SO
00000038 l       *ABS*	00000000 SERIAL_OE
80000000 l       *ABS*	00000000 SDRAM_TQ
40000000 l       *ABS*	00000000 SDRAM_DPD
20000000 l       *ABS*	00000000 SDRAM_HERE
00000001 l       *ABS*	00000000 LED_0
00000010 l       *ABS*	00000000 MODE_USER
00000011 l       *ABS*	00000000 MODE_FIQ
00000012 l       *ABS*	00000000 MODE_IRQ
00000013 l       *ABS*	00000000 MODE_SVC
00000017 l       *ABS*	00000000 MODE_ABT
0000001b l       *ABS*	00000000 MODE_UND
0000001f l       *ABS*	00000000 MODE_SYS
00000020 l       *ABS*	00000000 THUMB_BIT
00000080 l       *ABS*	00000000 IMASK_IRQ
00000040 l       *ABS*	00000000 IMASK_FIQ
000000c0 l       *ABS*	00000000 IMASK_ALL
00000001 l       *ABS*	00000000 SARK_EVENT
00000180 l       *ABS*	00000000 SVC_STACK
00000100 l       *ABS*	00000000 IRQ_STACK
00000100 l       *ABS*	00000000 FIQ_STACK
00000004 l       *ABS*	00000000 NUM_SDP_MSGS
0000000f l       *ABS*	00000000 SARK_SLOT
00000010 l       *ABS*	00000000 INIT_EVENTS
deaddead l       *ABS*	00000000 DEAD_WORD
00000001 l       *ABS*	00000000 APLX_ACOPY
00000002 l       *ABS*	00000000 APLX_RCOPY
00000003 l       *ABS*	00000000 APLX_FILL
00000004 l       *ABS*	00000000 APLX_EXEC
000000ff l       *ABS*	00000000 APLX_END
00000010 l       *ABS*	00000000 APLX_ENTRY_SIZE
00000040 l       *ABS*	00000000 APLX_BUF_SIZE
00007fc0 l       *ABS*	00000000 APLX_BUFFER
000000ff l       *ABS*	00000000 TAG_NONE
00000000 l       *ABS*	00000000 TAG_HOST
00000001 l       *ABS*	00000000 RTR_ALLOC_FIRST
00000400 l       *ABS*	00000000 RTR_ALLOC_LAST
000003ff l       *ABS*	00000000 RTR_ALLOC_MAX
00000001 l       *ABS*	00000000 ALLOC_LOCK
00000002 l       *ABS*	00000000 ALLOC_ID
00000005 l       *ABS*	00000000 A_LOCK_SEMA
00000001 l       *ABS*	00000000 A_RTE_RESET
00000002 l       *ABS*	00000000 A_RTE_UNDEF
00000003 l       *ABS*	00000000 A_RTE_SVC
00000004 l       *ABS*	00000000 A_RTE_PABT
00000005 l       *ABS*	00000000 A_RTE_DABT
00000006 l       *ABS*	00000000 A_RTE_IRQ
00000007 l       *ABS*	00000000 A_RTE_FIQ
00000008 l       *ABS*	00000000 A_RTE_VIC
00000002 l       *ABS*	00000000 A_STATE_RTE
00000006 l       *ABS*	00000000 EVENT_COUNT
00000000 l       *ABS*	00000000 CMD_VER
00000001 l       *ABS*	00000000 CMD_RUN
00000002 l       *ABS*	00000000 CMD_READ
00000003 l       *ABS*	00000000 CMD_WRITE
00000004 l       *ABS*	00000000 CMD_APLX
00000005 l       *ABS*	00000000 CMD_FILL
00000010 l       *ABS*	00000000 CMD_REMAP
00000011 l       *ABS*	00000000 CMD_LINK_READ
00000012 l       *ABS*	00000000 CMD_LINK_WRITE
00000013 l       *ABS*	00000000 CMD_AR
00000014 l       *ABS*	00000000 CMD_NNP
00000015 l       *ABS*	00000000 CMD_P2PC
00000016 l       *ABS*	00000000 CMD_SIG
00000017 l       *ABS*	00000000 CMD_FFD
00000018 l       *ABS*	00000000 CMD_AS
00000019 l       *ABS*	00000000 CMD_LED
0000001a l       *ABS*	00000000 CMD_IPTAG
0000001b l       *ABS*	00000000 CMD_SROM
0000001c l       *ABS*	00000000 CMD_ALLOC
0000001d l       *ABS*	00000000 CMD_RTR
00000040 l       *ABS*	00000000 CMD_TUBE
00000080 l       *ABS*	00000000 RC_OK
00000081 l       *ABS*	00000000 RC_LEN
00000082 l       *ABS*	00000000 RC_SUM
00000083 l       *ABS*	00000000 RC_CMD
00000084 l       *ABS*	00000000 RC_ARG
00000085 l       *ABS*	00000000 RC_PORT
00000086 l       *ABS*	00000000 RC_TIMEOUT
00000087 l       *ABS*	00000000 RC_ROUTE
00000088 l       *ABS*	00000000 RC_CPU
00000089 l       *ABS*	00000000 RC_DEAD
0000008a l       *ABS*	00000000 RC_BUF
0000008b l       *ABS*	00000000 RC_P2P_NOREPLY
0000008c l       *ABS*	00000000 RC_P2P_REJECT
0000008d l       *ABS*	00000000 RC_P2P_BUSY
0000008e l       *ABS*	00000000 RC_P2P_TIMEOUT
0000008f l       *ABS*	00000000 RC_PKT_TX
00000000 l       *ABS*	00000000 TYPE_BYTE
00000001 l       *ABS*	00000000 TYPE_HALF
00000002 l       *ABS*	00000000 TYPE_WORD
00000005 l       *ABS*	00000000 PORT_SHIFT
000000e0 l       *ABS*	00000000 PORT_MASK
0000001f l       *ABS*	00000000 CPU_MASK
000000ff l       *ABS*	00000000 PORT_ETH
00000100 l       *ABS*	00000000 SDP_BUF_SIZE
00000080 l       *ABS*	00000000 VCPU_SIZE
0000002c l       *ABS*	00000000 VCPU_RT_CODE
0000002d l       *ABS*	00000000 VCPU_CPU_FLAGS
0000002e l       *ABS*	00000000 VCPU_CPU_STATE
0000002f l       *ABS*	00000000 VCPU_APP_ID
0000001c l       *ABS*	00000000 SARK_MSG_INT
0000001d l       *ABS*	00000000 SARK_SIG_INT
00000000 l       *ABS*	00000000 SARK_VIRT_CPU
00000008 l       *ABS*	00000000 SARK_RANDOM
00000030 l       *ABS*	00000000 SARK_CPU_CLK
00000020 l       *ABS*	00000000 SV_SSIZE
00000060 l       *ABS*	00000000 SV_USIZE
00000080 l       *ABS*	00000000 SV_ISIZE
00000020 l       *ABS*	00000000 SV_VSIZE
00000040 l       *ABS*	00000000 SV_RSIZE
00001000 l       *ABS*	00000000 SV_SIZE
e5007fe0 l       *ABS*	00000000 SV_SROM
e5007f80 l       *ABS*	00000000 SV_UBASE
e5007f00 l       *ABS*	00000000 SV_IBASE
e5007f00 l       *ABS*	00000000 SV_SV
00000100 l       *ABS*	00000000 SYS_BOOT
e5007000 l       *ABS*	00000000 SYS_USER_TOP
e5000100 l       *ABS*	00000000 SYS_USER_BASE
e5007ee0 l       *ABS*	00000000 SV_VECTORS
e5007ea0 l       *ABS*	00000000 SV_RANDOM
e5007000 l       *ABS*	00000000 SV_VCPU
e5007900 l       *ABS*	00000000 SV_SPARE
000005a0 l       *ABS*	00000000 SPARE_SIZE
e5007fe0 l       *ABS*	00000000 SROM_FLAG_BASE
e5007f80 l       *ABS*	00000000 STATUS_MAP_BASE
e5007ee0 l       *ABS*	00000000 RST_BLOCK_BASE
00008000 l       *ABS*	00000000 SRF_PRESENT
000000f0 l       *ABS*	00000000 SRF_HW_VER
00000008 l       *ABS*	00000000 SRF_PHY_INIT
00000004 l       *ABS*	00000000 SRF_PHY_RST
00000002 l       *ABS*	00000000 SRF_PHY_WAIT
00000001 l       *ABS*	00000000 SRF_ETH
00000000 l       *ABS*	00000000 SRF_NONE
00000020 l       RO_DATA	00000000 reset_vec
00000004 l       RO_DATA	00000000 undef
00000024 l       RO_DATA	00000000 undef_vec
00000028 l       RO_DATA	00000000 svc_vec
0000002c l       RO_DATA	00000000 pabt_vec
00000030 l       RO_DATA	00000000 dabt_vec
0000003c l       RO_DATA	00000000 fiq_vec
00000078 l       RO_DATA	00000000 reset_entry
000000d8 l       RO_DATA	00000000 undef_error
000000e0 l       RO_DATA	00000000 svc_error
000000e8 l       RO_DATA	00000000 pabt_error
000000f0 l       RO_DATA	00000000 dabt_error
00000034 l       RO_DATA	00000000 aplx_proc
00000038 l       RO_DATA	00000000 irq_vec
000000f8 l       RO_DATA	00000000 irq_error
00000100 l       RO_DATA	00000000 fiq_error
00000040 l       RO_DATA	00000000 svc_stack
00000042 l       RO_DATA	00000000 irq_stack
00000044 l       RO_DATA	00000000 fiq_stack
00000046 l       RO_DATA	00000000 stack_size
00000048 l       RO_DATA	00000000 code_top
0000004c l       RO_DATA	00000000 heap_base
00000050 l       RO_DATA	00000000 stack_top
00000054 l       RO_DATA	00000000 stack_fill
00000058 l       RO_DATA	00000000 num_msgs
00000059 l       RO_DATA	00000000 sark_slot
0000005a l       RO_DATA	00000000 num_events
0000005b l       RO_DATA	00000000 api
0000005c l       RO_DATA	00000000 app_id
0000005d l       RO_DATA	00000000 app_flags
0000005e l       RO_DATA	00000000 __PAD
00000060 l       RO_DATA	00000000 event_vec
000000d0 l       RO_DATA	00000000 reset_error
00000114 l       RO_DATA	00000000 exc_error
00000138 l       RO_DATA	00000000 cc_error
000001ec l       RO_DATA	00000000 lg1
00000228 l       RO_DATA	00000000 ws1
00000288 l       RO_DATA	00000000 wc2
00000270 l       RO_DATA	00000000 wc1
00000368 l       RO_DATA	00000000 aplx_buffer
0000036c l       RO_DATA	00000000 aplx_loader
00000358 l       RO_DATA	00000000 aplx_l0
00000384 l       RO_DATA	00000000 aplx_copy
00000380 l       RO_DATA	00000000 aplx_rcopy
00000392 l       RO_DATA	00000000 aplx_fill
000003a2 l       RO_DATA	00000000 aplx_exec
00000398 l       RO_DATA	00000000 aplx_l1
00000000 l    df *ABS*	00000000 sark_base.c
00000000 l    df *ABS*	00000000 sark_event.c
00000000 l    df *ABS*	00000000 sark_timer.c
00000000 l    df *ABS*	00000000 sark_hw.c
00000000 l    df *ABS*	00000000 sark_isr.c
00000000 l    df *ABS*	00000000 sark_alloc.c
00000000 l    df *ABS*	00000000 sark_io.c
00000bbc l     F RO_DATA	00000040 io_buf_init
00000cf0 l     F RO_DATA	000000c2 io_put_fixed
00400008 l     O ZI_DATA	00000004 io_msg
0000192b l     O RO_DATA	00000011 hex
0040000c l     O ZI_DATA	00000004 io_buf
00400010 l     O ZI_DATA	00000004 buf_ptr
00400014 l     O ZI_DATA	00000004 sp_ptr
00000000 l    df *ABS*	00000000 sark_pkt.c
00000000 l    df *ABS*	00000000 
00000000 l    df *ABS*	00000000 hello.c
00000000 l    df *ABS*	00000000 spin1_api.c
00400018 l     O ZI_DATA	00000004 warnings
00400000 l     O RW_DATA	00000004 dma_id
0040001c l     O ZI_DATA	00000004 fullq
00400020 l     O ZI_DATA	00000004 timer_tick
00400024 l     O ZI_DATA	00000004 pfull
00400028 l     O ZI_DATA	00000004 dfull
00400030 l     O ZI_DATA	00000004 exit_val
00400034 l     O ZI_DATA	00000320 task_queue
00400354 l     O ZI_DATA	00000004 run
00000000 l    df *ABS*	00000000 spin1_isr.c
00000000 l    df *ABS*	00000000 sark_build.c
00000000 l    df *ABS*	00000000 
00000040 l       *ABS*	00000000 RO_FROM
00000010 l       *ABS*	00000000 APLX_ENTRY
00001a84 l       *ABS*	00000000 RW_FROM
00000000 l       *UND*	00000000 __deregister_frame_info
00000000 l       *UND*	00000000 _ITM_registerTMCloneTable
00400000 l       *ABS*	00000000 DTCM_BASE
00400000 l       *ABS*	00000000 RW_BASE
00000008 l       *ABS*	00000000 RW_LENGTH
00000040 l       *ABS*	00000000 APLX_SIZE
00000000 l       *UND*	00000000 _ITM_deregisterTMCloneTable
00400008 l       *ABS*	00000000 ZI_BASE
00000000 l       *ABS*	00000000 RO_BASE
00000000 l       *ABS*	00000000 ITCM_BASE
00000000 l       *UND*	00000000 _Jv_RegisterClasses
00000000 l       *UND*	00000000 __register_frame_info
000006b0 l       *ABS*	00000000 ZI_LENGTH
0040042c g     O ZI_DATA	00000004 old_vector
000013a0 g     F RO_DATA	000000f0 spin1_start
000001d8 g     F RO_DATA	00000000 sark_lock_get
000014f8 g     F RO_DATA	0000002c sark_pre_main
00000484 g     F RO_DATA	00000034 sark_shmsg_get
000001a8 g     F RO_DATA	00000000 spin1_int_enable
00000800 g       *ABS*	00000000 STACK_SIZE
0000033e g     F RO_DATA	00000000 sark_bx
00000248 g     F RO_DATA	00000000 sark_msg_cpy
000009c8 g     F RO_DATA	0000003c event_alloc
0000126c g     F RO_DATA	0000006c clean_up
00000414 g     F RO_DATA	0000001e sark_block_init
00001770 g     F RO_DATA	00000058 timer1_isr
00000a9c g     F RO_DATA	00000028 sark_fiq_han
00000464 g     F RO_DATA	00000020 sark_msg_free
00001808 g     F RO_DATA	00000068 soft_int_isr
00001068 g     F RO_DATA	00000028 configure_dma_controller
000003a8 g     F RO_DATA	0000003c c_main
000007b4 g     F RO_DATA	00000174 sark_int
000010c0 g     F RO_DATA	00000130 configure_vic
000002dc g     F RO_DATA	00000000 sark_int_han
00000928 g     F RO_DATA	0000005c event_wait
000007a0 g     F RO_DATA	00000012 sark_wait
000001c8 g     F RO_DATA	00000000 spin1_mode_restore
00000790 g     F RO_DATA	00000010 sark_cmd_fill
00000a04 g     F RO_DATA	00000050 sark_vic_init
000016f8 g     F RO_DATA	00000078 dma_done_fiqsr
0000016c g     F RO_DATA	00000000 cpu_shutdown
000001c8 g     F RO_DATA	00000000 cpu_int_restore
00400430 g     O ZI_DATA	0000002c diagnostics
00410000 g       *ABS*	00000000 STACK_TOP
004006b8 g       ZI_DATA	00000000 HEAP_BASE
00000ac4 g     F RO_DATA	000000c8 sark_xalloc
0040045c g     O ZI_DATA	00000004 old_enable
00001090 g     F RO_DATA	00000030 configure_timer1
00000340 g     F RO_DATA	00000000 __gnu_thumb1_case_uqi
00400460 g     O ZI_DATA	00000004 user_arg1
000004b8 g     F RO_DATA	00000024 sark_shmsg_free
00000310 g     F RO_DATA	00000000 schedule
000015e0 g     F RO_DATA	0000008c cc_tx_empty_isr
0000012c g       RO_DATA	00000000 rt_error
000015a8 g     F RO_DATA	00000038 cc_rx_ready_fiqsr
000003f0 g     F RO_DATA	00000010 sark_cpu_state
0040002c g     O ZI_DATA	00000001 user_pending
00001524 g     F RO_DATA	0000000a sark_post_main
00000000 g       RO_DATA	00000000 cpu_reset
000002ac g     F RO_DATA	00000000 sark_div10
00000108 g       RO_DATA	00000000 vic_error
00001910 g     O RO_DATA	00000006 build_name
0000033c  w    F RO_DATA	00000000 sark_config
00000984 g     F RO_DATA	0000002c event_pause
00001918 g     O RO_DATA	00000004 build_date
000001fc g     F RO_DATA	00000000 sark_lock_free
00000b8c g     F RO_DATA	00000018 sark_alloc
00001870 g     F RO_DATA	00000050 soft_int_fiqsr
000011f0 g     F RO_DATA	0000007c dispatch
00000190 g     F RO_DATA	00000000 cpu_init_mode
00000258 g     F RO_DATA	00000000 sark_word_cpy
0000017c g     F RO_DATA	00000000 cpu_sleep
00400004 g     O RW_DATA	00000004 fiq_event
00400464 g     O ZI_DATA	00000001 leadAp
00400358 g     O ZI_DATA	0000003c sark
000005d8 g     F RO_DATA	000000a8 sark_msg_send
000001d0 g     F RO_DATA	00000000 spin1_wfi
00000680 g     F RO_DATA	00000040 sark_cmd_ver
000001d0 g     F RO_DATA	00000000 cpu_wfi
000009b0 g     F RO_DATA	00000018 event_stop
000001b8 g     F RO_DATA	00000000 cpu_int_disable
00000a54 g     F RO_DATA	00000048 sark_vic_set
00400468 g     O ZI_DATA	00000004 thrown
00000ba4 g     F RO_DATA	00000018 sark_heap_init
00400394 g     O ZI_DATA	00000098 event
00000726 g     F RO_DATA	0000006a sark_cmd_write
00001530 g     F RO_DATA	00000078 cc_rx_ready_isr
000004dc  w    F RO_DATA	000000fc sark_init
000003e4  w    F RO_DATA	0000000c rte_handler
00000350 g     F RO_DATA	00000000 sark_aplx
000012d8 g     F RO_DATA	0000006c report_debug
00000db4 g     F RO_DATA	000002b4 io_printf
0040046c g     O ZI_DATA	00000148 dma_queue
00000224 g     F RO_DATA	00000000 sark_word_set
004005b4 g     O ZI_DATA	00000004 old_select
00001344 g     F RO_DATA	0000005c report_warns
0000166c g     F RO_DATA	0000008c dma_done_isr
004005b8 g     O ZI_DATA	00000004 ticks
0000030c g     F RO_DATA	00000000 null_int_han
00001490 g     F RO_DATA	00000068 schedule_sysmode
000017c8 g     F RO_DATA	00000040 timer1_fiqsr
00000210 g     F RO_DATA	00000000 sark_str_cpy
000001a8 g     F RO_DATA	00000000 cpu_int_enable
004005bc g     O ZI_DATA	00000004 user_arg0
00000400 g     F RO_DATA	00000014 sark_app_lead
004005c0 g     O ZI_DATA	00000030 callback
00000bfc g     F RO_DATA	000000f4 io_put_char
000001b8 g     F RO_DATA	00000000 spin1_int_disable
000006c0 g     F RO_DATA	00000066 sark_cmd_read
00001a54 g       *ABS*	00000000 RO_LENGTH
00000434 g     F RO_DATA	00000030 sark_msg_get
004005f0 g     O ZI_DATA	000000c8 tx_packet_queue



Disassembly of section RO_DATA:

00000000 <cpu_reset>:
       0:	e59ff018 	ldr	pc, [pc, #24]	; 20 <reset_vec>

00000004 <undef>:
       4:	e59ff018 	ldr	pc, [pc, #24]	; 24 <undef_vec>
       8:	e59ff018 	ldr	pc, [pc, #24]	; 28 <svc_vec>
       c:	e59ff018 	ldr	pc, [pc, #24]	; 2c <pabt_vec>
      10:	e59ff018 	ldr	pc, [pc, #24]	; 30 <dabt_vec>
      14:	ebfffffa 	bl	4 <undef>
      18:	e51ffff0 	ldr	pc, [pc, #-4080]	; fffff030 <ROM_TOP+0x9ff7030>
      1c:	e59ff018 	ldr	pc, [pc, #24]	; 3c <fiq_vec>

00000020 <reset_vec>:
      20:	00000078 	.word	0x00000078

00000024 <undef_vec>:
      24:	000000d8 	.word	0x000000d8

00000028 <svc_vec>:
      28:	000000e0 	.word	0x000000e0

0000002c <pabt_vec>:
      2c:	000000e8 	.word	0x000000e8

00000030 <dabt_vec>:
      30:	000000f0 	.word	0x000000f0

00000034 <aplx_proc>:
      34:	00000351 	.word	0x00000351

00000038 <irq_vec>:
      38:	000000f8 	.word	0x000000f8

0000003c <fiq_vec>:
      3c:	00000100 	.word	0x00000100

00000040 <svc_stack>:
      40:	0060      	.short	0x0060

00000042 <irq_stack>:
      42:	0040      	.short	0x0040

00000044 <fiq_stack>:
      44:	0040      	.short	0x0040

00000046 <stack_size>:
      46:	0800      	.short	0x0800

00000048 <code_top>:
      48:	00001a54 	.word	0x00001a54

0000004c <heap_base>:
      4c:	004006b8 	.word	0x004006b8

00000050 <stack_top>:
      50:	00410000 	.word	0x00410000

00000054 <stack_fill>:
      54:	deaddead 	.word	0xdeaddead

00000058 <num_msgs>:
      58:	04          	.byte	0x04

00000059 <sark_slot>:
      59:	0f          	.byte	0x0f

0000005a <num_events>:
      5a:	10          	.byte	0x10

0000005b <api>:
	...

0000005c <app_id>:
	...

0000005d <app_flags>:
	...

0000005e <__PAD>:
	...

00000060 <event_vec>:
	...

00000078 <reset_entry>:
      78:	e24f1060 	sub	r1, pc, #96	; 0x60
      7c:	e1c103bc 	strh	r0, [r1, #60]	; 0x3c
      80:	e28f0048 	add	r0, pc, #72	; 0x48
      84:	e5810000 	str	r0, [r1]
      88:	e59f00f4 	ldr	r0, [pc, #244]	; 184 <DMA_CRCT+0x4>
      8c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
      90:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
      94:	e3a0d902 	mov	sp, #32768	; 0x8000
      98:	fa0000a7 	blx	33c <sark_config>
      9c:	e51fd054 	ldr	sp, [pc, #-84]	; 50 <stack_top>
      a0:	e15f26b2 	ldrh	r2, [pc, #-98]	; 46 <stack_size>
      a4:	e51f1058 	ldr	r1, [pc, #-88]	; 54 <stack_fill>
      a8:	e04d0002 	sub	r0, sp, r2
      ac:	eb00005c 	bl	224 <sark_word_set>
      b0:	e1a0000d 	mov	r0, sp
      b4:	fa000108 	blx	4dc <sark_init>
      b8:	e121f000 	msr	CPSR_c, r0
      bc:	fa0001b7 	blx	7a0 <sark_wait>
      c0:	fa00050c 	blx	14f8 <sark_pre_main>
      c4:	fa0000b7 	blx	3a8 <c_main>
      c8:	fa000515 	blx	1524 <sark_post_main>
      cc:	eb00002a 	bl	17c <cpu_sleep>

000000d0 <reset_error>:
      d0:	e3a00001 	mov	r0, #1
      d4:	ea000014 	b	12c <rt_error>

000000d8 <undef_error>:
      d8:	e3a0b002 	mov	fp, #2
      dc:	ea00000c 	b	114 <exc_error>

000000e0 <svc_error>:
      e0:	e3a0b003 	mov	fp, #3
      e4:	ea00000a 	b	114 <exc_error>

000000e8 <pabt_error>:
      e8:	e3a0b004 	mov	fp, #4
      ec:	ea000008 	b	114 <exc_error>

000000f0 <dabt_error>:
      f0:	e3a0b005 	mov	fp, #5
      f4:	ea000006 	b	114 <exc_error>

000000f8 <irq_error>:
      f8:	e3a0b006 	mov	fp, #6
      fc:	ea000004 	b	114 <exc_error>

00000100 <fiq_error>:
     100:	e3a0b007 	mov	fp, #7
     104:	ea000002 	b	114 <exc_error>

00000108 <vic_error>:
     108:	e3a0b008 	mov	fp, #8
     10c:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     110:	e5900030 	ldr	r0, [r0, #48]	; 0x30

00000114 <exc_error>:
     114:	e1a0a00e 	mov	sl, lr
     118:	e14f8000 	mrs	r8, SPSR
     11c:	e38890c0 	orr	r9, r8, #192	; 0xc0
     120:	e3c99020 	bic	r9, r9, #32
     124:	e12ff009 	msr	CPSR_fsxc, r9
     128:	ea000002 	b	138 <cc_error>

0000012c <rt_error>:
     12c:	e1a0b000 	mov	fp, r0
     130:	e10f8000 	mrs	r8, CPSR
     134:	e1a0a00e 	mov	sl, lr

00000138 <cc_error>:
     138:	e59fc048 	ldr	ip, [pc, #72]	; 188 <DMA_CRCT+0x8>
     13c:	e59cc000 	ldr	ip, [ip]
     140:	e3a09080 	mov	r9, #128	; 0x80
     144:	e59fe040 	ldr	lr, [pc, #64]	; 18c <DMA_CRCT+0xc>
     148:	e02ee99c 	mla	lr, ip, r9, lr
     14c:	e1a0900d 	mov	r9, sp
     150:	e88e07ff 	stm	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl}
     154:	e5ceb02c 	strb	fp, [lr, #44]	; 0x2c
     158:	e3a08002 	mov	r8, #2
     15c:	e5ce802e 	strb	r8, [lr, #46]	; 0x2e
     160:	e1a0000b 	mov	r0, fp
     164:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
     168:	fa00009d 	blx	3e4 <rte_handler>

0000016c <cpu_shutdown>:
     16c:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
     170:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     174:	e3e01000 	mvn	r1, #0
     178:	e5801014 	str	r1, [r0, #20]

0000017c <cpu_sleep>:
     17c:	ee070f90 	mcr	15, 0, r0, cr7, cr0, {4}
     180:	eafffffd 	b	17c <cpu_sleep>
     184:	00001f7e 	.word	0x00001f7e
     188:	00400358 	.word	0x00400358
     18c:	e5007000 	.word	0xe5007000

00000190 <cpu_init_mode>:
     190:	e10f3000 	mrs	r3, CPSR
     194:	e121f001 	msr	CPSR_c, r1
     198:	e1a0d000 	mov	sp, r0
     19c:	e12ff003 	msr	CPSR_fsxc, r3
     1a0:	e0400102 	sub	r0, r0, r2, lsl #2
     1a4:	e12fff1e 	bx	lr

000001a8 <cpu_int_enable>:
     1a8:	e10f0000 	mrs	r0, CPSR
     1ac:	e3c010c0 	bic	r1, r0, #192	; 0xc0
     1b0:	e121f001 	msr	CPSR_c, r1
     1b4:	e12fff1e 	bx	lr

000001b8 <cpu_int_disable>:
     1b8:	e10f0000 	mrs	r0, CPSR
     1bc:	e38010c0 	orr	r1, r0, #192	; 0xc0
     1c0:	e121f001 	msr	CPSR_c, r1
     1c4:	e12fff1e 	bx	lr

000001c8 <cpu_int_restore>:
     1c8:	e12ff000 	msr	CPSR_fsxc, r0
     1cc:	e12fff1e 	bx	lr

000001d0 <cpu_wfi>:
     1d0:	ee070f90 	mcr	15, 0, r0, cr7, cr0, {4}
     1d4:	e12fff1e 	bx	lr

000001d8 <sark_lock_get>:
     1d8:	e3a0c4e2 	mov	ip, #-503316480	; 0xe2000000
     1dc:	e08cc100 	add	ip, ip, r0, lsl #2
     1e0:	e10f0000 	mrs	r0, CPSR
     1e4:	e38010c0 	orr	r1, r0, #192	; 0xc0
     1e8:	e121f001 	msr	CPSR_c, r1

000001ec <lg1>:
     1ec:	e59c1100 	ldr	r1, [ip, #256]	; 0x100
     1f0:	e3110102 	tst	r1, #-2147483648	; 0x80000000
     1f4:	1afffffc 	bne	1ec <lg1>
     1f8:	e12fff1e 	bx	lr

000001fc <sark_lock_free>:
     1fc:	e3a0c4e2 	mov	ip, #-503316480	; 0xe2000000
     200:	e08c1101 	add	r1, ip, r1, lsl #2
     204:	e5911180 	ldr	r1, [r1, #384]	; 0x180
     208:	e121f000 	msr	CPSR_c, r0
     20c:	e12fff1e 	bx	lr

00000210 <sark_str_cpy>:
     210:	e4d12001 	ldrb	r2, [r1], #1
     214:	e3520000 	cmp	r2, #0
     218:	e4c02001 	strb	r2, [r0], #1
     21c:	1afffffb 	bne	210 <sark_str_cpy>
     220:	e12fff1e 	bx	lr

00000224 <sark_word_set>:
     224:	e1a03001 	mov	r3, r1

00000228 <ws1>:
     228:	e2522010 	subs	r2, r2, #16
     22c:	28a0000a 	stmiacs	r0!, {r1, r3}
     230:	28a0000a 	stmiacs	r0!, {r1, r3}
     234:	2afffffb 	bcs	228 <ws1>
     238:	e1b02e82 	lsls	r2, r2, #29
     23c:	28a0000a 	stmiacs	r0!, {r1, r3}
     240:	48a00002 	stmiami	r0!, {r1}
     244:	e12fff1e 	bx	lr

00000248 <sark_msg_cpy>:
     248:	e2800004 	add	r0, r0, #4
     24c:	e2811004 	add	r1, r1, #4
     250:	e1d120b0 	ldrh	r2, [r1]
     254:	e2822004 	add	r2, r2, #4

00000258 <sark_word_cpy>:
     258:	e3120003 	tst	r2, #3
     25c:	13c22003 	bicne	r2, r2, #3
     260:	12822004 	addne	r2, r2, #4
     264:	e92d4010 	push	{r4, lr}
     268:	e2522020 	subs	r2, r2, #32
     26c:	3a000005 	bcc	288 <wc2>

00000270 <wc1>:
     270:	e8b15018 	ldm	r1!, {r3, r4, ip, lr}
     274:	e8a05018 	stmia	r0!, {r3, r4, ip, lr}
     278:	e8b15018 	ldm	r1!, {r3, r4, ip, lr}
     27c:	e8a05018 	stmia	r0!, {r3, r4, ip, lr}
     280:	e2522020 	subs	r2, r2, #32
     284:	2afffff9 	bcs	270 <wc1>

00000288 <wc2>:
     288:	e1b0ce02 	lsls	ip, r2, #28
     28c:	28b15018 	ldmcs	r1!, {r3, r4, ip, lr}
     290:	28a05018 	stmiacs	r0!, {r3, r4, ip, lr}
     294:	48b10018 	ldmmi	r1!, {r3, r4}
     298:	48a00018 	stmiami	r0!, {r3, r4}
     29c:	e1b0cf02 	lsls	ip, r2, #30
     2a0:	24913004 	ldrcs	r3, [r1], #4
     2a4:	24803004 	strcs	r3, [r0], #4
     2a8:	e8bd8010 	pop	{r4, pc}

000002ac <sark_div10>:
     2ac:	e241200a 	sub	r2, r1, #10
     2b0:	e0411121 	sub	r1, r1, r1, lsr #2
     2b4:	e0811221 	add	r1, r1, r1, lsr #4
     2b8:	e0811421 	add	r1, r1, r1, lsr #8
     2bc:	e0811821 	add	r1, r1, r1, lsr #16
     2c0:	e1a011a1 	lsr	r1, r1, #3
     2c4:	e0813101 	add	r3, r1, r1, lsl #2
     2c8:	e0522083 	subs	r2, r2, r3, lsl #1
     2cc:	52811001 	addpl	r1, r1, #1
     2d0:	4282200a 	addmi	r2, r2, #10
     2d4:	e8800006 	stm	r0, {r1, r2}
     2d8:	e12fff1e 	bx	lr

000002dc <sark_int_han>:
     2dc:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
     2e0:	e24e0004 	sub	r0, lr, #4
     2e4:	e14fc000 	mrs	ip, SPSR
     2e8:	e321f01f 	msr	CPSR_c, #31
     2ec:	e92d5000 	push	{ip, lr}
     2f0:	fa00012f 	blx	7b4 <sark_int>
     2f4:	e8bd5000 	pop	{ip, lr}
     2f8:	e321f092 	msr	CPSR_c, #146	; 0x92
     2fc:	e16ff00c 	msr	SPSR_fsxc, ip
     300:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     304:	e5800030 	str	r0, [r0, #48]	; 0x30
     308:	e8bd500f 	pop	{r0, r1, r2, r3, ip, lr}

0000030c <null_int_han>:
     30c:	e25ef004 	subs	pc, lr, #4

00000310 <schedule>:
     310:	e92d5000 	push	{ip, lr}
     314:	e10fc000 	mrs	ip, CPSR
     318:	e3cce01f 	bic	lr, ip, #31
     31c:	e38ee01f 	orr	lr, lr, #31
     320:	e121f00e 	msr	CPSR_c, lr
     324:	e92d5000 	push	{ip, lr}
     328:	fa000458 	blx	1490 <schedule_sysmode>
     32c:	e8bd5000 	pop	{ip, lr}
     330:	e121f00c 	msr	CPSR_c, ip
     334:	e8bd5000 	pop	{ip, lr}
     338:	e12fff1e 	bx	lr

0000033c <sark_config>:
     33c:	4770      	bx	lr

0000033e <sark_bx>:
     33e:	4700      	bx	r0

00000340 <__gnu_thumb1_case_uqi>:
     340:	468c      	mov	ip, r1
     342:	4671      	mov	r1, lr
     344:	3901      	subs	r1, #1
     346:	5c09      	ldrb	r1, [r1, r0]
     348:	0049      	lsls	r1, r1, #1
     34a:	448e      	add	lr, r1
     34c:	4661      	mov	r1, ip
     34e:	4770      	bx	lr

00000350 <sark_aplx>:
     350:	b5f2      	push	{r1, r4, r5, r6, r7, lr}
     352:	4905      	ldr	r1, [pc, #20]	; (368 <aplx_buffer>)
     354:	a605      	add	r6, pc, #20	; (adr r6, 36c <aplx_loader>)
     356:	2740      	movs	r7, #64	; 0x40

00000358 <aplx_l0>:
     358:	ce3c      	ldmia	r6!, {r2, r3, r4, r5}
     35a:	c13c      	stmia	r1!, {r2, r3, r4, r5}
     35c:	3f10      	subs	r7, #16
     35e:	d1fb      	bne.n	358 <aplx_l0>
     360:	1c04      	adds	r4, r0, #0
     362:	393f      	subs	r1, #63	; 0x3f
     364:	4708      	bx	r1
	...

00000368 <aplx_buffer>:
     368:	00007fc0 	.word	0x00007fc0

0000036c <aplx_loader>:
     36c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
     36e:	2801      	cmp	r0, #1
     370:	d008      	beq.n	384 <aplx_copy>
     372:	2802      	cmp	r0, #2
     374:	d004      	beq.n	380 <aplx_rcopy>
     376:	2803      	cmp	r0, #3
     378:	d00b      	beq.n	392 <aplx_fill>
     37a:	2804      	cmp	r0, #4
     37c:	d011      	beq.n	3a2 <aplx_exec>
     37e:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

00000380 <aplx_rcopy>:
     380:	1912      	adds	r2, r2, r4
     382:	3a10      	subs	r2, #16

00000384 <aplx_copy>:
     384:	cae1      	ldmia	r2!, {r0, r5, r6, r7}
     386:	c1e1      	stmia	r1!, {r0, r5, r6, r7}
     388:	cae1      	ldmia	r2!, {r0, r5, r6, r7}
     38a:	c1e1      	stmia	r1!, {r0, r5, r6, r7}
     38c:	3b20      	subs	r3, #32
     38e:	d8f9      	bhi.n	384 <aplx_copy>
     390:	e7ec      	b.n	36c <aplx_loader>

00000392 <aplx_fill>:
     392:	1c1d      	adds	r5, r3, #0
     394:	1c1e      	adds	r6, r3, #0
     396:	1c1f      	adds	r7, r3, #0

00000398 <aplx_l1>:
     398:	c1e8      	stmia	r1!, {r3, r5, r6, r7}
     39a:	c1e8      	stmia	r1!, {r3, r5, r6, r7}
     39c:	3a20      	subs	r2, #32
     39e:	d8fb      	bhi.n	398 <aplx_l1>
     3a0:	e7e4      	b.n	36c <aplx_loader>

000003a2 <aplx_exec>:
     3a2:	9800      	ldr	r0, [sp, #0]
     3a4:	4788      	blx	r1
     3a6:	e7e1      	b.n	36c <aplx_loader>

000003a8 <c_main>:
     3a8:	b500      	push	{lr}
     3aa:	2000      	movs	r0, #0
     3ac:	b091      	sub	sp, #68	; 0x44
     3ae:	f000 fff7 	bl	13a0 <spin1_start>
     3b2:	2000      	movs	r0, #0
     3b4:	4908      	ldr	r1, [pc, #32]	; (3d8 <c_main+0x30>)
     3b6:	f000 fcfd 	bl	db4 <io_printf>
     3ba:	2002      	movs	r0, #2
     3bc:	4907      	ldr	r1, [pc, #28]	; (3dc <c_main+0x34>)
     3be:	f000 fcf9 	bl	db4 <io_printf>
     3c2:	4668      	mov	r0, sp
     3c4:	4906      	ldr	r1, [pc, #24]	; (3e0 <c_main+0x38>)
     3c6:	f000 fcf5 	bl	db4 <io_printf>
     3ca:	2002      	movs	r0, #2
     3cc:	4669      	mov	r1, sp
     3ce:	f000 fcf1 	bl	db4 <io_printf>
     3d2:	b011      	add	sp, #68	; 0x44
     3d4:	bd00      	pop	{pc}
     3d6:	46c0      	nop			; (mov r8, r8)
     3d8:	000018c0 	.word	0x000018c0
     3dc:	000018d8 	.word	0x000018d8
     3e0:	000018f2 	.word	0x000018f2

000003e4 <rte_handler>:
     3e4:	4b01      	ldr	r3, [pc, #4]	; (3ec <rte_handler+0x8>)
     3e6:	2208      	movs	r2, #8
     3e8:	701a      	strb	r2, [r3, #0]
     3ea:	4770      	bx	lr
     3ec:	e5007f2b 	.word	0xe5007f2b

000003f0 <sark_cpu_state>:
     3f0:	4b02      	ldr	r3, [pc, #8]	; (3fc <sark_cpu_state+0xc>)
     3f2:	69db      	ldr	r3, [r3, #28]
     3f4:	332e      	adds	r3, #46	; 0x2e
     3f6:	7018      	strb	r0, [r3, #0]
     3f8:	4770      	bx	lr
     3fa:	46c0      	nop			; (mov r8, r8)
     3fc:	00400358 	.word	0x00400358

00000400 <sark_app_lead>:
     400:	235c      	movs	r3, #92	; 0x5c
     402:	4a03      	ldr	r2, [pc, #12]	; (410 <MC_TABLE_SIZE+0x10>)
     404:	781b      	ldrb	r3, [r3, #0]
     406:	6812      	ldr	r2, [r2, #0]
     408:	00db      	lsls	r3, r3, #3
     40a:	18d3      	adds	r3, r2, r3
     40c:	78d8      	ldrb	r0, [r3, #3]
     40e:	4770      	bx	lr
     410:	e5007fe4 	.word	0xe5007fe4

00000414 <sark_block_init>:
     414:	b530      	push	{r4, r5, lr}
     416:	1c0b      	adds	r3, r1, #0
     418:	1c04      	adds	r4, r0, #0
     41a:	e002      	b.n	422 <sark_block_init+0xe>
     41c:	18a5      	adds	r5, r4, r2
     41e:	6025      	str	r5, [r4, #0]
     420:	1c2c      	adds	r4, r5, #0
     422:	3b01      	subs	r3, #1
     424:	2b00      	cmp	r3, #0
     426:	d1f9      	bne.n	41c <sark_block_init+0x8>
     428:	3901      	subs	r1, #1
     42a:	434a      	muls	r2, r1
     42c:	1880      	adds	r0, r0, r2
     42e:	6003      	str	r3, [r0, #0]
     430:	bd30      	pop	{r4, r5, pc}
	...

00000434 <sark_msg_get>:
     434:	b510      	push	{r4, lr}
     436:	f7ff eec0 	blx	1b8 <cpu_int_disable>
     43a:	4b09      	ldr	r3, [pc, #36]	; (460 <sark_msg_get+0x2c>)
     43c:	6a1c      	ldr	r4, [r3, #32]
     43e:	2c00      	cmp	r4, #0
     440:	d00a      	beq.n	458 <sark_msg_get+0x24>
     442:	6822      	ldr	r2, [r4, #0]
     444:	621a      	str	r2, [r3, #32]
     446:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
     448:	8cd9      	ldrh	r1, [r3, #38]	; 0x26
     44a:	3201      	adds	r2, #1
     44c:	0412      	lsls	r2, r2, #16
     44e:	0c12      	lsrs	r2, r2, #16
     450:	849a      	strh	r2, [r3, #36]	; 0x24
     452:	4291      	cmp	r1, r2
     454:	d200      	bcs.n	458 <sark_msg_get+0x24>
     456:	84da      	strh	r2, [r3, #38]	; 0x26
     458:	f7ff eeb6 	blx	1c8 <cpu_int_restore>
     45c:	1c20      	adds	r0, r4, #0
     45e:	bd10      	pop	{r4, pc}
     460:	00400358 	.word	0x00400358

00000464 <sark_msg_free>:
     464:	b510      	push	{r4, lr}
     466:	1c04      	adds	r4, r0, #0
     468:	f7ff eea6 	blx	1b8 <cpu_int_disable>
     46c:	4b04      	ldr	r3, [pc, #16]	; (480 <sark_msg_free+0x1c>)
     46e:	6a1a      	ldr	r2, [r3, #32]
     470:	6022      	str	r2, [r4, #0]
     472:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
     474:	621c      	str	r4, [r3, #32]
     476:	3a01      	subs	r2, #1
     478:	849a      	strh	r2, [r3, #36]	; 0x24
     47a:	f7ff eea6 	blx	1c8 <cpu_int_restore>
     47e:	bd10      	pop	{r4, pc}
     480:	00400358 	.word	0x00400358

00000484 <sark_shmsg_get>:
     484:	b510      	push	{r4, lr}
     486:	2000      	movs	r0, #0
     488:	f7ff eea6 	blx	1d8 <sark_lock_get>
     48c:	4b09      	ldr	r3, [pc, #36]	; (4b4 <sark_shmsg_get+0x30>)
     48e:	681c      	ldr	r4, [r3, #0]
     490:	2c00      	cmp	r4, #0
     492:	d00a      	beq.n	4aa <sark_shmsg_get+0x26>
     494:	6822      	ldr	r2, [r4, #0]
     496:	601a      	str	r2, [r3, #0]
     498:	889a      	ldrh	r2, [r3, #4]
     49a:	88d9      	ldrh	r1, [r3, #6]
     49c:	3201      	adds	r2, #1
     49e:	0412      	lsls	r2, r2, #16
     4a0:	0c12      	lsrs	r2, r2, #16
     4a2:	809a      	strh	r2, [r3, #4]
     4a4:	4291      	cmp	r1, r2
     4a6:	d200      	bcs.n	4aa <sark_shmsg_get+0x26>
     4a8:	80da      	strh	r2, [r3, #6]
     4aa:	2100      	movs	r1, #0
     4ac:	f7ff eea6 	blx	1fc <sark_lock_free>
     4b0:	1c20      	adds	r0, r4, #0
     4b2:	bd10      	pop	{r4, pc}
     4b4:	e5007f68 	.word	0xe5007f68

000004b8 <sark_shmsg_free>:
     4b8:	b510      	push	{r4, lr}
     4ba:	1c04      	adds	r4, r0, #0
     4bc:	2000      	movs	r0, #0
     4be:	f7ff ee8c 	blx	1d8 <sark_lock_get>
     4c2:	4b05      	ldr	r3, [pc, #20]	; (4d8 <sark_shmsg_free+0x20>)
     4c4:	2100      	movs	r1, #0
     4c6:	681a      	ldr	r2, [r3, #0]
     4c8:	6022      	str	r2, [r4, #0]
     4ca:	889a      	ldrh	r2, [r3, #4]
     4cc:	601c      	str	r4, [r3, #0]
     4ce:	3a01      	subs	r2, #1
     4d0:	809a      	strh	r2, [r3, #4]
     4d2:	f7ff ee94 	blx	1fc <sark_lock_free>
     4d6:	bd10      	pop	{r4, pc}
     4d8:	e5007f68 	.word	0xe5007f68

000004dc <sark_init>:
     4dc:	b570      	push	{r4, r5, r6, lr}
     4de:	2520      	movs	r5, #32
     4e0:	1c04      	adds	r4, r0, #0
     4e2:	8c28      	ldrh	r0, [r5, #32]
     4e4:	8c6a      	ldrh	r2, [r5, #34]	; 0x22
     4e6:	0080      	lsls	r0, r0, #2
     4e8:	1a20      	subs	r0, r4, r0
     4ea:	21d2      	movs	r1, #210	; 0xd2
     4ec:	f7ff ee50 	blx	190 <cpu_init_mode>
     4f0:	8caa      	ldrh	r2, [r5, #36]	; 0x24
     4f2:	21d1      	movs	r1, #209	; 0xd1
     4f4:	f7ff ee4c 	blx	190 <cpu_init_mode>
     4f8:	2200      	movs	r2, #0
     4fa:	21df      	movs	r1, #223	; 0xdf
     4fc:	f7ff ee48 	blx	190 <cpu_init_mode>
     500:	8ce9      	ldrh	r1, [r5, #38]	; 0x26
     502:	2658      	movs	r6, #88	; 0x58
     504:	0889      	lsrs	r1, r1, #2
     506:	0089      	lsls	r1, r1, #2
     508:	1a61      	subs	r1, r4, r1
     50a:	4c2a      	ldr	r4, [pc, #168]	; (5b4 <SPARE_SIZE+0x14>)
     50c:	6121      	str	r1, [r4, #16]
     50e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
     510:	6160      	str	r0, [r4, #20]
     512:	f000 fb47 	bl	ba4 <sark_heap_init>
     516:	4b28      	ldr	r3, [pc, #160]	; (5b8 <SPARE_SIZE+0x18>)
     518:	4a28      	ldr	r2, [pc, #160]	; (5bc <SPARE_SIZE+0x1c>)
     51a:	681b      	ldr	r3, [r3, #0]
     51c:	4d28      	ldr	r5, [pc, #160]	; (5c0 <SPARE_SIZE+0x20>)
     51e:	0e1b      	lsrs	r3, r3, #24
     520:	6063      	str	r3, [r4, #4]
     522:	189b      	adds	r3, r3, r2
     524:	2192      	movs	r1, #146	; 0x92
     526:	0049      	lsls	r1, r1, #1
     528:	61a0      	str	r0, [r4, #24]
     52a:	791b      	ldrb	r3, [r3, #4]
     52c:	6023      	str	r3, [r4, #0]
     52e:	8cab      	ldrh	r3, [r5, #36]	; 0x24
     530:	8623      	strh	r3, [r4, #48]	; 0x30
     532:	4b24      	ldr	r3, [pc, #144]	; (5c4 <SPARE_SIZE+0x24>)
     534:	60a3      	str	r3, [r4, #8]
     536:	7830      	ldrb	r0, [r6, #0]
     538:	f000 fb28 	bl	b8c <sark_alloc>
     53c:	2292      	movs	r2, #146	; 0x92
     53e:	0052      	lsls	r2, r2, #1
     540:	6220      	str	r0, [r4, #32]
     542:	7831      	ldrb	r1, [r6, #0]
     544:	f7ff ff66 	bl	414 <sark_block_init>
     548:	6823      	ldr	r3, [r4, #0]
     54a:	2b11      	cmp	r3, #17
     54c:	d81d      	bhi.n	58a <sark_init+0xae>
     54e:	4a1e      	ldr	r2, [pc, #120]	; (5c8 <SPARE_SIZE+0x28>)
     550:	01d8      	lsls	r0, r3, #7
     552:	1880      	adds	r0, r0, r2
     554:	6daa      	ldr	r2, [r5, #88]	; 0x58
     556:	61e0      	str	r0, [r4, #28]
     558:	4353      	muls	r3, r2
     55a:	6d6a      	ldr	r2, [r5, #84]	; 0x54
     55c:	009b      	lsls	r3, r3, #2
     55e:	18d3      	adds	r3, r2, r3
     560:	2100      	movs	r1, #0
     562:	2270      	movs	r2, #112	; 0x70
     564:	6363      	str	r3, [r4, #52]	; 0x34
     566:	f7ff ee5e 	blx	224 <sark_word_set>
     56a:	69e0      	ldr	r0, [r4, #28]
     56c:	2205      	movs	r2, #5
     56e:	1c03      	adds	r3, r0, #0
     570:	332e      	adds	r3, #46	; 0x2e
     572:	701a      	strb	r2, [r3, #0]
     574:	235c      	movs	r3, #92	; 0x5c
     576:	781a      	ldrb	r2, [r3, #0]
     578:	1c03      	adds	r3, r0, #0
     57a:	332f      	adds	r3, #47	; 0x2f
     57c:	701a      	strb	r2, [r3, #0]
     57e:	69ed      	ldr	r5, [r5, #28]
     580:	6445      	str	r5, [r0, #68]	; 0x44
     582:	4912      	ldr	r1, [pc, #72]	; (5cc <SPARE_SIZE+0x2c>)
     584:	3048      	adds	r0, #72	; 0x48
     586:	f7ff ee44 	blx	210 <sark_str_cpy>
     58a:	f000 fa3b 	bl	a04 <sark_vic_init>
     58e:	2359      	movs	r3, #89	; 0x59
     590:	7818      	ldrb	r0, [r3, #0]
     592:	2112      	movs	r1, #18
     594:	2201      	movs	r2, #1
     596:	4b0e      	ldr	r3, [pc, #56]	; (5d0 <SPARE_SIZE+0x30>)
     598:	f000 fa5c 	bl	a54 <sark_vic_set>
     59c:	2106      	movs	r1, #6
     59e:	2201      	movs	r2, #1
     5a0:	2010      	movs	r0, #16
     5a2:	4b0c      	ldr	r3, [pc, #48]	; (5d4 <SPARE_SIZE+0x34>)
     5a4:	f000 fa56 	bl	a54 <sark_vic_set>
     5a8:	235a      	movs	r3, #90	; 0x5a
     5aa:	7818      	ldrb	r0, [r3, #0]
     5ac:	f000 fa0c 	bl	9c8 <event_alloc>
     5b0:	201f      	movs	r0, #31
     5b2:	bd70      	pop	{r4, r5, r6, pc}
     5b4:	00400358 	.word	0x00400358
     5b8:	40000014 	.word	0x40000014
     5bc:	e5007f90 	.word	0xe5007f90
     5c0:	e5007f00 	.word	0xe5007f00
     5c4:	deaddead 	.word	0xdeaddead
     5c8:	e5007000 	.word	0xe5007000
     5cc:	00001910 	.word	0x00001910
     5d0:	000002dc 	.word	0x000002dc
     5d4:	00000a9c 	.word	0x00000a9c

000005d8 <sark_msg_send>:
     5d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     5da:	1c05      	adds	r5, r0, #0
     5dc:	1c0f      	adds	r7, r1, #0
     5de:	f7ff ff51 	bl	484 <sark_shmsg_get>
     5e2:	1c04      	adds	r4, r0, #0
     5e4:	3800      	subs	r0, #0
     5e6:	d03d      	beq.n	664 <ETH_TX_SIZE+0x64>
     5e8:	1c29      	adds	r1, r5, #0
     5ea:	f7ff ee2e 	blx	248 <sark_msg_cpy>
     5ee:	4e1e      	ldr	r6, [pc, #120]	; (668 <ETH_TX_SIZE+0x68>)
     5f0:	2501      	movs	r5, #1
     5f2:	69f3      	ldr	r3, [r6, #28]
     5f4:	1c28      	adds	r0, r5, #0
     5f6:	635c      	str	r4, [r3, #52]	; 0x34
     5f8:	3339      	adds	r3, #57	; 0x39
     5fa:	701d      	strb	r5, [r3, #0]
     5fc:	f7ff edec 	blx	1d8 <sark_lock_get>
     600:	6831      	ldr	r1, [r6, #0]
     602:	4a1a      	ldr	r2, [pc, #104]	; (66c <ETH_TX_SIZE+0x6c>)
     604:	1c2e      	adds	r6, r5, #0
     606:	6813      	ldr	r3, [r2, #0]
     608:	408e      	lsls	r6, r1
     60a:	1c31      	adds	r1, r6, #0
     60c:	4319      	orrs	r1, r3
     60e:	6011      	str	r1, [r2, #0]
     610:	2b00      	cmp	r3, #0
     612:	d106      	bne.n	622 <ETH_TX_SIZE+0x22>
     614:	4b16      	ldr	r3, [pc, #88]	; (670 <ETH_TX_SIZE+0x70>)
     616:	4a17      	ldr	r2, [pc, #92]	; (674 <ETH_TX_SIZE+0x74>)
     618:	781b      	ldrb	r3, [r3, #0]
     61a:	409d      	lsls	r5, r3
     61c:	4b16      	ldr	r3, [pc, #88]	; (678 <ETH_TX_SIZE+0x78>)
     61e:	18ad      	adds	r5, r5, r2
     620:	601d      	str	r5, [r3, #0]
     622:	2101      	movs	r1, #1
     624:	f7ff edea 	blx	1fc <sark_lock_free>
     628:	4b0f      	ldr	r3, [pc, #60]	; (668 <ETH_TX_SIZE+0x68>)
     62a:	4a14      	ldr	r2, [pc, #80]	; (67c <ETH_TX_SIZE+0x7c>)
     62c:	69db      	ldr	r3, [r3, #28]
     62e:	6815      	ldr	r5, [r2, #0]
     630:	1c18      	adds	r0, r3, #0
     632:	3039      	adds	r0, #57	; 0x39
     634:	e008      	b.n	648 <ETH_TX_SIZE+0x48>
     636:	6811      	ldr	r1, [r2, #0]
     638:	1b49      	subs	r1, r1, r5
     63a:	42b9      	cmp	r1, r7
     63c:	d904      	bls.n	648 <ETH_TX_SIZE+0x48>
     63e:	3339      	adds	r3, #57	; 0x39
     640:	781b      	ldrb	r3, [r3, #0]
     642:	2b00      	cmp	r3, #0
     644:	d009      	beq.n	65a <ETH_TX_SIZE+0x5a>
     646:	e003      	b.n	650 <ETH_TX_SIZE+0x50>
     648:	7801      	ldrb	r1, [r0, #0]
     64a:	2900      	cmp	r1, #0
     64c:	d1f3      	bne.n	636 <ETH_TX_SIZE+0x36>
     64e:	e7f6      	b.n	63e <ETH_TX_SIZE+0x3e>
     650:	1c20      	adds	r0, r4, #0
     652:	f7ff ff31 	bl	4b8 <sark_shmsg_free>
     656:	2000      	movs	r0, #0
     658:	e004      	b.n	664 <ETH_TX_SIZE+0x64>
     65a:	4b03      	ldr	r3, [pc, #12]	; (668 <ETH_TX_SIZE+0x68>)
     65c:	2001      	movs	r0, #1
     65e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     660:	3201      	adds	r2, #1
     662:	62da      	str	r2, [r3, #44]	; 0x2c
     664:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     666:	46c0      	nop			; (mov r8, r8)
     668:	00400358 	.word	0x00400358
     66c:	e5007fec 	.word	0xe5007fec
     670:	e5007fa8 	.word	0xe5007fa8
     674:	5ec00000 	.word	0x5ec00000
     678:	e2000008 	.word	0xe2000008
     67c:	e5007f10 	.word	0xe5007f10

00000680 <sark_cmd_ver>:
     680:	b508      	push	{r3, lr}
     682:	4b0a      	ldr	r3, [pc, #40]	; (6ac <sark_cmd_ver+0x2c>)
     684:	6859      	ldr	r1, [r3, #4]
     686:	681b      	ldr	r3, [r3, #0]
     688:	020a      	lsls	r2, r1, #8
     68a:	18d3      	adds	r3, r2, r3
     68c:	4a08      	ldr	r2, [pc, #32]	; (6b0 <ZI_LENGTH>)
     68e:	4909      	ldr	r1, [pc, #36]	; (6b4 <ZI_LENGTH+0x4>)
     690:	8812      	ldrh	r2, [r2, #0]
     692:	0412      	lsls	r2, r2, #16
     694:	189b      	adds	r3, r3, r2
     696:	6143      	str	r3, [r0, #20]
     698:	4b07      	ldr	r3, [pc, #28]	; (6b8 <ZI_LENGTH+0x8>)
     69a:	6183      	str	r3, [r0, #24]
     69c:	4b07      	ldr	r3, [pc, #28]	; (6bc <ZI_LENGTH+0xc>)
     69e:	681b      	ldr	r3, [r3, #0]
     6a0:	61c3      	str	r3, [r0, #28]
     6a2:	3020      	adds	r0, #32
     6a4:	f7ff edb4 	blx	210 <sark_str_cpy>
     6a8:	201b      	movs	r0, #27
     6aa:	bd08      	pop	{r3, pc}
     6ac:	00400358 	.word	0x00400358
     6b0:	e5007f00 	.word	0xe5007f00
     6b4:	0000191c 	.word	0x0000191c
     6b8:	00850100 	.word	0x00850100
     6bc:	00001918 	.word	0x00001918

000006c0 <sark_cmd_read>:
     6c0:	69c1      	ldr	r1, [r0, #28]
     6c2:	b530      	push	{r4, r5, lr}
     6c4:	6983      	ldr	r3, [r0, #24]
     6c6:	2902      	cmp	r1, #2
     6c8:	d803      	bhi.n	6d2 <sark_cmd_read+0x12>
     6ca:	2280      	movs	r2, #128	; 0x80
     6cc:	0052      	lsls	r2, r2, #1
     6ce:	429a      	cmp	r2, r3
     6d0:	d203      	bcs.n	6da <sark_cmd_read+0x1a>
     6d2:	2384      	movs	r3, #132	; 0x84
     6d4:	8203      	strh	r3, [r0, #16]
     6d6:	2300      	movs	r3, #0
     6d8:	e023      	b.n	722 <sark_cmd_read+0x62>
     6da:	6942      	ldr	r2, [r0, #20]
     6dc:	3014      	adds	r0, #20
     6de:	2900      	cmp	r1, #0
     6e0:	d108      	bne.n	6f4 <sark_cmd_read+0x34>
     6e2:	18d1      	adds	r1, r2, r3
     6e4:	1a80      	subs	r0, r0, r2
     6e6:	e002      	b.n	6ee <sark_cmd_read+0x2e>
     6e8:	7814      	ldrb	r4, [r2, #0]
     6ea:	5484      	strb	r4, [r0, r2]
     6ec:	3201      	adds	r2, #1
     6ee:	428a      	cmp	r2, r1
     6f0:	d1fa      	bne.n	6e8 <sark_cmd_read+0x28>
     6f2:	e016      	b.n	722 <sark_cmd_read+0x62>
     6f4:	2901      	cmp	r1, #1
     6f6:	d10a      	bne.n	70e <sark_cmd_read+0x4e>
     6f8:	0859      	lsrs	r1, r3, #1
     6fa:	0049      	lsls	r1, r1, #1
     6fc:	1889      	adds	r1, r1, r2
     6fe:	1a80      	subs	r0, r0, r2
     700:	e002      	b.n	708 <sark_cmd_read+0x48>
     702:	8814      	ldrh	r4, [r2, #0]
     704:	5284      	strh	r4, [r0, r2]
     706:	3202      	adds	r2, #2
     708:	428a      	cmp	r2, r1
     70a:	d1fa      	bne.n	702 <sark_cmd_read+0x42>
     70c:	e009      	b.n	722 <sark_cmd_read+0x62>
     70e:	089c      	lsrs	r4, r3, #2
     710:	00a4      	lsls	r4, r4, #2
     712:	1904      	adds	r4, r0, r4
     714:	1c01      	adds	r1, r0, #0
     716:	e002      	b.n	71e <sark_cmd_read+0x5e>
     718:	1a0d      	subs	r5, r1, r0
     71a:	58ad      	ldr	r5, [r5, r2]
     71c:	c120      	stmia	r1!, {r5}
     71e:	42a1      	cmp	r1, r4
     720:	d1fa      	bne.n	718 <sark_cmd_read+0x58>
     722:	1c18      	adds	r0, r3, #0
     724:	bd30      	pop	{r4, r5, pc}

00000726 <sark_cmd_write>:
     726:	69c1      	ldr	r1, [r0, #28]
     728:	b530      	push	{r4, r5, lr}
     72a:	6982      	ldr	r2, [r0, #24]
     72c:	2902      	cmp	r1, #2
     72e:	d803      	bhi.n	738 <sark_cmd_write+0x12>
     730:	2380      	movs	r3, #128	; 0x80
     732:	005b      	lsls	r3, r3, #1
     734:	4293      	cmp	r3, r2
     736:	d202      	bcs.n	73e <sark_cmd_write+0x18>
     738:	2384      	movs	r3, #132	; 0x84
     73a:	8203      	strh	r3, [r0, #16]
     73c:	e026      	b.n	78c <sark_cmd_write+0x66>
     73e:	6943      	ldr	r3, [r0, #20]
     740:	2900      	cmp	r1, #0
     742:	d10b      	bne.n	75c <sark_cmd_write+0x36>
     744:	1881      	adds	r1, r0, r2
     746:	1c02      	adds	r2, r0, #0
     748:	e005      	b.n	756 <sark_cmd_write+0x30>
     74a:	1c14      	adds	r4, r2, #0
     74c:	3420      	adds	r4, #32
     74e:	7825      	ldrb	r5, [r4, #0]
     750:	1a14      	subs	r4, r2, r0
     752:	3201      	adds	r2, #1
     754:	54e5      	strb	r5, [r4, r3]
     756:	428a      	cmp	r2, r1
     758:	d1f7      	bne.n	74a <sark_cmd_write+0x24>
     75a:	e017      	b.n	78c <sark_cmd_write+0x66>
     75c:	3020      	adds	r0, #32
     75e:	2901      	cmp	r1, #1
     760:	d10b      	bne.n	77a <sark_cmd_write+0x54>
     762:	0851      	lsrs	r1, r2, #1
     764:	0049      	lsls	r1, r1, #1
     766:	1841      	adds	r1, r0, r1
     768:	1c02      	adds	r2, r0, #0
     76a:	e003      	b.n	774 <sark_cmd_write+0x4e>
     76c:	8815      	ldrh	r5, [r2, #0]
     76e:	1a14      	subs	r4, r2, r0
     770:	3202      	adds	r2, #2
     772:	52e5      	strh	r5, [r4, r3]
     774:	428a      	cmp	r2, r1
     776:	d1f9      	bne.n	76c <sark_cmd_write+0x46>
     778:	e008      	b.n	78c <sark_cmd_write+0x66>
     77a:	0892      	lsrs	r2, r2, #2
     77c:	0092      	lsls	r2, r2, #2
     77e:	18d2      	adds	r2, r2, r3
     780:	1ac0      	subs	r0, r0, r3
     782:	e001      	b.n	788 <sark_cmd_write+0x62>
     784:	58c1      	ldr	r1, [r0, r3]
     786:	c302      	stmia	r3!, {r1}
     788:	4293      	cmp	r3, r2
     78a:	d1fb      	bne.n	784 <sark_cmd_write+0x5e>
     78c:	2000      	movs	r0, #0
     78e:	bd30      	pop	{r4, r5, pc}

00000790 <sark_cmd_fill>:
     790:	b508      	push	{r3, lr}
     792:	1c03      	adds	r3, r0, #0
     794:	3314      	adds	r3, #20
     796:	cb07      	ldmia	r3!, {r0, r1, r2}
     798:	f7ff ed44 	blx	224 <sark_word_set>
     79c:	2000      	movs	r0, #0
     79e:	bd08      	pop	{r3, pc}

000007a0 <sark_wait>:
     7a0:	b508      	push	{r3, lr}
     7a2:	e001      	b.n	7a8 <sark_wait+0x8>
     7a4:	f7ff ed14 	blx	1d0 <cpu_wfi>
     7a8:	235d      	movs	r3, #93	; 0x5d
     7aa:	781b      	ldrb	r3, [r3, #0]
     7ac:	07da      	lsls	r2, r3, #31
     7ae:	d4f9      	bmi.n	7a4 <sark_wait+0x4>
     7b0:	bd08      	pop	{r3, pc}
	...

000007b4 <sark_int>:
     7b4:	4b55      	ldr	r3, [pc, #340]	; (90c <STACK_SIZE+0x10c>)
     7b6:	2101      	movs	r1, #1
     7b8:	685a      	ldr	r2, [r3, #4]
     7ba:	b570      	push	{r4, r5, r6, lr}
     7bc:	4091      	lsls	r1, r2
     7be:	4a54      	ldr	r2, [pc, #336]	; (910 <STACK_SIZE+0x110>)
     7c0:	1889      	adds	r1, r1, r2
     7c2:	4a54      	ldr	r2, [pc, #336]	; (914 <STACK_SIZE+0x114>)
     7c4:	6011      	str	r1, [r2, #0]
     7c6:	69da      	ldr	r2, [r3, #28]
     7c8:	1c11      	adds	r1, r2, #0
     7ca:	3138      	adds	r1, #56	; 0x38
     7cc:	780b      	ldrb	r3, [r1, #0]
     7ce:	2b00      	cmp	r3, #0
     7d0:	d100      	bne.n	7d4 <sark_int+0x20>
     7d2:	e099      	b.n	908 <STACK_SIZE+0x108>
     7d4:	6b15      	ldr	r5, [r2, #48]	; 0x30
     7d6:	2b02      	cmp	r3, #2
     7d8:	d100      	bne.n	7dc <sark_int+0x28>
     7da:	6310      	str	r0, [r2, #48]	; 0x30
     7dc:	2200      	movs	r2, #0
     7de:	700a      	strb	r2, [r1, #0]
     7e0:	2b03      	cmp	r3, #3
     7e2:	d124      	bne.n	82e <STACK_SIZE+0x2e>
     7e4:	1ee8      	subs	r0, r5, #3
     7e6:	280a      	cmp	r0, #10
     7e8:	d900      	bls.n	7ec <sark_int+0x38>
     7ea:	e08d      	b.n	908 <STACK_SIZE+0x108>
     7ec:	f7ff fda8 	bl	340 <__gnu_thumb1_case_uqi>
     7f0:	068c8c10 	.word	0x068c8c10
     7f4:	161b0c08 	.word	0x161b0c08
     7f8:	1616      	.short	0x1616
     7fa:	16          	.byte	0x16
     7fb:	00          	.byte	0x00
     7fc:	2001      	movs	r0, #1
     7fe:	e000      	b.n	802 <STACK_SIZE+0x2>
     800:	2000      	movs	r0, #0
     802:	f000 f8bf 	bl	984 <event_pause>
     806:	e07f      	b.n	908 <STACK_SIZE+0x108>
     808:	20ff      	movs	r0, #255	; 0xff
     80a:	f000 f8d1 	bl	9b0 <event_stop>
     80e:	e07b      	b.n	908 <STACK_SIZE+0x108>
     810:	235d      	movs	r3, #93	; 0x5d
     812:	781a      	ldrb	r2, [r3, #0]
     814:	2101      	movs	r1, #1
     816:	438a      	bics	r2, r1
     818:	701a      	strb	r2, [r3, #0]
     81a:	e075      	b.n	908 <STACK_SIZE+0x108>
     81c:	4b3e      	ldr	r3, [pc, #248]	; (918 <STACK_SIZE+0x118>)
     81e:	2280      	movs	r2, #128	; 0x80
     820:	62dd      	str	r5, [r3, #44]	; 0x2c
     822:	0592      	lsls	r2, r2, #22
     824:	e000      	b.n	828 <STACK_SIZE+0x28>
     826:	2210      	movs	r2, #16
     828:	4b3c      	ldr	r3, [pc, #240]	; (91c <STACK_SIZE+0x11c>)
     82a:	601a      	str	r2, [r3, #0]
     82c:	e06c      	b.n	908 <STACK_SIZE+0x108>
     82e:	2b01      	cmp	r3, #1
     830:	d16a      	bne.n	908 <STACK_SIZE+0x108>
     832:	f7ff fdff 	bl	434 <sark_msg_get>
     836:	1e04      	subs	r4, r0, #0
     838:	d063      	beq.n	902 <STACK_SIZE+0x102>
     83a:	1c29      	adds	r1, r5, #0
     83c:	1c20      	adds	r0, r4, #0
     83e:	f7ff ed04 	blx	248 <sark_msg_cpy>
     842:	1c28      	adds	r0, r5, #0
     844:	f7ff fe38 	bl	4b8 <sark_shmsg_free>
     848:	4b30      	ldr	r3, [pc, #192]	; (90c <STACK_SIZE+0x10c>)
     84a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
     84c:	3201      	adds	r2, #1
     84e:	629a      	str	r2, [r3, #40]	; 0x28
     850:	7aa5      	ldrb	r5, [r4, #10]
     852:	231f      	movs	r3, #31
     854:	1c28      	adds	r0, r5, #0
     856:	4398      	bics	r0, r3
     858:	d130      	bne.n	8bc <STACK_SIZE+0xbc>
     85a:	88a3      	ldrh	r3, [r4, #4]
     85c:	2b17      	cmp	r3, #23
     85e:	d801      	bhi.n	864 <STACK_SIZE+0x64>
     860:	2381      	movs	r3, #129	; 0x81
     862:	e01b      	b.n	89c <STACK_SIZE+0x9c>
     864:	8a23      	ldrh	r3, [r4, #16]
     866:	2280      	movs	r2, #128	; 0x80
     868:	8222      	strh	r2, [r4, #16]
     86a:	2b00      	cmp	r3, #0
     86c:	d103      	bne.n	876 <STACK_SIZE+0x76>
     86e:	1c20      	adds	r0, r4, #0
     870:	f7ff ff06 	bl	680 <sark_cmd_ver>
     874:	e013      	b.n	89e <STACK_SIZE+0x9e>
     876:	2b02      	cmp	r3, #2
     878:	d103      	bne.n	882 <STACK_SIZE+0x82>
     87a:	1c20      	adds	r0, r4, #0
     87c:	f7ff ff20 	bl	6c0 <sark_cmd_read>
     880:	e00d      	b.n	89e <STACK_SIZE+0x9e>
     882:	2b03      	cmp	r3, #3
     884:	d103      	bne.n	88e <STACK_SIZE+0x8e>
     886:	1c20      	adds	r0, r4, #0
     888:	f7ff ff4d 	bl	726 <sark_cmd_write>
     88c:	e007      	b.n	89e <STACK_SIZE+0x9e>
     88e:	2b05      	cmp	r3, #5
     890:	d103      	bne.n	89a <STACK_SIZE+0x9a>
     892:	1c20      	adds	r0, r4, #0
     894:	f7ff ff7c 	bl	790 <sark_cmd_fill>
     898:	e001      	b.n	89e <STACK_SIZE+0x9e>
     89a:	2383      	movs	r3, #131	; 0x83
     89c:	8223      	strh	r3, [r4, #16]
     89e:	7aa2      	ldrb	r2, [r4, #10]
     8a0:	7ae1      	ldrb	r1, [r4, #11]
     8a2:	89a3      	ldrh	r3, [r4, #12]
     8a4:	300c      	adds	r0, #12
     8a6:	72e2      	strb	r2, [r4, #11]
     8a8:	89e2      	ldrh	r2, [r4, #14]
     8aa:	80a0      	strh	r0, [r4, #4]
     8ac:	72a1      	strb	r1, [r4, #10]
     8ae:	81a2      	strh	r2, [r4, #12]
     8b0:	81e3      	strh	r3, [r4, #14]
     8b2:	1c20      	adds	r0, r4, #0
     8b4:	210a      	movs	r1, #10
     8b6:	f7ff fe8f 	bl	5d8 <sark_msg_send>
     8ba:	e01e      	b.n	8fa <STACK_SIZE+0xfa>
     8bc:	235b      	movs	r3, #91	; 0x5b
     8be:	781b      	ldrb	r3, [r3, #0]
     8c0:	2b00      	cmp	r3, #0
     8c2:	d00f      	beq.n	8e4 <STACK_SIZE+0xe4>
     8c4:	4b16      	ldr	r3, [pc, #88]	; (920 <STACK_SIZE+0x120>)
     8c6:	699b      	ldr	r3, [r3, #24]
     8c8:	2b00      	cmp	r3, #0
     8ca:	d016      	beq.n	8fa <STACK_SIZE+0xfa>
     8cc:	f7ff ec74 	blx	1b8 <cpu_int_disable>
     8d0:	096a      	lsrs	r2, r5, #5
     8d2:	1c21      	adds	r1, r4, #0
     8d4:	1c06      	adds	r6, r0, #0
     8d6:	2003      	movs	r0, #3
     8d8:	f000 fdda 	bl	1490 <schedule_sysmode>
     8dc:	1c30      	adds	r0, r6, #0
     8de:	f7ff ec74 	blx	1c8 <cpu_int_restore>
     8e2:	e011      	b.n	908 <STACK_SIZE+0x108>
     8e4:	4b0f      	ldr	r3, [pc, #60]	; (924 <STACK_SIZE+0x124>)
     8e6:	681a      	ldr	r2, [r3, #0]
     8e8:	2380      	movs	r3, #128	; 0x80
     8ea:	055b      	lsls	r3, r3, #21
     8ec:	421a      	tst	r2, r3
     8ee:	d004      	beq.n	8fa <STACK_SIZE+0xfa>
     8f0:	4a09      	ldr	r2, [pc, #36]	; (918 <STACK_SIZE+0x118>)
     8f2:	6294      	str	r4, [r2, #40]	; 0x28
     8f4:	4a09      	ldr	r2, [pc, #36]	; (91c <STACK_SIZE+0x11c>)
     8f6:	6013      	str	r3, [r2, #0]
     8f8:	e006      	b.n	908 <STACK_SIZE+0x108>
     8fa:	1c20      	adds	r0, r4, #0
     8fc:	f7ff fdb2 	bl	464 <sark_msg_free>
     900:	e002      	b.n	908 <STACK_SIZE+0x108>
     902:	1c28      	adds	r0, r5, #0
     904:	f7ff fdd8 	bl	4b8 <sark_shmsg_free>
     908:	bd70      	pop	{r4, r5, r6, pc}
     90a:	46c0      	nop			; (mov r8, r8)
     90c:	00400358 	.word	0x00400358
     910:	5ec00000 	.word	0x5ec00000
     914:	e200000c 	.word	0xe200000c
     918:	00400394 	.word	0x00400394
     91c:	1f000018 	.word	0x1f000018
     920:	004005c0 	.word	0x004005c0
     924:	1f000010 	.word	0x1f000010

00000928 <event_wait>:
     928:	4b13      	ldr	r3, [pc, #76]	; (978 <event_wait+0x50>)
     92a:	b570      	push	{r4, r5, r6, lr}
     92c:	681b      	ldr	r3, [r3, #0]
     92e:	4c13      	ldr	r4, [pc, #76]	; (97c <event_wait+0x54>)
     930:	2501      	movs	r5, #1
     932:	409d      	lsls	r5, r3
     934:	7ea3      	ldrb	r3, [r4, #26]
     936:	4e12      	ldr	r6, [pc, #72]	; (980 <event_wait+0x58>)
     938:	2b00      	cmp	r3, #0
     93a:	d012      	beq.n	962 <event_wait+0x3a>
     93c:	2009      	movs	r0, #9
     93e:	f7ff fd57 	bl	3f0 <sark_cpu_state>
     942:	e001      	b.n	948 <event_wait+0x20>
     944:	f7ff ec44 	blx	1d0 <cpu_wfi>
     948:	6833      	ldr	r3, [r6, #0]
     94a:	1c2a      	adds	r2, r5, #0
     94c:	439a      	bics	r2, r3
     94e:	1e13      	subs	r3, r2, #0
     950:	d1f8      	bne.n	944 <event_wait+0x1c>
     952:	7ea3      	ldrb	r3, [r4, #26]
     954:	2201      	movs	r2, #1
     956:	4053      	eors	r3, r2
     958:	2007      	movs	r0, #7
     95a:	76a3      	strb	r3, [r4, #26]
     95c:	f7ff fd48 	bl	3f0 <sark_cpu_state>
     960:	e009      	b.n	976 <event_wait+0x4e>
     962:	2008      	movs	r0, #8
     964:	f7ff fd44 	bl	3f0 <sark_cpu_state>
     968:	e001      	b.n	96e <event_wait+0x46>
     96a:	f7ff ec32 	blx	1d0 <cpu_wfi>
     96e:	6833      	ldr	r3, [r6, #0]
     970:	422b      	tst	r3, r5
     972:	d1fa      	bne.n	96a <event_wait+0x42>
     974:	e7ed      	b.n	952 <event_wait+0x2a>
     976:	bd70      	pop	{r4, r5, r6, pc}
     978:	00400358 	.word	0x00400358
     97c:	00400394 	.word	0x00400394
     980:	e2000058 	.word	0xe2000058

00000984 <event_pause>:
     984:	b538      	push	{r3, r4, r5, lr}
     986:	1c05      	adds	r5, r0, #0
     988:	4c08      	ldr	r4, [pc, #32]	; (9ac <event_pause+0x28>)
     98a:	2800      	cmp	r0, #0
     98c:	d003      	beq.n	996 <event_pause+0x12>
     98e:	2301      	movs	r3, #1
     990:	7623      	strb	r3, [r4, #24]
     992:	200a      	movs	r0, #10
     994:	e001      	b.n	99a <event_pause+0x16>
     996:	7620      	strb	r0, [r4, #24]
     998:	2007      	movs	r0, #7
     99a:	f7ff fd29 	bl	3f0 <sark_cpu_state>
     99e:	6b23      	ldr	r3, [r4, #48]	; 0x30
     9a0:	2b00      	cmp	r3, #0
     9a2:	d002      	beq.n	9aa <event_pause+0x26>
     9a4:	6b61      	ldr	r1, [r4, #52]	; 0x34
     9a6:	1c28      	adds	r0, r5, #0
     9a8:	4798      	blx	r3
     9aa:	bd38      	pop	{r3, r4, r5, pc}
     9ac:	00400394 	.word	0x00400394

000009b0 <event_stop>:
     9b0:	4b03      	ldr	r3, [pc, #12]	; (9c0 <event_stop+0x10>)
     9b2:	2202      	movs	r2, #2
     9b4:	761a      	strb	r2, [r3, #24]
     9b6:	4a03      	ldr	r2, [pc, #12]	; (9c4 <event_stop+0x14>)
     9b8:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
     9ba:	6011      	str	r1, [r2, #0]
     9bc:	6398      	str	r0, [r3, #56]	; 0x38
     9be:	4770      	bx	lr
     9c0:	00400394 	.word	0x00400394
     9c4:	1f000014 	.word	0x1f000014

000009c8 <event_alloc>:
     9c8:	b570      	push	{r4, r5, r6, lr}
     9ca:	2118      	movs	r1, #24
     9cc:	1c06      	adds	r6, r0, #0
     9ce:	f000 f8dd 	bl	b8c <sark_alloc>
     9d2:	4d0b      	ldr	r5, [pc, #44]	; (a00 <event_alloc+0x38>)
     9d4:	1e04      	subs	r4, r0, #0
     9d6:	d00d      	beq.n	9f4 <event_alloc+0x2c>
     9d8:	1c31      	adds	r1, r6, #0
     9da:	2218      	movs	r2, #24
     9dc:	f7ff fd1a 	bl	414 <sark_block_init>
     9e0:	1c06      	adds	r6, r0, #0
     9e2:	f7ff ebea 	blx	1b8 <cpu_int_disable>
     9e6:	682a      	ldr	r2, [r5, #0]
     9e8:	6032      	str	r2, [r6, #0]
     9ea:	602c      	str	r4, [r5, #0]
     9ec:	f7ff ebec 	blx	1c8 <cpu_int_restore>
     9f0:	2001      	movs	r0, #1
     9f2:	e003      	b.n	9fc <event_alloc+0x34>
     9f4:	696a      	ldr	r2, [r5, #20]
     9f6:	2308      	movs	r3, #8
     9f8:	4313      	orrs	r3, r2
     9fa:	616b      	str	r3, [r5, #20]
     9fc:	bd70      	pop	{r4, r5, r6, pc}
     9fe:	46c0      	nop			; (mov r8, r8)
     a00:	00400394 	.word	0x00400394

00000a04 <sark_vic_init>:
     a04:	4b0b      	ldr	r3, [pc, #44]	; (a34 <sark_vic_init+0x30>)
     a06:	2201      	movs	r2, #1
     a08:	4252      	negs	r2, r2
     a0a:	b510      	push	{r4, lr}
     a0c:	601a      	str	r2, [r3, #0]
     a0e:	4b0a      	ldr	r3, [pc, #40]	; (a38 <sark_vic_init+0x34>)
     a10:	2200      	movs	r2, #0
     a12:	601a      	str	r2, [r3, #0]
     a14:	4b09      	ldr	r3, [pc, #36]	; (a3c <sark_vic_init+0x38>)
     a16:	4c0a      	ldr	r4, [pc, #40]	; (a40 <sark_vic_init+0x3c>)
     a18:	601a      	str	r2, [r3, #0]
     a1a:	490a      	ldr	r1, [pc, #40]	; (a44 <sark_vic_init+0x40>)
     a1c:	4b0a      	ldr	r3, [pc, #40]	; (a48 <sark_vic_init+0x44>)
     a1e:	1e58      	subs	r0, r3, #1
     a20:	601a      	str	r2, [r3, #0]
     a22:	38ff      	subs	r0, #255	; 0xff
     a24:	3304      	adds	r3, #4
     a26:	6004      	str	r4, [r0, #0]
     a28:	428b      	cmp	r3, r1
     a2a:	d1f8      	bne.n	a1e <sark_vic_init+0x1a>
     a2c:	4b07      	ldr	r3, [pc, #28]	; (a4c <sark_vic_init+0x48>)
     a2e:	4a08      	ldr	r2, [pc, #32]	; (a50 <sark_vic_init+0x4c>)
     a30:	601a      	str	r2, [r3, #0]
     a32:	bd10      	pop	{r4, pc}
     a34:	1f000014 	.word	0x1f000014
     a38:	1f00000c 	.word	0x1f00000c
     a3c:	1f000030 	.word	0x1f000030
     a40:	00000108 	.word	0x00000108
     a44:	1f000240 	.word	0x1f000240
     a48:	1f000200 	.word	0x1f000200
     a4c:	1f000034 	.word	0x1f000034
     a50:	0000030c 	.word	0x0000030c

00000a54 <sark_vic_set>:
     a54:	b530      	push	{r4, r5, lr}
     a56:	2810      	cmp	r0, #16
     a58:	d106      	bne.n	a68 <sark_vic_set+0x14>
     a5a:	2020      	movs	r0, #32
     a5c:	61c3      	str	r3, [r0, #28]
     a5e:	2001      	movs	r0, #1
     a60:	4b0a      	ldr	r3, [pc, #40]	; (a8c <sark_vic_set+0x38>)
     a62:	4088      	lsls	r0, r1
     a64:	6018      	str	r0, [r3, #0]
     a66:	e009      	b.n	a7c <sark_vic_set+0x28>
     a68:	4d09      	ldr	r5, [pc, #36]	; (a90 <sark_vic_set+0x3c>)
     a6a:	0084      	lsls	r4, r0, #2
     a6c:	1964      	adds	r4, r4, r5
     a6e:	6023      	str	r3, [r4, #0]
     a70:	4b08      	ldr	r3, [pc, #32]	; (a94 <sark_vic_set+0x40>)
     a72:	0080      	lsls	r0, r0, #2
     a74:	18c0      	adds	r0, r0, r3
     a76:	2320      	movs	r3, #32
     a78:	430b      	orrs	r3, r1
     a7a:	6003      	str	r3, [r0, #0]
     a7c:	2a00      	cmp	r2, #0
     a7e:	d004      	beq.n	a8a <sark_vic_set+0x36>
     a80:	2301      	movs	r3, #1
     a82:	408b      	lsls	r3, r1
     a84:	1c19      	adds	r1, r3, #0
     a86:	4b04      	ldr	r3, [pc, #16]	; (a98 <sark_vic_set+0x44>)
     a88:	6019      	str	r1, [r3, #0]
     a8a:	bd30      	pop	{r4, r5, pc}
     a8c:	1f00000c 	.word	0x1f00000c
     a90:	1f000100 	.word	0x1f000100
     a94:	1f000200 	.word	0x1f000200
     a98:	1f000010 	.word	0x1f000010

00000a9c <sark_fiq_han>:
     a9c:	e92d000c 	push	{r2, r3}
     aa0:	e3a03202 	mov	r3, #536870912	; 0x20000000
     aa4:	e5933014 	ldr	r3, [r3, #20]
     aa8:	e59f3010 	ldr	r3, [pc, #16]	; ac0 <sark_fiq_han+0x24>
     aac:	e5932038 	ldr	r2, [r3, #56]	; 0x38
     ab0:	e2822001 	add	r2, r2, #1
     ab4:	e5832038 	str	r2, [r3, #56]	; 0x38
     ab8:	e8bd000c 	pop	{r2, r3}
     abc:	e25ef004 	subs	pc, lr, #4
     ac0:	00400358 	.word	0x00400358

00000ac4 <sark_xalloc>:
     ac4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     ac6:	1c07      	adds	r7, r0, #0
     ac8:	1c15      	adds	r5, r2, #0
     aca:	2aff      	cmp	r2, #255	; 0xff
     acc:	d858      	bhi.n	b80 <sark_xalloc+0xbc>
     ace:	2900      	cmp	r1, #0
     ad0:	d100      	bne.n	ad4 <sark_xalloc+0x10>
     ad2:	e055      	b.n	b80 <sark_xalloc+0xbc>
     ad4:	0a1e      	lsrs	r6, r3, #8
     ad6:	0798      	lsls	r0, r3, #30
     ad8:	d401      	bmi.n	ade <sark_xalloc+0x1a>
     ada:	225c      	movs	r2, #92	; 0x5c
     adc:	7816      	ldrb	r6, [r2, #0]
     ade:	0236      	lsls	r6, r6, #8
     ae0:	1976      	adds	r6, r6, r5
     ae2:	2d00      	cmp	r5, #0
     ae4:	d005      	beq.n	af2 <sark_xalloc+0x2e>
     ae6:	4a27      	ldr	r2, [pc, #156]	; (b84 <sark_xalloc+0xc0>)
     ae8:	00b0      	lsls	r0, r6, #2
     aea:	6812      	ldr	r2, [r2, #0]
     aec:	5882      	ldr	r2, [r0, r2]
     aee:	2a00      	cmp	r2, #0
     af0:	d146      	bne.n	b80 <sark_xalloc+0xbc>
     af2:	2203      	movs	r2, #3
     af4:	3103      	adds	r1, #3
     af6:	4391      	bics	r1, r2
     af8:	2201      	movs	r2, #1
     afa:	3108      	adds	r1, #8
     afc:	4013      	ands	r3, r2
     afe:	9101      	str	r1, [sp, #4]
     b00:	9300      	str	r3, [sp, #0]
     b02:	d003      	beq.n	b0c <sark_xalloc+0x48>
     b04:	2006      	movs	r0, #6
     b06:	f7ff eb68 	blx	1d8 <sark_lock_get>
     b0a:	4684      	mov	ip, r0
     b0c:	683c      	ldr	r4, [r7, #0]
     b0e:	2200      	movs	r2, #0
     b10:	e02d      	b.n	b6e <sark_xalloc+0xaa>
     b12:	9801      	ldr	r0, [sp, #4]
     b14:	6821      	ldr	r1, [r4, #0]
     b16:	1823      	adds	r3, r4, r0
     b18:	42a3      	cmp	r3, r4
     b1a:	d92a      	bls.n	b72 <sark_xalloc+0xae>
     b1c:	428b      	cmp	r3, r1
     b1e:	d902      	bls.n	b26 <sark_xalloc+0x62>
     b20:	1c22      	adds	r2, r4, #0
     b22:	6864      	ldr	r4, [r4, #4]
     b24:	e023      	b.n	b6e <sark_xalloc+0xaa>
     b26:	1c18      	adds	r0, r3, #0
     b28:	3008      	adds	r0, #8
     b2a:	4281      	cmp	r1, r0
     b2c:	d904      	bls.n	b38 <sark_xalloc+0x74>
     b2e:	6019      	str	r1, [r3, #0]
     b30:	6861      	ldr	r1, [r4, #4]
     b32:	6059      	str	r1, [r3, #4]
     b34:	6023      	str	r3, [r4, #0]
     b36:	6063      	str	r3, [r4, #4]
     b38:	6863      	ldr	r3, [r4, #4]
     b3a:	2a00      	cmp	r2, #0
     b3c:	d001      	beq.n	b42 <sark_xalloc+0x7e>
     b3e:	6053      	str	r3, [r2, #4]
     b40:	e000      	b.n	b44 <sark_xalloc+0x80>
     b42:	603b      	str	r3, [r7, #0]
     b44:	9a00      	ldr	r2, [sp, #0]
     b46:	2a00      	cmp	r2, #0
     b48:	d003      	beq.n	b52 <sark_xalloc+0x8e>
     b4a:	4660      	mov	r0, ip
     b4c:	2106      	movs	r1, #6
     b4e:	f7ff eb56 	blx	1fc <sark_lock_free>
     b52:	480d      	ldr	r0, [pc, #52]	; (b88 <sark_xalloc+0xc4>)
     b54:	1833      	adds	r3, r6, r0
     b56:	6063      	str	r3, [r4, #4]
     b58:	2d00      	cmp	r5, #0
     b5a:	d005      	beq.n	b68 <sark_xalloc+0xa4>
     b5c:	4b09      	ldr	r3, [pc, #36]	; (b84 <sark_xalloc+0xc0>)
     b5e:	1c22      	adds	r2, r4, #0
     b60:	681b      	ldr	r3, [r3, #0]
     b62:	00b6      	lsls	r6, r6, #2
     b64:	3208      	adds	r2, #8
     b66:	50f2      	str	r2, [r6, r3]
     b68:	1c20      	adds	r0, r4, #0
     b6a:	3008      	adds	r0, #8
     b6c:	e009      	b.n	b82 <sark_xalloc+0xbe>
     b6e:	2c00      	cmp	r4, #0
     b70:	d1cf      	bne.n	b12 <sark_xalloc+0x4e>
     b72:	9900      	ldr	r1, [sp, #0]
     b74:	2900      	cmp	r1, #0
     b76:	d003      	beq.n	b80 <sark_xalloc+0xbc>
     b78:	4660      	mov	r0, ip
     b7a:	2106      	movs	r1, #6
     b7c:	f7ff eb3e 	blx	1fc <sark_lock_free>
     b80:	2000      	movs	r0, #0
     b82:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
     b84:	e5007fdc 	.word	0xe5007fdc
     b88:	ffff0000 	.word	0xffff0000

00000b8c <sark_alloc>:
     b8c:	4a04      	ldr	r2, [pc, #16]	; (ba0 <sark_alloc+0x14>)
     b8e:	b508      	push	{r3, lr}
     b90:	1c03      	adds	r3, r0, #0
     b92:	6990      	ldr	r0, [r2, #24]
     b94:	2200      	movs	r2, #0
     b96:	4359      	muls	r1, r3
     b98:	1c13      	adds	r3, r2, #0
     b9a:	f7ff ff93 	bl	ac4 <sark_xalloc>
     b9e:	bd08      	pop	{r3, pc}
     ba0:	00400358 	.word	0x00400358

00000ba4 <sark_heap_init>:
     ba4:	1c03      	adds	r3, r0, #0
     ba6:	330c      	adds	r3, #12
     ba8:	3908      	subs	r1, #8
     baa:	6043      	str	r3, [r0, #4]
     bac:	6003      	str	r3, [r0, #0]
     bae:	2300      	movs	r3, #0
     bb0:	6081      	str	r1, [r0, #8]
     bb2:	60c1      	str	r1, [r0, #12]
     bb4:	6103      	str	r3, [r0, #16]
     bb6:	600b      	str	r3, [r1, #0]
     bb8:	604b      	str	r3, [r1, #4]
     bba:	4770      	bx	lr

00000bbc <io_buf_init>:
     bbc:	b538      	push	{r3, r4, r5, lr}
     bbe:	4d0c      	ldr	r5, [pc, #48]	; (bf0 <io_buf_init+0x34>)
     bc0:	4b0c      	ldr	r3, [pc, #48]	; (bf4 <io_buf_init+0x38>)
     bc2:	6d29      	ldr	r1, [r5, #80]	; 0x50
     bc4:	6818      	ldr	r0, [r3, #0]
     bc6:	3110      	adds	r1, #16
     bc8:	2200      	movs	r2, #0
     bca:	2301      	movs	r3, #1
     bcc:	f7ff ff7a 	bl	ac4 <sark_xalloc>
     bd0:	1e04      	subs	r4, r0, #0
     bd2:	d102      	bne.n	bda <io_buf_init+0x1e>
     bd4:	200e      	movs	r0, #14
     bd6:	f7ff faa9 	bl	12c <rt_error>
     bda:	69eb      	ldr	r3, [r5, #28]
     bdc:	6063      	str	r3, [r4, #4]
     bde:	4a06      	ldr	r2, [pc, #24]	; (bf8 <io_buf_init+0x3c>)
     be0:	8b2b      	ldrh	r3, [r5, #24]
     be2:	60a3      	str	r3, [r4, #8]
     be4:	2300      	movs	r3, #0
     be6:	1c20      	adds	r0, r4, #0
     be8:	6023      	str	r3, [r4, #0]
     bea:	6013      	str	r3, [r2, #0]
     bec:	60e3      	str	r3, [r4, #12]
     bee:	bd38      	pop	{r3, r4, r5, pc}
     bf0:	e5007f00 	.word	0xe5007f00
     bf4:	e5007fd0 	.word	0xe5007fd0
     bf8:	00400010 	.word	0x00400010

00000bfc <io_put_char>:
     bfc:	b570      	push	{r4, r5, r6, lr}
     bfe:	1c0d      	adds	r5, r1, #0
     c00:	2803      	cmp	r0, #3
     c02:	d907      	bls.n	c14 <ETH_RX_SIZE+0x14>
     c04:	4a34      	ldr	r2, [pc, #208]	; (cd8 <ETH_RX_SIZE+0xd8>)
     c06:	6813      	ldr	r3, [r2, #0]
     c08:	54c1      	strb	r1, [r0, r3]
     c0a:	3301      	adds	r3, #1
     c0c:	6013      	str	r3, [r2, #0]
     c0e:	2200      	movs	r2, #0
     c10:	54c2      	strb	r2, [r0, r3]
     c12:	e060      	b.n	cd6 <ETH_RX_SIZE+0xd6>
     c14:	2800      	cmp	r0, #0
     c16:	d13a      	bne.n	c8e <ETH_RX_SIZE+0x8e>
     c18:	4b30      	ldr	r3, [pc, #192]	; (cdc <ETH_RX_SIZE+0xdc>)
     c1a:	681b      	ldr	r3, [r3, #0]
     c1c:	2b00      	cmp	r3, #0
     c1e:	d11d      	bne.n	c5c <ETH_RX_SIZE+0x5c>
     c20:	2001      	movs	r0, #1
     c22:	2192      	movs	r1, #146	; 0x92
     c24:	4081      	lsls	r1, r0
     c26:	f7ff ffb1 	bl	b8c <sark_alloc>
     c2a:	1e04      	subs	r4, r0, #0
     c2c:	d102      	bne.n	c34 <ETH_RX_SIZE+0x34>
     c2e:	200e      	movs	r0, #14
     c30:	f7ff fa7c 	bl	12c <rt_error>
     c34:	2307      	movs	r3, #7
     c36:	7223      	strb	r3, [r4, #8]
     c38:	2300      	movs	r3, #0
     c3a:	7263      	strb	r3, [r4, #9]
     c3c:	23ff      	movs	r3, #255	; 0xff
     c3e:	72a3      	strb	r3, [r4, #10]
     c40:	4b27      	ldr	r3, [pc, #156]	; (ce0 <ETH_RX_SIZE+0xe0>)
     c42:	889a      	ldrh	r2, [r3, #4]
     c44:	81a2      	strh	r2, [r4, #12]
     c46:	4a27      	ldr	r2, [pc, #156]	; (ce4 <ETH_RX_SIZE+0xe4>)
     c48:	6812      	ldr	r2, [r2, #0]
     c4a:	72e2      	strb	r2, [r4, #11]
     c4c:	881b      	ldrh	r3, [r3, #0]
     c4e:	81e3      	strh	r3, [r4, #14]
     c50:	2340      	movs	r3, #64	; 0x40
     c52:	8223      	strh	r3, [r4, #16]
     c54:	230c      	movs	r3, #12
     c56:	80a3      	strh	r3, [r4, #4]
     c58:	4b20      	ldr	r3, [pc, #128]	; (cdc <ETH_RX_SIZE+0xdc>)
     c5a:	601c      	str	r4, [r3, #0]
     c5c:	4b1f      	ldr	r3, [pc, #124]	; (cdc <ETH_RX_SIZE+0xdc>)
     c5e:	6818      	ldr	r0, [r3, #0]
     c60:	8883      	ldrh	r3, [r0, #4]
     c62:	18c2      	adds	r2, r0, r3
     c64:	3301      	adds	r3, #1
     c66:	041b      	lsls	r3, r3, #16
     c68:	0c1b      	lsrs	r3, r3, #16
     c6a:	7215      	strb	r5, [r2, #8]
     c6c:	8083      	strh	r3, [r0, #4]
     c6e:	2d00      	cmp	r5, #0
     c70:	d005      	beq.n	c7e <ETH_RX_SIZE+0x7e>
     c72:	2d0a      	cmp	r5, #10
     c74:	d003      	beq.n	c7e <ETH_RX_SIZE+0x7e>
     c76:	2286      	movs	r2, #134	; 0x86
     c78:	0052      	lsls	r2, r2, #1
     c7a:	4293      	cmp	r3, r2
     c7c:	d12b      	bne.n	cd6 <ETH_RX_SIZE+0xd6>
     c7e:	210a      	movs	r1, #10
     c80:	f7ff fcaa 	bl	5d8 <sark_msg_send>
     c84:	4b15      	ldr	r3, [pc, #84]	; (cdc <ETH_RX_SIZE+0xdc>)
     c86:	220c      	movs	r2, #12
     c88:	681b      	ldr	r3, [r3, #0]
     c8a:	809a      	strh	r2, [r3, #4]
     c8c:	e023      	b.n	cd6 <ETH_RX_SIZE+0xd6>
     c8e:	2802      	cmp	r0, #2
     c90:	d121      	bne.n	cd6 <ETH_RX_SIZE+0xd6>
     c92:	4e15      	ldr	r6, [pc, #84]	; (ce8 <ETH_RX_SIZE+0xe8>)
     c94:	6833      	ldr	r3, [r6, #0]
     c96:	2b00      	cmp	r3, #0
     c98:	d105      	bne.n	ca6 <ETH_RX_SIZE+0xa6>
     c9a:	4b12      	ldr	r3, [pc, #72]	; (ce4 <ETH_RX_SIZE+0xe4>)
     c9c:	69dc      	ldr	r4, [r3, #28]
     c9e:	f7ff ff8d 	bl	bbc <io_buf_init>
     ca2:	65a0      	str	r0, [r4, #88]	; 0x58
     ca4:	6030      	str	r0, [r6, #0]
     ca6:	4a11      	ldr	r2, [pc, #68]	; (cec <ETH_RX_SIZE+0xec>)
     ca8:	6834      	ldr	r4, [r6, #0]
     caa:	6813      	ldr	r3, [r2, #0]
     cac:	18e1      	adds	r1, r4, r3
     cae:	3301      	adds	r3, #1
     cb0:	6013      	str	r3, [r2, #0]
     cb2:	4a0b      	ldr	r2, [pc, #44]	; (ce0 <ETH_RX_SIZE+0xe0>)
     cb4:	740d      	strb	r5, [r1, #16]
     cb6:	6d12      	ldr	r2, [r2, #80]	; 0x50
     cb8:	4293      	cmp	r3, r2
     cba:	d107      	bne.n	ccc <ETH_RX_SIZE+0xcc>
     cbc:	60e3      	str	r3, [r4, #12]
     cbe:	f7ff ff7d 	bl	bbc <io_buf_init>
     cc2:	6833      	ldr	r3, [r6, #0]
     cc4:	6020      	str	r0, [r4, #0]
     cc6:	681b      	ldr	r3, [r3, #0]
     cc8:	6033      	str	r3, [r6, #0]
     cca:	e004      	b.n	cd6 <ETH_RX_SIZE+0xd6>
     ccc:	2d00      	cmp	r5, #0
     cce:	d001      	beq.n	cd4 <ETH_RX_SIZE+0xd4>
     cd0:	2d0a      	cmp	r5, #10
     cd2:	d100      	bne.n	cd6 <ETH_RX_SIZE+0xd6>
     cd4:	60e3      	str	r3, [r4, #12]
     cd6:	bd70      	pop	{r4, r5, r6, pc}
     cd8:	00400014 	.word	0x00400014
     cdc:	00400008 	.word	0x00400008
     ce0:	e5007f00 	.word	0xe5007f00
     ce4:	00400358 	.word	0x00400358
     ce8:	0040000c 	.word	0x0040000c
     cec:	00400010 	.word	0x00400010

00000cf0 <io_put_fixed>:
     cf0:	b5f0      	push	{r4, r5, r6, r7, lr}
     cf2:	b08d      	sub	sp, #52	; 0x34
     cf4:	9001      	str	r0, [sp, #4]
     cf6:	1c15      	adds	r5, r2, #0
     cf8:	2b0c      	cmp	r3, #12
     cfa:	d900      	bls.n	cfe <io_put_fixed+0xe>
     cfc:	230c      	movs	r3, #12
     cfe:	1c0a      	adds	r2, r1, #0
     d00:	2400      	movs	r4, #0
     d02:	e008      	b.n	d16 <io_put_fixed+0x26>
     d04:	0c17      	lsrs	r7, r2, #16
     d06:	3730      	adds	r7, #48	; 0x30
     d08:	46bc      	mov	ip, r7
     d0a:	a805      	add	r0, sp, #20
     d0c:	3401      	adds	r4, #1
     d0e:	18c7      	adds	r7, r0, r3
     d10:	4266      	negs	r6, r4
     d12:	4660      	mov	r0, ip
     d14:	55b8      	strb	r0, [r7, r6]
     d16:	0412      	lsls	r2, r2, #16
     d18:	0c12      	lsrs	r2, r2, #16
     d1a:	200a      	movs	r0, #10
     d1c:	4342      	muls	r2, r0
     d1e:	429c      	cmp	r4, r3
     d20:	d1f0      	bne.n	d04 <io_put_fixed+0x14>
     d22:	0c12      	lsrs	r2, r2, #16
     d24:	2004      	movs	r0, #4
     d26:	4290      	cmp	r0, r2
     d28:	4180      	sbcs	r0, r0
     d2a:	2601      	movs	r6, #1
     d2c:	4240      	negs	r0, r0
     d2e:	2200      	movs	r2, #0
     d30:	46b4      	mov	ip, r6
     d32:	2730      	movs	r7, #48	; 0x30
     d34:	e00a      	b.n	d4c <io_put_fixed+0x5c>
     d36:	a805      	add	r0, sp, #20
     d38:	5c16      	ldrb	r6, [r2, r0]
     d3a:	2e38      	cmp	r6, #56	; 0x38
     d3c:	d902      	bls.n	d44 <io_put_fixed+0x54>
     d3e:	5417      	strb	r7, [r2, r0]
     d40:	2001      	movs	r0, #1
     d42:	e002      	b.n	d4a <io_put_fixed+0x5a>
     d44:	3601      	adds	r6, #1
     d46:	5416      	strb	r6, [r2, r0]
     d48:	2000      	movs	r0, #0
     d4a:	3201      	adds	r2, #1
     d4c:	429a      	cmp	r2, r3
     d4e:	d202      	bcs.n	d56 <io_put_fixed+0x66>
     d50:	4666      	mov	r6, ip
     d52:	4230      	tst	r0, r6
     d54:	d1ef      	bne.n	d36 <io_put_fixed+0x46>
     d56:	2b00      	cmp	r3, #0
     d58:	d003      	beq.n	d62 <io_put_fixed+0x72>
     d5a:	242e      	movs	r4, #46	; 0x2e
     d5c:	aa05      	add	r2, sp, #20
     d5e:	54d4      	strb	r4, [r2, r3]
     d60:	1c5c      	adds	r4, r3, #1
     d62:	0c09      	lsrs	r1, r1, #16
     d64:	1841      	adds	r1, r0, r1
     d66:	a803      	add	r0, sp, #12
     d68:	f7ff eaa0 	blx	2ac <sark_div10>
     d6c:	9a04      	ldr	r2, [sp, #16]
     d6e:	9903      	ldr	r1, [sp, #12]
     d70:	ab05      	add	r3, sp, #20
     d72:	3230      	adds	r2, #48	; 0x30
     d74:	54e2      	strb	r2, [r4, r3]
     d76:	1c66      	adds	r6, r4, #1
     d78:	2900      	cmp	r1, #0
     d7a:	d001      	beq.n	d80 <io_put_fixed+0x90>
     d7c:	1c34      	adds	r4, r6, #0
     d7e:	e7f2      	b.n	d66 <io_put_fixed+0x76>
     d80:	9813      	ldr	r0, [sp, #76]	; 0x4c
     d82:	2800      	cmp	r0, #0
     d84:	d008      	beq.n	d98 <io_put_fixed+0xa8>
     d86:	222d      	movs	r2, #45	; 0x2d
     d88:	559a      	strb	r2, [r3, r6]
     d8a:	1ca6      	adds	r6, r4, #2
     d8c:	e004      	b.n	d98 <io_put_fixed+0xa8>
     d8e:	9801      	ldr	r0, [sp, #4]
     d90:	9912      	ldr	r1, [sp, #72]	; 0x48
     d92:	f7ff ff33 	bl	bfc <io_put_char>
     d96:	3d01      	subs	r5, #1
     d98:	1c73      	adds	r3, r6, #1
     d9a:	429d      	cmp	r5, r3
     d9c:	d8f7      	bhi.n	d8e <io_put_fixed+0x9e>
     d9e:	3e01      	subs	r6, #1
     da0:	ab05      	add	r3, sp, #20
     da2:	5cf1      	ldrb	r1, [r6, r3]
     da4:	9801      	ldr	r0, [sp, #4]
     da6:	f7ff ff29 	bl	bfc <io_put_char>
     daa:	2e00      	cmp	r6, #0
     dac:	d1f7      	bne.n	d9e <io_put_fixed+0xae>
     dae:	b00d      	add	sp, #52	; 0x34
     db0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

00000db4 <io_printf>:
     db4:	b40e      	push	{r1, r2, r3}
     db6:	b5f0      	push	{r4, r5, r6, r7, lr}
     db8:	b08c      	sub	sp, #48	; 0x30
     dba:	1c04      	adds	r4, r0, #0
     dbc:	9d11      	ldr	r5, [sp, #68]	; 0x44
     dbe:	2803      	cmp	r0, #3
     dc0:	d100      	bne.n	dc4 <io_printf+0x10>
     dc2:	e145      	b.n	1050 <SV_SIZE+0x50>
     dc4:	d903      	bls.n	dce <io_printf+0x1a>
     dc6:	4aa5      	ldr	r2, [pc, #660]	; (105c <SV_SIZE+0x5c>)
     dc8:	2300      	movs	r3, #0
     dca:	7003      	strb	r3, [r0, #0]
     dcc:	6013      	str	r3, [r2, #0]
     dce:	ab12      	add	r3, sp, #72	; 0x48
     dd0:	9305      	str	r3, [sp, #20]
     dd2:	7829      	ldrb	r1, [r5, #0]
     dd4:	2900      	cmp	r1, #0
     dd6:	d100      	bne.n	dda <io_printf+0x26>
     dd8:	e13a      	b.n	1050 <SV_SIZE+0x50>
     dda:	2925      	cmp	r1, #37	; 0x25
     ddc:	d001      	beq.n	de2 <io_printf+0x2e>
     dde:	3501      	adds	r5, #1
     de0:	e053      	b.n	e8a <io_printf+0xd6>
     de2:	7869      	ldrb	r1, [r5, #1]
     de4:	3502      	adds	r5, #2
     de6:	2900      	cmp	r1, #0
     de8:	d100      	bne.n	dec <io_printf+0x38>
     dea:	e131      	b.n	1050 <SV_SIZE+0x50>
     dec:	2930      	cmp	r1, #48	; 0x30
     dee:	d002      	beq.n	df6 <io_printf+0x42>
     df0:	2020      	movs	r0, #32
     df2:	9003      	str	r0, [sp, #12]
     df4:	e000      	b.n	df8 <io_printf+0x44>
     df6:	9103      	str	r1, [sp, #12]
     df8:	2600      	movs	r6, #0
     dfa:	220a      	movs	r2, #10
     dfc:	e007      	b.n	e0e <io_printf+0x5a>
     dfe:	4356      	muls	r6, r2
     e00:	1876      	adds	r6, r6, r1
     e02:	7829      	ldrb	r1, [r5, #0]
     e04:	3e30      	subs	r6, #48	; 0x30
     e06:	3501      	adds	r5, #1
     e08:	2900      	cmp	r1, #0
     e0a:	d100      	bne.n	e0e <io_printf+0x5a>
     e0c:	e120      	b.n	1050 <SV_SIZE+0x50>
     e0e:	1c0b      	adds	r3, r1, #0
     e10:	3b30      	subs	r3, #48	; 0x30
     e12:	2b09      	cmp	r3, #9
     e14:	d9f3      	bls.n	dfe <io_printf+0x4a>
     e16:	1c37      	adds	r7, r6, #0
     e18:	2306      	movs	r3, #6
     e1a:	292e      	cmp	r1, #46	; 0x2e
     e1c:	d110      	bne.n	e40 <io_printf+0x8c>
     e1e:	7829      	ldrb	r1, [r5, #0]
     e20:	2300      	movs	r3, #0
     e22:	3501      	adds	r5, #1
     e24:	200a      	movs	r0, #10
     e26:	e004      	b.n	e32 <io_printf+0x7e>
     e28:	4343      	muls	r3, r0
     e2a:	185b      	adds	r3, r3, r1
     e2c:	3b30      	subs	r3, #48	; 0x30
     e2e:	7829      	ldrb	r1, [r5, #0]
     e30:	3501      	adds	r5, #1
     e32:	1c0a      	adds	r2, r1, #0
     e34:	3a30      	subs	r2, #48	; 0x30
     e36:	2a09      	cmp	r2, #9
     e38:	d9f6      	bls.n	e28 <io_printf+0x74>
     e3a:	2900      	cmp	r1, #0
     e3c:	d100      	bne.n	e40 <io_printf+0x8c>
     e3e:	e107      	b.n	1050 <SV_SIZE+0x50>
     e40:	296b      	cmp	r1, #107	; 0x6b
     e42:	d100      	bne.n	e46 <io_printf+0x92>
     e44:	e0b0      	b.n	fa8 <RTR_TST2+0xa4>
     e46:	d80d      	bhi.n	e64 <io_printf+0xb0>
     e48:	2963      	cmp	r1, #99	; 0x63
     e4a:	d01a      	beq.n	e82 <io_printf+0xce>
     e4c:	d805      	bhi.n	e5a <io_printf+0xa6>
     e4e:	294b      	cmp	r1, #75	; 0x4b
     e50:	d100      	bne.n	e54 <io_printf+0xa0>
     e52:	e09a      	b.n	f8a <RTR_TST2+0x86>
     e54:	2952      	cmp	r1, #82	; 0x52
     e56:	d118      	bne.n	e8a <io_printf+0xd6>
     e58:	e09e      	b.n	f98 <RTR_TST2+0x94>
     e5a:	2964      	cmp	r1, #100	; 0x64
     e5c:	d036      	beq.n	ecc <io_printf+0x118>
     e5e:	2966      	cmp	r1, #102	; 0x66
     e60:	d113      	bne.n	e8a <io_printf+0xd6>
     e62:	e092      	b.n	f8a <RTR_TST2+0x86>
     e64:	2975      	cmp	r1, #117	; 0x75
     e66:	d066      	beq.n	f36 <RTR_TST2+0x32>
     e68:	d805      	bhi.n	e76 <io_printf+0xc2>
     e6a:	2972      	cmp	r1, #114	; 0x72
     e6c:	d100      	bne.n	e70 <io_printf+0xbc>
     e6e:	e09b      	b.n	fa8 <RTR_TST2+0xa4>
     e70:	2973      	cmp	r1, #115	; 0x73
     e72:	d10a      	bne.n	e8a <io_printf+0xd6>
     e74:	e00d      	b.n	e92 <io_printf+0xde>
     e76:	2978      	cmp	r1, #120	; 0x78
     e78:	d100      	bne.n	e7c <io_printf+0xc8>
     e7a:	e0a6      	b.n	fca <RTR_TST2+0xc6>
     e7c:	297a      	cmp	r1, #122	; 0x7a
     e7e:	d104      	bne.n	e8a <io_printf+0xd6>
     e80:	e0ce      	b.n	1020 <SV_SIZE+0x20>
     e82:	9b05      	ldr	r3, [sp, #20]
     e84:	6819      	ldr	r1, [r3, #0]
     e86:	1d1a      	adds	r2, r3, #4
     e88:	9205      	str	r2, [sp, #20]
     e8a:	1c20      	adds	r0, r4, #0
     e8c:	f7ff feb6 	bl	bfc <io_put_char>
     e90:	e79f      	b.n	dd2 <io_printf+0x1e>
     e92:	9b05      	ldr	r3, [sp, #20]
     e94:	681e      	ldr	r6, [r3, #0]
     e96:	1d1a      	adds	r2, r3, #4
     e98:	1c33      	adds	r3, r6, #0
     e9a:	9205      	str	r2, [sp, #20]
     e9c:	781a      	ldrb	r2, [r3, #0]
     e9e:	1b99      	subs	r1, r3, r6
     ea0:	9103      	str	r1, [sp, #12]
     ea2:	3301      	adds	r3, #1
     ea4:	2a00      	cmp	r2, #0
     ea6:	d1f9      	bne.n	e9c <io_printf+0xe8>
     ea8:	e004      	b.n	eb4 <io_printf+0x100>
     eaa:	1c20      	adds	r0, r4, #0
     eac:	2120      	movs	r1, #32
     eae:	f7ff fea5 	bl	bfc <io_put_char>
     eb2:	3f01      	subs	r7, #1
     eb4:	9a03      	ldr	r2, [sp, #12]
     eb6:	4297      	cmp	r7, r2
     eb8:	dcf7      	bgt.n	eaa <io_printf+0xf6>
     eba:	e003      	b.n	ec4 <io_printf+0x110>
     ebc:	1c20      	adds	r0, r4, #0
     ebe:	3601      	adds	r6, #1
     ec0:	f7ff fe9c 	bl	bfc <io_put_char>
     ec4:	7831      	ldrb	r1, [r6, #0]
     ec6:	2900      	cmp	r1, #0
     ec8:	d1f8      	bne.n	ebc <io_printf+0x108>
     eca:	e782      	b.n	dd2 <io_printf+0x1e>
     ecc:	9b05      	ldr	r3, [sp, #20]
     ece:	6819      	ldr	r1, [r3, #0]
     ed0:	1d1a      	adds	r2, r3, #4
     ed2:	2300      	movs	r3, #0
     ed4:	9205      	str	r2, [sp, #20]
     ed6:	9303      	str	r3, [sp, #12]
     ed8:	4299      	cmp	r1, r3
     eda:	da02      	bge.n	ee2 <io_printf+0x12e>
     edc:	202d      	movs	r0, #45	; 0x2d
     ede:	4249      	negs	r1, r1
     ee0:	9003      	str	r0, [sp, #12]
     ee2:	2700      	movs	r7, #0
     ee4:	a806      	add	r0, sp, #24
     ee6:	f7ff e9e2 	blx	2ac <sark_div10>
     eea:	9a07      	ldr	r2, [sp, #28]
     eec:	9906      	ldr	r1, [sp, #24]
     eee:	ab08      	add	r3, sp, #32
     ef0:	3230      	adds	r2, #48	; 0x30
     ef2:	54fa      	strb	r2, [r7, r3]
     ef4:	3701      	adds	r7, #1
     ef6:	2900      	cmp	r1, #0
     ef8:	d1f4      	bne.n	ee4 <io_printf+0x130>
     efa:	e001      	b.n	f00 <RTR_TST1>
     efc:	2f00      	cmp	r7, #0
     efe:	d003      	beq.n	f08 <RTR_TST2+0x4>
     f00:	3f01      	subs	r7, #1
     f02:	5cfa      	ldrb	r2, [r7, r3]
     f04:	2a30      	cmp	r2, #48	; 0x30
     f06:	d0f9      	beq.n	efc <io_printf+0x148>
     f08:	9903      	ldr	r1, [sp, #12]
     f0a:	2900      	cmp	r1, #0
     f0c:	d007      	beq.n	f1e <RTR_TST2+0x1a>
     f0e:	3701      	adds	r7, #1
     f10:	55d9      	strb	r1, [r3, r7]
     f12:	e004      	b.n	f1e <RTR_TST2+0x1a>
     f14:	1c20      	adds	r0, r4, #0
     f16:	2120      	movs	r1, #32
     f18:	f7ff fe70 	bl	bfc <io_put_char>
     f1c:	3e01      	subs	r6, #1
     f1e:	1c7b      	adds	r3, r7, #1
     f20:	429e      	cmp	r6, r3
     f22:	d8f7      	bhi.n	f14 <RTR_TST2+0x10>
     f24:	ab08      	add	r3, sp, #32
     f26:	5cf9      	ldrb	r1, [r7, r3]
     f28:	1c20      	adds	r0, r4, #0
     f2a:	3f01      	subs	r7, #1
     f2c:	f7ff fe66 	bl	bfc <io_put_char>
     f30:	1c79      	adds	r1, r7, #1
     f32:	d1f7      	bne.n	f24 <RTR_TST2+0x20>
     f34:	e74d      	b.n	dd2 <io_printf+0x1e>
     f36:	9b05      	ldr	r3, [sp, #20]
     f38:	2700      	movs	r7, #0
     f3a:	6819      	ldr	r1, [r3, #0]
     f3c:	1d1a      	adds	r2, r3, #4
     f3e:	9205      	str	r2, [sp, #20]
     f40:	a806      	add	r0, sp, #24
     f42:	f7ff e9b4 	blx	2ac <sark_div10>
     f46:	9a07      	ldr	r2, [sp, #28]
     f48:	9906      	ldr	r1, [sp, #24]
     f4a:	3230      	adds	r2, #48	; 0x30
     f4c:	ab08      	add	r3, sp, #32
     f4e:	54fa      	strb	r2, [r7, r3]
     f50:	3701      	adds	r7, #1
     f52:	2900      	cmp	r1, #0
     f54:	d1f4      	bne.n	f40 <RTR_TST2+0x3c>
     f56:	e001      	b.n	f5c <RTR_TST2+0x58>
     f58:	2f00      	cmp	r7, #0
     f5a:	d00a      	beq.n	f72 <RTR_TST2+0x6e>
     f5c:	3f01      	subs	r7, #1
     f5e:	ab08      	add	r3, sp, #32
     f60:	5cfb      	ldrb	r3, [r7, r3]
     f62:	2b30      	cmp	r3, #48	; 0x30
     f64:	d105      	bne.n	f72 <RTR_TST2+0x6e>
     f66:	e7f7      	b.n	f58 <RTR_TST2+0x54>
     f68:	1c20      	adds	r0, r4, #0
     f6a:	9903      	ldr	r1, [sp, #12]
     f6c:	f7ff fe46 	bl	bfc <io_put_char>
     f70:	3e01      	subs	r6, #1
     f72:	1c7b      	adds	r3, r7, #1
     f74:	429e      	cmp	r6, r3
     f76:	d8f7      	bhi.n	f68 <RTR_TST2+0x64>
     f78:	ab08      	add	r3, sp, #32
     f7a:	5cf9      	ldrb	r1, [r7, r3]
     f7c:	1c20      	adds	r0, r4, #0
     f7e:	3f01      	subs	r7, #1
     f80:	f7ff fe3c 	bl	bfc <io_put_char>
     f84:	1c7a      	adds	r2, r7, #1
     f86:	d1f7      	bne.n	f78 <RTR_TST2+0x74>
     f88:	e723      	b.n	dd2 <io_printf+0x1e>
     f8a:	9a05      	ldr	r2, [sp, #20]
     f8c:	9803      	ldr	r0, [sp, #12]
     f8e:	1d11      	adds	r1, r2, #4
     f90:	9105      	str	r1, [sp, #20]
     f92:	6811      	ldr	r1, [r2, #0]
     f94:	9000      	str	r0, [sp, #0]
     f96:	e005      	b.n	fa4 <RTR_TST2+0xa0>
     f98:	9a05      	ldr	r2, [sp, #20]
     f9a:	1d11      	adds	r1, r2, #4
     f9c:	9105      	str	r1, [sp, #20]
     f9e:	6811      	ldr	r1, [r2, #0]
     fa0:	9a03      	ldr	r2, [sp, #12]
     fa2:	9200      	str	r2, [sp, #0]
     fa4:	2200      	movs	r2, #0
     fa6:	e00a      	b.n	fbe <RTR_TST2+0xba>
     fa8:	9a05      	ldr	r2, [sp, #20]
     faa:	1d11      	adds	r1, r2, #4
     fac:	6812      	ldr	r2, [r2, #0]
     fae:	9105      	str	r1, [sp, #20]
     fb0:	17d0      	asrs	r0, r2, #31
     fb2:	1811      	adds	r1, r2, r0
     fb4:	4041      	eors	r1, r0
     fb6:	0049      	lsls	r1, r1, #1
     fb8:	9803      	ldr	r0, [sp, #12]
     fba:	0fd2      	lsrs	r2, r2, #31
     fbc:	9000      	str	r0, [sp, #0]
     fbe:	9201      	str	r2, [sp, #4]
     fc0:	1c20      	adds	r0, r4, #0
     fc2:	1c32      	adds	r2, r6, #0
     fc4:	f7ff fe94 	bl	cf0 <io_put_fixed>
     fc8:	e703      	b.n	dd2 <io_printf+0x1e>
     fca:	9b05      	ldr	r3, [sp, #20]
     fcc:	210f      	movs	r1, #15
     fce:	1d1a      	adds	r2, r3, #4
     fd0:	4823      	ldr	r0, [pc, #140]	; (1060 <SV_SIZE+0x60>)
     fd2:	681b      	ldr	r3, [r3, #0]
     fd4:	2700      	movs	r7, #0
     fd6:	468c      	mov	ip, r1
     fd8:	9205      	str	r2, [sp, #20]
     fda:	4662      	mov	r2, ip
     fdc:	401a      	ands	r2, r3
     fde:	5c81      	ldrb	r1, [r0, r2]
     fe0:	aa08      	add	r2, sp, #32
     fe2:	54b9      	strb	r1, [r7, r2]
     fe4:	091b      	lsrs	r3, r3, #4
     fe6:	3701      	adds	r7, #1
     fe8:	2b00      	cmp	r3, #0
     fea:	d1f6      	bne.n	fda <RTR_TST2+0xd6>
     fec:	e001      	b.n	ff2 <RTR_TST2+0xee>
     fee:	2f00      	cmp	r7, #0
     ff0:	d00a      	beq.n	1008 <SV_SIZE+0x8>
     ff2:	3f01      	subs	r7, #1
     ff4:	ab08      	add	r3, sp, #32
     ff6:	5cfb      	ldrb	r3, [r7, r3]
     ff8:	2b30      	cmp	r3, #48	; 0x30
     ffa:	d105      	bne.n	1008 <SV_SIZE+0x8>
     ffc:	e7f7      	b.n	fee <RTR_TST2+0xea>
     ffe:	1c20      	adds	r0, r4, #0
    1000:	9903      	ldr	r1, [sp, #12]
    1002:	f7ff fdfb 	bl	bfc <io_put_char>
    1006:	3e01      	subs	r6, #1
    1008:	1c7b      	adds	r3, r7, #1
    100a:	429e      	cmp	r6, r3
    100c:	d8f7      	bhi.n	ffe <RTR_TST2+0xfa>
    100e:	ab08      	add	r3, sp, #32
    1010:	5cf9      	ldrb	r1, [r7, r3]
    1012:	1c20      	adds	r0, r4, #0
    1014:	3f01      	subs	r7, #1
    1016:	f7ff fdf1 	bl	bfc <io_put_char>
    101a:	1c7a      	adds	r2, r7, #1
    101c:	d1f7      	bne.n	100e <SV_SIZE+0xe>
    101e:	e6d8      	b.n	dd2 <io_printf+0x1e>
    1020:	9b05      	ldr	r3, [sp, #20]
    1022:	1e77      	subs	r7, r6, #1
    1024:	1d1a      	adds	r2, r3, #4
    1026:	681b      	ldr	r3, [r3, #0]
    1028:	9303      	str	r3, [sp, #12]
    102a:	4b0e      	ldr	r3, [pc, #56]	; (1064 <SV_SIZE+0x64>)
    102c:	9205      	str	r2, [sp, #20]
    102e:	18f6      	adds	r6, r6, r3
    1030:	00b6      	lsls	r6, r6, #2
    1032:	e00a      	b.n	104a <SV_SIZE+0x4a>
    1034:	9a03      	ldr	r2, [sp, #12]
    1036:	230f      	movs	r3, #15
    1038:	40f2      	lsrs	r2, r6
    103a:	4013      	ands	r3, r2
    103c:	4a08      	ldr	r2, [pc, #32]	; (1060 <SV_SIZE+0x60>)
    103e:	1c20      	adds	r0, r4, #0
    1040:	5cd1      	ldrb	r1, [r2, r3]
    1042:	f7ff fddb 	bl	bfc <io_put_char>
    1046:	3f01      	subs	r7, #1
    1048:	3e04      	subs	r6, #4
    104a:	2f00      	cmp	r7, #0
    104c:	daf2      	bge.n	1034 <SV_SIZE+0x34>
    104e:	e6c0      	b.n	dd2 <io_printf+0x1e>
    1050:	b00c      	add	sp, #48	; 0x30
    1052:	bcf0      	pop	{r4, r5, r6, r7}
    1054:	bc08      	pop	{r3}
    1056:	b003      	add	sp, #12
    1058:	4718      	bx	r3
    105a:	46c0      	nop			; (mov r8, r8)
    105c:	00400014 	.word	0x00400014
    1060:	0000192b 	.word	0x0000192b
    1064:	3fffffff 	.word	0x3fffffff

00001068 <configure_dma_controller>:
    1068:	4b06      	ldr	r3, [pc, #24]	; (1084 <configure_dma_controller+0x1c>)
    106a:	223f      	movs	r2, #63	; 0x3f
    106c:	601a      	str	r2, [r3, #0]
    106e:	220d      	movs	r2, #13
    1070:	601a      	str	r2, [r3, #0]
    1072:	4b05      	ldr	r3, [pc, #20]	; (1088 <configure_dma_controller+0x20>)
    1074:	22c0      	movs	r2, #192	; 0xc0
    1076:	0112      	lsls	r2, r2, #4
    1078:	601a      	str	r2, [r3, #0]
    107a:	4b04      	ldr	r3, [pc, #16]	; (108c <configure_dma_controller+0x24>)
    107c:	2203      	movs	r2, #3
    107e:	601a      	str	r2, [r3, #0]
    1080:	4770      	bx	lr
    1082:	46c0      	nop			; (mov r8, r8)
    1084:	40000010 	.word	0x40000010
    1088:	40000018 	.word	0x40000018
    108c:	40000028 	.word	0x40000028

00001090 <configure_timer1>:
    1090:	4b07      	ldr	r3, [pc, #28]	; (10b0 <configure_timer1+0x20>)
    1092:	2200      	movs	r2, #0
    1094:	601a      	str	r2, [r3, #0]
    1096:	4b07      	ldr	r3, [pc, #28]	; (10b4 <configure_timer1+0x24>)
    1098:	2201      	movs	r2, #1
    109a:	601a      	str	r2, [r3, #0]
    109c:	4b06      	ldr	r3, [pc, #24]	; (10b8 <configure_timer1+0x28>)
    109e:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    10a0:	4358      	muls	r0, r3
    10a2:	2384      	movs	r3, #132	; 0x84
    10a4:	059b      	lsls	r3, r3, #22
    10a6:	6018      	str	r0, [r3, #0]
    10a8:	4b04      	ldr	r3, [pc, #16]	; (10bc <configure_timer1+0x2c>)
    10aa:	6018      	str	r0, [r3, #0]
    10ac:	4770      	bx	lr
    10ae:	46c0      	nop			; (mov r8, r8)
    10b0:	21000008 	.word	0x21000008
    10b4:	2100000c 	.word	0x2100000c
    10b8:	e5007f00 	.word	0xe5007f00
    10bc:	21000018 	.word	0x21000018

000010c0 <configure_vic>:
    10c0:	4b2c      	ldr	r3, [pc, #176]	; (1174 <configure_vic+0xb4>)
    10c2:	4a2d      	ldr	r2, [pc, #180]	; (1178 <configure_vic+0xb8>)
    10c4:	b510      	push	{r4, lr}
    10c6:	601a      	str	r2, [r3, #0]
    10c8:	4a2c      	ldr	r2, [pc, #176]	; (117c <configure_vic+0xbc>)
    10ca:	2320      	movs	r3, #32
    10cc:	69d9      	ldr	r1, [r3, #28]
    10ce:	6011      	str	r1, [r2, #0]
    10d0:	492b      	ldr	r1, [pc, #172]	; (1180 <configure_vic+0xc0>)
    10d2:	4a2c      	ldr	r2, [pc, #176]	; (1184 <configure_vic+0xc4>)
    10d4:	6808      	ldr	r0, [r1, #0]
    10d6:	6010      	str	r0, [r2, #0]
    10d8:	4a2b      	ldr	r2, [pc, #172]	; (1188 <configure_vic+0xc8>)
    10da:	482c      	ldr	r0, [pc, #176]	; (118c <configure_vic+0xcc>)
    10dc:	6814      	ldr	r4, [r2, #0]
    10de:	6004      	str	r4, [r0, #0]
    10e0:	482b      	ldr	r0, [pc, #172]	; (1190 <configure_vic+0xd0>)
    10e2:	6800      	ldr	r0, [r0, #0]
    10e4:	2805      	cmp	r0, #5
    10e6:	d815      	bhi.n	1114 <configure_vic+0x54>
    10e8:	f7ff f92a 	bl	340 <__gnu_thumb1_case_uqi>
    10ec:	140c0703 	.word	0x140c0703
    10f0:	0310      	.short	0x0310
    10f2:	4828      	ldr	r0, [pc, #160]	; (1194 <configure_vic+0xd4>)
    10f4:	61d8      	str	r0, [r3, #28]
    10f6:	2340      	movs	r3, #64	; 0x40
    10f8:	e00d      	b.n	1116 <configure_vic+0x56>
    10fa:	4827      	ldr	r0, [pc, #156]	; (1198 <configure_vic+0xd8>)
    10fc:	61d8      	str	r0, [r3, #28]
    10fe:	2380      	movs	r3, #128	; 0x80
    1100:	015b      	lsls	r3, r3, #5
    1102:	e008      	b.n	1116 <configure_vic+0x56>
    1104:	4825      	ldr	r0, [pc, #148]	; (119c <configure_vic+0xdc>)
    1106:	61d8      	str	r0, [r3, #28]
    1108:	2310      	movs	r3, #16
    110a:	e004      	b.n	1116 <configure_vic+0x56>
    110c:	4824      	ldr	r0, [pc, #144]	; (11a0 <configure_vic+0xe0>)
    110e:	61d8      	str	r0, [r3, #28]
    1110:	2302      	movs	r3, #2
    1112:	e000      	b.n	1116 <configure_vic+0x56>
    1114:	2300      	movs	r3, #0
    1116:	2059      	movs	r0, #89	; 0x59
    1118:	7800      	ldrb	r0, [r0, #0]
    111a:	4c22      	ldr	r4, [pc, #136]	; (11a4 <configure_vic+0xe4>)
    111c:	0080      	lsls	r0, r0, #2
    111e:	1900      	adds	r0, r0, r4
    1120:	2400      	movs	r4, #0
    1122:	6004      	str	r4, [r0, #0]
    1124:	4820      	ldr	r0, [pc, #128]	; (11a8 <configure_vic+0xe8>)
    1126:	4c21      	ldr	r4, [pc, #132]	; (11ac <configure_vic+0xec>)
    1128:	6004      	str	r4, [r0, #0]
    112a:	481e      	ldr	r0, [pc, #120]	; (11a4 <configure_vic+0xe4>)
    112c:	2432      	movs	r4, #50	; 0x32
    112e:	6004      	str	r4, [r0, #0]
    1130:	481f      	ldr	r0, [pc, #124]	; (11b0 <configure_vic+0xf0>)
    1132:	4c20      	ldr	r4, [pc, #128]	; (11b4 <configure_vic+0xf4>)
    1134:	6004      	str	r4, [r0, #0]
    1136:	4820      	ldr	r0, [pc, #128]	; (11b8 <configure_vic+0xf8>)
    1138:	2426      	movs	r4, #38	; 0x26
    113a:	6004      	str	r4, [r0, #0]
    113c:	481f      	ldr	r0, [pc, #124]	; (11bc <configure_vic+0xfc>)
    113e:	4c20      	ldr	r4, [pc, #128]	; (11c0 <configure_vic+0x100>)
    1140:	6004      	str	r4, [r0, #0]
    1142:	4820      	ldr	r0, [pc, #128]	; (11c4 <configure_vic+0x104>)
    1144:	242c      	movs	r4, #44	; 0x2c
    1146:	6004      	str	r4, [r0, #0]
    1148:	481f      	ldr	r0, [pc, #124]	; (11c8 <configure_vic+0x108>)
    114a:	4c20      	ldr	r4, [pc, #128]	; (11cc <configure_vic+0x10c>)
    114c:	6004      	str	r4, [r0, #0]
    114e:	4820      	ldr	r0, [pc, #128]	; (11d0 <configure_vic+0x110>)
    1150:	2424      	movs	r4, #36	; 0x24
    1152:	6004      	str	r4, [r0, #0]
    1154:	481f      	ldr	r0, [pc, #124]	; (11d4 <configure_vic+0x114>)
    1156:	4c20      	ldr	r4, [pc, #128]	; (11d8 <configure_vic+0x118>)
    1158:	6004      	str	r4, [r0, #0]
    115a:	4820      	ldr	r0, [pc, #128]	; (11dc <configure_vic+0x11c>)
    115c:	242b      	movs	r4, #43	; 0x2b
    115e:	6004      	str	r4, [r0, #0]
    1160:	481f      	ldr	r0, [pc, #124]	; (11e0 <configure_vic+0x120>)
    1162:	4c20      	ldr	r4, [pc, #128]	; (11e4 <configure_vic+0x124>)
    1164:	6004      	str	r4, [r0, #0]
    1166:	4820      	ldr	r0, [pc, #128]	; (11e8 <configure_vic+0x128>)
    1168:	2421      	movs	r4, #33	; 0x21
    116a:	6004      	str	r4, [r0, #0]
    116c:	600b      	str	r3, [r1, #0]
    116e:	4b1f      	ldr	r3, [pc, #124]	; (11ec <configure_vic+0x12c>)
    1170:	6013      	str	r3, [r2, #0]
    1172:	bd10      	pop	{r4, pc}
    1174:	1f000014 	.word	0x1f000014
    1178:	00003052 	.word	0x00003052
    117c:	0040042c 	.word	0x0040042c
    1180:	1f00000c 	.word	0x1f00000c
    1184:	004005b4 	.word	0x004005b4
    1188:	1f000010 	.word	0x1f000010
    118c:	0040045c 	.word	0x0040045c
    1190:	00400004 	.word	0x00400004
    1194:	000015a8 	.word	0x000015a8
    1198:	000016f8 	.word	0x000016f8
    119c:	000017c8 	.word	0x000017c8
    11a0:	00001870 	.word	0x00001870
    11a4:	2f000200 	.word	0x2f000200
    11a8:	2f000100 	.word	0x2f000100
    11ac:	000002dc 	.word	0x000002dc
    11b0:	2f00010c 	.word	0x2f00010c
    11b4:	00001530 	.word	0x00001530
    11b8:	2f00020c 	.word	0x2f00020c
    11bc:	2f000108 	.word	0x2f000108
    11c0:	0000166c 	.word	0x0000166c
    11c4:	2f000208 	.word	0x2f000208
    11c8:	2f000104 	.word	0x2f000104
    11cc:	00001770 	.word	0x00001770
    11d0:	2f000204 	.word	0x2f000204
    11d4:	2f000110 	.word	0x2f000110
    11d8:	000015e0 	.word	0x000015e0
    11dc:	2f000210 	.word	0x2f000210
    11e0:	2f000114 	.word	0x2f000114
    11e4:	00001808 	.word	0x00001808
    11e8:	2f000214 	.word	0x2f000214
    11ec:	00001052 	.word	0x00001052

000011f0 <dispatch>:
    11f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
    11f2:	e031      	b.n	1258 <dispatch+0x68>
    11f4:	22c8      	movs	r2, #200	; 0xc8
    11f6:	435a      	muls	r2, r3
    11f8:	491a      	ldr	r1, [pc, #104]	; (1264 <dispatch+0x74>)
    11fa:	3301      	adds	r3, #1
    11fc:	188a      	adds	r2, r1, r2
    11fe:	6811      	ldr	r1, [r2, #0]
    1200:	6850      	ldr	r0, [r2, #4]
    1202:	4281      	cmp	r1, r0
    1204:	d018      	beq.n	1238 <dispatch+0x48>
    1206:	200c      	movs	r0, #12
    1208:	4348      	muls	r0, r1
    120a:	3101      	adds	r1, #1
    120c:	1810      	adds	r0, r2, r0
    120e:	6885      	ldr	r5, [r0, #8]
    1210:	9501      	str	r5, [sp, #4]
    1212:	68c6      	ldr	r6, [r0, #12]
    1214:	6905      	ldr	r5, [r0, #16]
    1216:	200f      	movs	r0, #15
    1218:	4001      	ands	r1, r0
    121a:	6011      	str	r1, [r2, #0]
    121c:	9a01      	ldr	r2, [sp, #4]
    121e:	2a00      	cmp	r2, #0
    1220:	d00a      	beq.n	1238 <dispatch+0x48>
    1222:	1c20      	adds	r0, r4, #0
    1224:	f7fe efd0 	blx	1c8 <cpu_int_restore>
    1228:	9b01      	ldr	r3, [sp, #4]
    122a:	1c30      	adds	r0, r6, #0
    122c:	1c29      	adds	r1, r5, #0
    122e:	4798      	blx	r3
    1230:	f7fe efc2 	blx	1b8 <cpu_int_disable>
    1234:	2300      	movs	r3, #0
    1236:	1c04      	adds	r4, r0, #0
    1238:	4a0b      	ldr	r2, [pc, #44]	; (1268 <dispatch+0x78>)
    123a:	6811      	ldr	r1, [r2, #0]
    123c:	2900      	cmp	r1, #0
    123e:	d103      	bne.n	1248 <dispatch+0x58>
    1240:	6813      	ldr	r3, [r2, #0]
    1242:	2b00      	cmp	r3, #0
    1244:	d008      	beq.n	1258 <dispatch+0x68>
    1246:	e002      	b.n	124e <dispatch+0x5e>
    1248:	2b03      	cmp	r3, #3
    124a:	d9d3      	bls.n	11f4 <dispatch+0x4>
    124c:	e7f8      	b.n	1240 <dispatch+0x50>
    124e:	f7fe efc0 	blx	1d0 <cpu_wfi>
    1252:	1c20      	adds	r0, r4, #0
    1254:	f7fe efb8 	blx	1c8 <cpu_int_restore>
    1258:	4b03      	ldr	r3, [pc, #12]	; (1268 <dispatch+0x78>)
    125a:	681b      	ldr	r3, [r3, #0]
    125c:	2b00      	cmp	r3, #0
    125e:	d1e7      	bne.n	1230 <dispatch+0x40>
    1260:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
    1262:	46c0      	nop			; (mov r8, r8)
    1264:	00400034 	.word	0x00400034
    1268:	00400354 	.word	0x00400354

0000126c <clean_up>:
    126c:	b508      	push	{r3, lr}
    126e:	f7fe efa4 	blx	1b8 <cpu_int_disable>
    1272:	4b10      	ldr	r3, [pc, #64]	; (12b4 <clean_up+0x48>)
    1274:	681a      	ldr	r2, [r3, #0]
    1276:	2320      	movs	r3, #32
    1278:	61da      	str	r2, [r3, #28]
    127a:	4b0f      	ldr	r3, [pc, #60]	; (12b8 <clean_up+0x4c>)
    127c:	681a      	ldr	r2, [r3, #0]
    127e:	4b0f      	ldr	r3, [pc, #60]	; (12bc <clean_up+0x50>)
    1280:	601a      	str	r2, [r3, #0]
    1282:	4b0f      	ldr	r3, [pc, #60]	; (12c0 <clean_up+0x54>)
    1284:	681a      	ldr	r2, [r3, #0]
    1286:	4b0f      	ldr	r3, [pc, #60]	; (12c4 <clean_up+0x58>)
    1288:	601a      	str	r2, [r3, #0]
    128a:	2359      	movs	r3, #89	; 0x59
    128c:	781b      	ldrb	r3, [r3, #0]
    128e:	4a0e      	ldr	r2, [pc, #56]	; (12c8 <clean_up+0x5c>)
    1290:	009b      	lsls	r3, r3, #2
    1292:	189b      	adds	r3, r3, r2
    1294:	2232      	movs	r2, #50	; 0x32
    1296:	601a      	str	r2, [r3, #0]
    1298:	4b0c      	ldr	r3, [pc, #48]	; (12cc <clean_up+0x60>)
    129a:	2201      	movs	r2, #1
    129c:	601a      	str	r2, [r3, #0]
    129e:	4b0c      	ldr	r3, [pc, #48]	; (12d0 <clean_up+0x64>)
    12a0:	2200      	movs	r2, #0
    12a2:	601a      	str	r2, [r3, #0]
    12a4:	4b0b      	ldr	r3, [pc, #44]	; (12d4 <clean_up+0x68>)
    12a6:	223f      	movs	r2, #63	; 0x3f
    12a8:	601a      	str	r2, [r3, #0]
    12aa:	220d      	movs	r2, #13
    12ac:	601a      	str	r2, [r3, #0]
    12ae:	f7fe ef8c 	blx	1c8 <cpu_int_restore>
    12b2:	bd08      	pop	{r3, pc}
    12b4:	0040042c 	.word	0x0040042c
    12b8:	004005b4 	.word	0x004005b4
    12bc:	1f00000c 	.word	0x1f00000c
    12c0:	0040045c 	.word	0x0040045c
    12c4:	1f000010 	.word	0x1f000010
    12c8:	2f000200 	.word	0x2f000200
    12cc:	2100000c 	.word	0x2100000c
    12d0:	40000018 	.word	0x40000018
    12d4:	40000010 	.word	0x40000010

000012d8 <report_debug>:
    12d8:	b508      	push	{r3, lr}
    12da:	4b10      	ldr	r3, [pc, #64]	; (131c <report_debug+0x44>)
    12dc:	781b      	ldrb	r3, [r3, #0]
    12de:	2b00      	cmp	r3, #0
    12e0:	d00e      	beq.n	1300 <report_debug+0x28>
    12e2:	4b0f      	ldr	r3, [pc, #60]	; (1320 <report_debug+0x48>)
    12e4:	4a0f      	ldr	r2, [pc, #60]	; (1324 <report_debug+0x4c>)
    12e6:	681b      	ldr	r3, [r3, #0]
    12e8:	6812      	ldr	r2, [r2, #0]
    12ea:	2002      	movs	r0, #2
    12ec:	18d2      	adds	r2, r2, r3
    12ee:	490e      	ldr	r1, [pc, #56]	; (1328 <report_debug+0x50>)
    12f0:	f7ff fd60 	bl	db4 <io_printf>
    12f4:	4b0d      	ldr	r3, [pc, #52]	; (132c <report_debug+0x54>)
    12f6:	2002      	movs	r0, #2
    12f8:	681a      	ldr	r2, [r3, #0]
    12fa:	490d      	ldr	r1, [pc, #52]	; (1330 <report_debug+0x58>)
    12fc:	f7ff fd5a 	bl	db4 <io_printf>
    1300:	4b0c      	ldr	r3, [pc, #48]	; (1334 <report_debug+0x5c>)
    1302:	2002      	movs	r0, #2
    1304:	681a      	ldr	r2, [r3, #0]
    1306:	490c      	ldr	r1, [pc, #48]	; (1338 <report_debug+0x60>)
    1308:	f7ff fd54 	bl	db4 <io_printf>
    130c:	4b0b      	ldr	r3, [pc, #44]	; (133c <report_debug+0x64>)
    130e:	2002      	movs	r0, #2
    1310:	681a      	ldr	r2, [r3, #0]
    1312:	490b      	ldr	r1, [pc, #44]	; (1340 <report_debug+0x68>)
    1314:	f7ff fd4e 	bl	db4 <io_printf>
    1318:	bd08      	pop	{r3, pc}
    131a:	46c0      	nop			; (mov r8, r8)
    131c:	00400464 	.word	0x00400464
    1320:	e1000300 	.word	0xe1000300
    1324:	e1000304 	.word	0xe1000304
    1328:	0000193c 	.word	0x0000193c
    132c:	e1000320 	.word	0xe1000320
    1330:	00001962 	.word	0x00001962
    1334:	00400468 	.word	0x00400468
    1338:	00001988 	.word	0x00001988
    133c:	40000040 	.word	0x40000040
    1340:	000019ae 	.word	0x000019ae

00001344 <report_warns>:
    1344:	4b0f      	ldr	r3, [pc, #60]	; (1384 <report_warns+0x40>)
    1346:	b510      	push	{r4, lr}
    1348:	681a      	ldr	r2, [r3, #0]
    134a:	1c1c      	adds	r4, r3, #0
    134c:	07d3      	lsls	r3, r2, #31
    134e:	d505      	bpl.n	135c <report_warns+0x18>
    1350:	4b0d      	ldr	r3, [pc, #52]	; (1388 <report_warns+0x44>)
    1352:	2002      	movs	r0, #2
    1354:	681a      	ldr	r2, [r3, #0]
    1356:	490d      	ldr	r1, [pc, #52]	; (138c <report_warns+0x48>)
    1358:	f7ff fd2c 	bl	db4 <io_printf>
    135c:	6823      	ldr	r3, [r4, #0]
    135e:	2002      	movs	r0, #2
    1360:	4203      	tst	r3, r0
    1362:	d004      	beq.n	136e <report_warns+0x2a>
    1364:	4b0a      	ldr	r3, [pc, #40]	; (1390 <report_warns+0x4c>)
    1366:	490b      	ldr	r1, [pc, #44]	; (1394 <report_warns+0x50>)
    1368:	681a      	ldr	r2, [r3, #0]
    136a:	f7ff fd23 	bl	db4 <io_printf>
    136e:	4b05      	ldr	r3, [pc, #20]	; (1384 <report_warns+0x40>)
    1370:	681b      	ldr	r3, [r3, #0]
    1372:	075a      	lsls	r2, r3, #29
    1374:	d505      	bpl.n	1382 <report_warns+0x3e>
    1376:	4b08      	ldr	r3, [pc, #32]	; (1398 <report_warns+0x54>)
    1378:	2002      	movs	r0, #2
    137a:	681a      	ldr	r2, [r3, #0]
    137c:	4907      	ldr	r1, [pc, #28]	; (139c <report_warns+0x58>)
    137e:	f7ff fd19 	bl	db4 <io_printf>
    1382:	bd10      	pop	{r4, pc}
    1384:	00400018 	.word	0x00400018
    1388:	0040001c 	.word	0x0040001c
    138c:	000019cd 	.word	0x000019cd
    1390:	00400028 	.word	0x00400028
    1394:	000019f9 	.word	0x000019f9
    1398:	00400024 	.word	0x00400024
    139c:	00001a24 	.word	0x00001a24

000013a0 <spin1_start>:
    13a0:	b570      	push	{r4, r5, r6, lr}
    13a2:	1c06      	adds	r6, r0, #0
    13a4:	2007      	movs	r0, #7
    13a6:	f7ff f823 	bl	3f0 <sark_cpu_state>
    13aa:	2380      	movs	r3, #128	; 0x80
    13ac:	2400      	movs	r4, #0
    13ae:	059b      	lsls	r3, r3, #22
    13b0:	601c      	str	r4, [r3, #0]
    13b2:	f7ff fe59 	bl	1068 <configure_dma_controller>
    13b6:	4d26      	ldr	r5, [pc, #152]	; (1450 <spin1_start+0xb0>)
    13b8:	6828      	ldr	r0, [r5, #0]
    13ba:	f7ff fe69 	bl	1090 <configure_timer1>
    13be:	f7ff fe7f 	bl	10c0 <configure_vic>
    13c2:	4b24      	ldr	r3, [pc, #144]	; (1454 <spin1_start+0xb4>)
    13c4:	601c      	str	r4, [r3, #0]
    13c6:	4b24      	ldr	r3, [pc, #144]	; (1458 <spin1_start+0xb8>)
    13c8:	601c      	str	r4, [r3, #0]
    13ca:	4b24      	ldr	r3, [pc, #144]	; (145c <spin1_start+0xbc>)
    13cc:	601c      	str	r4, [r3, #0]
    13ce:	4b24      	ldr	r3, [pc, #144]	; (1460 <spin1_start+0xc0>)
    13d0:	601c      	str	r4, [r3, #0]
    13d2:	2e01      	cmp	r6, #1
    13d4:	d101      	bne.n	13da <spin1_start+0x3a>
    13d6:	f7ff faa7 	bl	928 <event_wait>
    13da:	682b      	ldr	r3, [r5, #0]
    13dc:	2b00      	cmp	r3, #0
    13de:	d002      	beq.n	13e6 <spin1_start+0x46>
    13e0:	4b20      	ldr	r3, [pc, #128]	; (1464 <spin1_start+0xc4>)
    13e2:	22e2      	movs	r2, #226	; 0xe2
    13e4:	601a      	str	r2, [r3, #0]
    13e6:	4b20      	ldr	r3, [pc, #128]	; (1468 <spin1_start+0xc8>)
    13e8:	2200      	movs	r2, #0
    13ea:	601a      	str	r2, [r3, #0]
    13ec:	4b1f      	ldr	r3, [pc, #124]	; (146c <spin1_start+0xcc>)
    13ee:	2201      	movs	r2, #1
    13f0:	601a      	str	r2, [r3, #0]
    13f2:	f7ff fefd 	bl	11f0 <dispatch>
    13f6:	f7ff ff39 	bl	126c <clean_up>
    13fa:	f7fe eed6 	blx	1a8 <cpu_int_enable>
    13fe:	4c1c      	ldr	r4, [pc, #112]	; (1470 <spin1_start+0xd0>)
    1400:	4b1c      	ldr	r3, [pc, #112]	; (1474 <spin1_start+0xd4>)
    1402:	6822      	ldr	r2, [r4, #0]
    1404:	601a      	str	r2, [r3, #0]
    1406:	4a13      	ldr	r2, [pc, #76]	; (1454 <spin1_start+0xb4>)
    1408:	491b      	ldr	r1, [pc, #108]	; (1478 <spin1_start+0xd8>)
    140a:	6812      	ldr	r2, [r2, #0]
    140c:	605a      	str	r2, [r3, #4]
    140e:	4a1b      	ldr	r2, [pc, #108]	; (147c <spin1_start+0xdc>)
    1410:	6812      	ldr	r2, [r2, #0]
    1412:	6809      	ldr	r1, [r1, #0]
    1414:	188a      	adds	r2, r1, r2
    1416:	609a      	str	r2, [r3, #8]
    1418:	4a19      	ldr	r2, [pc, #100]	; (1480 <spin1_start+0xe0>)
    141a:	6812      	ldr	r2, [r2, #0]
    141c:	60da      	str	r2, [r3, #12]
    141e:	4a19      	ldr	r2, [pc, #100]	; (1484 <spin1_start+0xe4>)
    1420:	6812      	ldr	r2, [r2, #0]
    1422:	611a      	str	r2, [r3, #16]
    1424:	4a18      	ldr	r2, [pc, #96]	; (1488 <spin1_start+0xe8>)
    1426:	6812      	ldr	r2, [r2, #0]
    1428:	3a01      	subs	r2, #1
    142a:	615a      	str	r2, [r3, #20]
    142c:	4a17      	ldr	r2, [pc, #92]	; (148c <spin1_start+0xec>)
    142e:	6812      	ldr	r2, [r2, #0]
    1430:	619a      	str	r2, [r3, #24]
    1432:	4a09      	ldr	r2, [pc, #36]	; (1458 <spin1_start+0xb8>)
    1434:	6812      	ldr	r2, [r2, #0]
    1436:	61da      	str	r2, [r3, #28]
    1438:	4a08      	ldr	r2, [pc, #32]	; (145c <spin1_start+0xbc>)
    143a:	6812      	ldr	r2, [r2, #0]
    143c:	621a      	str	r2, [r3, #32]
    143e:	4a08      	ldr	r2, [pc, #32]	; (1460 <spin1_start+0xc0>)
    1440:	6812      	ldr	r2, [r2, #0]
    1442:	625a      	str	r2, [r3, #36]	; 0x24
    1444:	f7ff ff48 	bl	12d8 <report_debug>
    1448:	f7ff ff7c 	bl	1344 <report_warns>
    144c:	6820      	ldr	r0, [r4, #0]
    144e:	bd70      	pop	{r4, r5, r6, pc}
    1450:	00400020 	.word	0x00400020
    1454:	00400018 	.word	0x00400018
    1458:	00400028 	.word	0x00400028
    145c:	0040001c 	.word	0x0040001c
    1460:	00400024 	.word	0x00400024
    1464:	21000008 	.word	0x21000008
    1468:	004005b8 	.word	0x004005b8
    146c:	00400354 	.word	0x00400354
    1470:	00400030 	.word	0x00400030
    1474:	00400430 	.word	0x00400430
    1478:	e1000304 	.word	0xe1000304
    147c:	e1000300 	.word	0xe1000300
    1480:	e1000320 	.word	0xe1000320
    1484:	00400468 	.word	0x00400468
    1488:	00400000 	.word	0x00400000
    148c:	40000040 	.word	0x40000040

00001490 <schedule_sysmode>:
    1490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1492:	4d15      	ldr	r5, [pc, #84]	; (14e8 <schedule_sysmode+0x58>)
    1494:	00c6      	lsls	r6, r0, #3
    1496:	19ab      	adds	r3, r5, r6
    1498:	685b      	ldr	r3, [r3, #4]
    149a:	2b00      	cmp	r3, #0
    149c:	dc04      	bgt.n	14a8 <schedule_sysmode+0x18>
    149e:	1c08      	adds	r0, r1, #0
    14a0:	5973      	ldr	r3, [r6, r5]
    14a2:	1c11      	adds	r1, r2, #0
    14a4:	4798      	blx	r3
    14a6:	e01d      	b.n	14e4 <schedule_sysmode+0x54>
    14a8:	20c8      	movs	r0, #200	; 0xc8
    14aa:	3b01      	subs	r3, #1
    14ac:	4343      	muls	r3, r0
    14ae:	480f      	ldr	r0, [pc, #60]	; (14ec <schedule_sysmode+0x5c>)
    14b0:	18c3      	adds	r3, r0, r3
    14b2:	685c      	ldr	r4, [r3, #4]
    14b4:	200f      	movs	r0, #15
    14b6:	1c67      	adds	r7, r4, #1
    14b8:	4038      	ands	r0, r7
    14ba:	681f      	ldr	r7, [r3, #0]
    14bc:	42b8      	cmp	r0, r7
    14be:	d008      	beq.n	14d2 <schedule_sysmode+0x42>
    14c0:	270c      	movs	r7, #12
    14c2:	437c      	muls	r4, r7
    14c4:	5976      	ldr	r6, [r6, r5]
    14c6:	191c      	adds	r4, r3, r4
    14c8:	60a6      	str	r6, [r4, #8]
    14ca:	60e1      	str	r1, [r4, #12]
    14cc:	6122      	str	r2, [r4, #16]
    14ce:	6058      	str	r0, [r3, #4]
    14d0:	e008      	b.n	14e4 <schedule_sysmode+0x54>
    14d2:	4b07      	ldr	r3, [pc, #28]	; (14f0 <schedule_sysmode+0x60>)
    14d4:	2201      	movs	r2, #1
    14d6:	6819      	ldr	r1, [r3, #0]
    14d8:	430a      	orrs	r2, r1
    14da:	601a      	str	r2, [r3, #0]
    14dc:	4b05      	ldr	r3, [pc, #20]	; (14f4 <schedule_sysmode+0x64>)
    14de:	681a      	ldr	r2, [r3, #0]
    14e0:	3201      	adds	r2, #1
    14e2:	601a      	str	r2, [r3, #0]
    14e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    14e6:	46c0      	nop			; (mov r8, r8)
    14e8:	004005c0 	.word	0x004005c0
    14ec:	00400034 	.word	0x00400034
    14f0:	00400018 	.word	0x00400018
    14f4:	0040001c 	.word	0x0040001c

000014f8 <sark_pre_main>:
    14f8:	b508      	push	{r3, lr}
    14fa:	2006      	movs	r0, #6
    14fc:	f7fe ff78 	bl	3f0 <sark_cpu_state>
    1500:	2201      	movs	r2, #1
    1502:	235b      	movs	r3, #91	; 0x5b
    1504:	701a      	strb	r2, [r3, #0]
    1506:	f7fe ff7b 	bl	400 <sark_app_lead>
    150a:	4b04      	ldr	r3, [pc, #16]	; (151c <sark_pre_main+0x24>)
    150c:	681b      	ldr	r3, [r3, #0]
    150e:	1ac2      	subs	r2, r0, r3
    1510:	4253      	negs	r3, r2
    1512:	415a      	adcs	r2, r3
    1514:	4b02      	ldr	r3, [pc, #8]	; (1520 <sark_pre_main+0x28>)
    1516:	701a      	strb	r2, [r3, #0]
    1518:	bd08      	pop	{r3, pc}
    151a:	46c0      	nop			; (mov r8, r8)
    151c:	00400358 	.word	0x00400358
    1520:	00400464 	.word	0x00400464

00001524 <sark_post_main>:
    1524:	b508      	push	{r3, lr}
    1526:	200b      	movs	r0, #11
    1528:	f7fe ff62 	bl	3f0 <sark_cpu_state>
    152c:	bd08      	pop	{r3, pc}
	...

00001530 <cc_rx_ready_isr>:
    1530:	e24ee004 	sub	lr, lr, #4
    1534:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    1538:	e3a03202 	mov	r3, #536870912	; 0x20000000
    153c:	e593000c 	ldr	r0, [r3, #12]
    1540:	e59fc058 	ldr	ip, [pc, #88]	; 15a0 <cc_rx_ready_isr+0x70>
    1544:	e2100802 	ands	r0, r0, #131072	; 0x20000
    1548:	0a000006 	beq	1568 <cc_rx_ready_isr+0x38>
    154c:	e5932010 	ldr	r2, [r3, #16]
    1550:	e5931014 	ldr	r1, [r3, #20]
    1554:	e59c3028 	ldr	r3, [ip, #40]	; 0x28
    1558:	e3530000 	cmp	r3, #0
    155c:	13a00005 	movne	r0, #5
    1560:	1a000005 	bne	157c <cc_rx_ready_isr+0x4c>
    1564:	ea000006 	b	1584 <cc_rx_ready_isr+0x54>
    1568:	e5931014 	ldr	r1, [r3, #20]
    156c:	e59c3000 	ldr	r3, [ip]
    1570:	e3530000 	cmp	r3, #0
    1574:	0a000002 	beq	1584 <cc_rx_ready_isr+0x54>
    1578:	e1a02000 	mov	r2, r0
    157c:	ebfffb63 	bl	310 <schedule>
    1580:	ea000003 	b	1594 <cc_rx_ready_isr+0x64>
    1584:	e59f3018 	ldr	r3, [pc, #24]	; 15a4 <cc_rx_ready_isr+0x74>
    1588:	e5932000 	ldr	r2, [r3]
    158c:	e2822001 	add	r2, r2, #1
    1590:	e5832000 	str	r2, [r3]
    1594:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    1598:	e5833030 	str	r3, [r3, #48]	; 0x30
    159c:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^
    15a0:	004005c0 	.word	0x004005c0
    15a4:	00400468 	.word	0x00400468

000015a8 <cc_rx_ready_fiqsr>:
    15a8:	e24ee004 	sub	lr, lr, #4
    15ac:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    15b0:	e3a03202 	mov	r3, #536870912	; 0x20000000
    15b4:	e593100c 	ldr	r1, [r3, #12]
    15b8:	e59f201c 	ldr	r2, [pc, #28]	; 15dc <cc_rx_ready_fiqsr+0x34>
    15bc:	e2111802 	ands	r1, r1, #131072	; 0x20000
    15c0:	15931010 	ldrne	r1, [r3, #16]
    15c4:	05930014 	ldreq	r0, [r3, #20]
    15c8:	15930014 	ldrne	r0, [r3, #20]
    15cc:	05923000 	ldreq	r3, [r2]
    15d0:	15923028 	ldrne	r3, [r2, #40]	; 0x28
    15d4:	e12fff33 	blx	r3
    15d8:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^
    15dc:	004005c0 	.word	0x004005c0

000015e0 <cc_tx_empty_isr>:
    15e0:	e92d103f 	push	{r0, r1, r2, r3, r4, r5, ip}
    15e4:	e3a03000 	mov	r3, #0
    15e8:	e3a02202 	mov	r2, #536870912	; 0x20000000
    15ec:	e5823000 	str	r3, [r2]
    15f0:	e3a0c00c 	mov	ip, #12
    15f4:	e59f306c 	ldr	r3, [pc, #108]	; 1668 <cc_tx_empty_isr+0x88>
    15f8:	ea000009 	b	1624 <cc_tx_empty_isr+0x44>
    15fc:	e020319c 	mla	r0, ip, r1, r3
    1600:	e2811001 	add	r1, r1, #1
    1604:	e5904008 	ldr	r4, [r0, #8]
    1608:	e590500c 	ldr	r5, [r0, #12]
    160c:	e5900010 	ldr	r0, [r0, #16]
    1610:	e201100f 	and	r1, r1, #15
    1614:	e3500000 	cmp	r0, #0
    1618:	e5831000 	str	r1, [r3]
    161c:	15825004 	strne	r5, [r2, #4]
    1620:	e5824008 	str	r4, [r2, #8]
    1624:	e5931000 	ldr	r1, [r3]
    1628:	e5930004 	ldr	r0, [r3, #4]
    162c:	e1510000 	cmp	r1, r0
    1630:	0a000006 	beq	1650 <cc_tx_empty_isr+0x70>
    1634:	e5920000 	ldr	r0, [r2]
    1638:	e3100101 	tst	r0, #1073741824	; 0x40000000
    163c:	0affffee 	beq	15fc <cc_tx_empty_isr+0x1c>
    1640:	e3a02001 	mov	r2, #1
    1644:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    1648:	e5832030 	str	r2, [r3, #48]	; 0x30
    164c:	ea000003 	b	1660 <cc_tx_empty_isr+0x80>
    1650:	e3a02b02 	mov	r2, #2048	; 0x800
    1654:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    1658:	e5832014 	str	r2, [r3, #20]
    165c:	eafffff7 	b	1640 <cc_tx_empty_isr+0x60>
    1660:	e8bd103f 	pop	{r0, r1, r2, r3, r4, r5, ip}
    1664:	e25ef004 	subs	pc, lr, #4
    1668:	004005f0 	.word	0x004005f0

0000166c <dma_done_isr>:
    166c:	e24ee004 	sub	lr, lr, #4
    1670:	e92d503f 	push	{r0, r1, r2, r3, r4, r5, ip, lr}
    1674:	e3a03008 	mov	r3, #8
    1678:	e3a00101 	mov	r0, #1073741824	; 0x40000000
    167c:	e5803010 	str	r3, [r0, #16]
    1680:	e59f3068 	ldr	r3, [pc, #104]	; 16f0 <dma_done_isr+0x84>
    1684:	e3a04014 	mov	r4, #20
    1688:	e593c000 	ldr	ip, [r3]
    168c:	e5935004 	ldr	r5, [r3, #4]
    1690:	e0223c94 	mla	r2, r4, ip, r3
    1694:	e28cc001 	add	ip, ip, #1
    1698:	e20cc00f 	and	ip, ip, #15
    169c:	e15c0005 	cmp	ip, r5
    16a0:	e5921008 	ldr	r1, [r2, #8]
    16a4:	e583c000 	str	ip, [r3]
    16a8:	e592200c 	ldr	r2, [r2, #12]
    16ac:	0a000005 	beq	16c8 <dma_done_isr+0x5c>
    16b0:	e0233c94 	mla	r3, r4, ip, r3
    16b4:	e2833010 	add	r3, r3, #16
    16b8:	e8931018 	ldm	r3, {r3, r4, ip}
    16bc:	e5803004 	str	r3, [r0, #4]
    16c0:	e5804008 	str	r4, [r0, #8]
    16c4:	e580c00c 	str	ip, [r0, #12]
    16c8:	e59f3024 	ldr	r3, [pc, #36]	; 16f4 <dma_done_isr+0x88>
    16cc:	e5933008 	ldr	r3, [r3, #8]
    16d0:	e3530000 	cmp	r3, #0
    16d4:	0a000001 	beq	16e0 <dma_done_isr+0x74>
    16d8:	e3a00001 	mov	r0, #1
    16dc:	ebfffb0b 	bl	310 <schedule>
    16e0:	e3a02001 	mov	r2, #1
    16e4:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    16e8:	e5832030 	str	r2, [r3, #48]	; 0x30
    16ec:	e8fd903f 	ldm	sp!, {r0, r1, r2, r3, r4, r5, ip, pc}^
    16f0:	0040046c 	.word	0x0040046c
    16f4:	004005c0 	.word	0x004005c0

000016f8 <dma_done_fiqsr>:
    16f8:	e24ee004 	sub	lr, lr, #4
    16fc:	e92d503f 	push	{r0, r1, r2, r3, r4, r5, ip, lr}
    1700:	e3a03008 	mov	r3, #8
    1704:	e3a02101 	mov	r2, #1073741824	; 0x40000000
    1708:	e5823010 	str	r3, [r2, #16]
    170c:	e59f3054 	ldr	r3, [pc, #84]	; 1768 <dma_done_fiqsr+0x70>
    1710:	e3a0e014 	mov	lr, #20
    1714:	e593c000 	ldr	ip, [r3]
    1718:	e5934004 	ldr	r4, [r3, #4]
    171c:	e0213c9e 	mla	r1, lr, ip, r3
    1720:	e28cc001 	add	ip, ip, #1
    1724:	e20cc00f 	and	ip, ip, #15
    1728:	e15c0004 	cmp	ip, r4
    172c:	e5910008 	ldr	r0, [r1, #8]
    1730:	e583c000 	str	ip, [r3]
    1734:	e591100c 	ldr	r1, [r1, #12]
    1738:	0a000006 	beq	1758 <dma_done_fiqsr+0x60>
    173c:	e0233c9e 	mla	r3, lr, ip, r3
    1740:	e593e014 	ldr	lr, [r3, #20]
    1744:	e593c018 	ldr	ip, [r3, #24]
    1748:	e5933010 	ldr	r3, [r3, #16]
    174c:	e5823004 	str	r3, [r2, #4]
    1750:	e582e008 	str	lr, [r2, #8]
    1754:	e582c00c 	str	ip, [r2, #12]
    1758:	e59f300c 	ldr	r3, [pc, #12]	; 176c <dma_done_fiqsr+0x74>
    175c:	e5933008 	ldr	r3, [r3, #8]
    1760:	e12fff33 	blx	r3
    1764:	e8fd903f 	ldm	sp!, {r0, r1, r2, r3, r4, r5, ip, pc}^
    1768:	0040046c 	.word	0x0040046c
    176c:	004005c0 	.word	0x004005c0

00001770 <timer1_isr>:
    1770:	e24ee004 	sub	lr, lr, #4
    1774:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    1778:	e3a02001 	mov	r2, #1
    177c:	e3a03421 	mov	r3, #553648128	; 0x21000000
    1780:	e583200c 	str	r2, [r3, #12]
    1784:	e59f3034 	ldr	r3, [pc, #52]	; 17c0 <timer1_isr+0x50>
    1788:	e5931000 	ldr	r1, [r3]
    178c:	e0811002 	add	r1, r1, r2
    1790:	e5831000 	str	r1, [r3]
    1794:	e59f3028 	ldr	r3, [pc, #40]	; 17c4 <timer1_isr+0x54>
    1798:	e5933010 	ldr	r3, [r3, #16]
    179c:	e3530000 	cmp	r3, #0
    17a0:	0a000002 	beq	17b0 <timer1_isr+0x40>
    17a4:	e3a00002 	mov	r0, #2
    17a8:	e3a02000 	mov	r2, #0
    17ac:	ebfffad7 	bl	310 <schedule>
    17b0:	e3a02001 	mov	r2, #1
    17b4:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    17b8:	e5832030 	str	r2, [r3, #48]	; 0x30
    17bc:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^
    17c0:	004005b8 	.word	0x004005b8
    17c4:	004005c0 	.word	0x004005c0

000017c8 <timer1_fiqsr>:
    17c8:	e24ee004 	sub	lr, lr, #4
    17cc:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    17d0:	e3a02001 	mov	r2, #1
    17d4:	e3a03421 	mov	r3, #553648128	; 0x21000000
    17d8:	e583200c 	str	r2, [r3, #12]
    17dc:	e59f301c 	ldr	r3, [pc, #28]	; 1800 <timer1_fiqsr+0x38>
    17e0:	e3a01000 	mov	r1, #0
    17e4:	e5930000 	ldr	r0, [r3]
    17e8:	e0800002 	add	r0, r0, r2
    17ec:	e5830000 	str	r0, [r3]
    17f0:	e59f300c 	ldr	r3, [pc, #12]	; 1804 <timer1_fiqsr+0x3c>
    17f4:	e5933010 	ldr	r3, [r3, #16]
    17f8:	e12fff33 	blx	r3
    17fc:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^
    1800:	004005b8 	.word	0x004005b8
    1804:	004005c0 	.word	0x004005c0

00001808 <soft_int_isr>:
    1808:	e24ee004 	sub	lr, lr, #4
    180c:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    1810:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    1814:	e3a02002 	mov	r2, #2
    1818:	e583201c 	str	r2, [r3, #28]
    181c:	e59f303c 	ldr	r3, [pc, #60]	; 1860 <soft_int_isr+0x58>
    1820:	e5933020 	ldr	r3, [r3, #32]
    1824:	e3530000 	cmp	r3, #0
    1828:	0a000005 	beq	1844 <soft_int_isr+0x3c>
    182c:	e59f3030 	ldr	r3, [pc, #48]	; 1864 <soft_int_isr+0x5c>
    1830:	e3a00004 	mov	r0, #4
    1834:	e5931000 	ldr	r1, [r3]
    1838:	e59f3028 	ldr	r3, [pc, #40]	; 1868 <soft_int_isr+0x60>
    183c:	e5932000 	ldr	r2, [r3]
    1840:	ebfffab2 	bl	310 <schedule>
    1844:	e59f3020 	ldr	r3, [pc, #32]	; 186c <soft_int_isr+0x64>
    1848:	e3a02000 	mov	r2, #0
    184c:	e5c32000 	strb	r2, [r3]
    1850:	e3a02001 	mov	r2, #1
    1854:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    1858:	e5832030 	str	r2, [r3, #48]	; 0x30
    185c:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^
    1860:	004005c0 	.word	0x004005c0
    1864:	004005bc 	.word	0x004005bc
    1868:	00400460 	.word	0x00400460
    186c:	0040002c 	.word	0x0040002c

00001870 <soft_int_fiqsr>:
    1870:	e24ee004 	sub	lr, lr, #4
    1874:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    1878:	e3a02002 	mov	r2, #2
    187c:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    1880:	e583201c 	str	r2, [r3, #28]
    1884:	e59f2024 	ldr	r2, [pc, #36]	; 18b0 <soft_int_fiqsr+0x40>
    1888:	e59f3024 	ldr	r3, [pc, #36]	; 18b4 <soft_int_fiqsr+0x44>
    188c:	e5920000 	ldr	r0, [r2]
    1890:	e59f2020 	ldr	r2, [pc, #32]	; 18b8 <soft_int_fiqsr+0x48>
    1894:	e5933020 	ldr	r3, [r3, #32]
    1898:	e5921000 	ldr	r1, [r2]
    189c:	e12fff33 	blx	r3
    18a0:	e59f3014 	ldr	r3, [pc, #20]	; 18bc <soft_int_fiqsr+0x4c>
    18a4:	e3a02000 	mov	r2, #0
    18a8:	e5c32000 	strb	r2, [r3]
    18ac:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^
    18b0:	004005bc 	.word	0x004005bc
    18b4:	004005c0 	.word	0x004005c0
    18b8:	00400460 	.word	0x00400460
    18bc:	0040002c 	.word	0x0040002c
    18c0:	6c6c6548 	.word	0x6c6c6548
    18c4:	6f77206f 	.word	0x6f77206f
    18c8:	21646c72 	.word	0x21646c72
    18cc:	69762820 	.word	0x69762820
    18d0:	44532061 	.word	0x44532061
    18d4:	000a2950 	.word	0x000a2950
    18d8:	6c6c6548 	.word	0x6c6c6548
    18dc:	6f77206f 	.word	0x6f77206f
    18e0:	21646c72 	.word	0x21646c72
    18e4:	69762820 	.word	0x69762820
    18e8:	44532061 	.word	0x44532061
    18ec:	294d4152 	.word	0x294d4152
    18f0:	6548000a 	.word	0x6548000a
    18f4:	206f6c6c 	.word	0x206f6c6c
    18f8:	6c726f77 	.word	0x6c726f77
    18fc:	28202164 	.word	0x28202164
    1900:	20616976 	.word	0x20616976
    1904:	6e697270 	.word	0x6e697270
    1908:	2e2e6674 	.word	0x2e2e6674
    190c:	000a292e 	.word	0x000a292e

00001910 <build_name>:
    1910:	6c6c6568 0000006f                       hello...

00001918 <build_date>:
    1918:	5509f2a5 4b524153 6970532f 6b614e4e     ...USARK/SpiNNak
    1928:	30007265                                         er.

0000192b <hex>:
    192b:	33323130 37363534 62613938 66656463     0123456789abcdef
    193b:	5b090900 5f697061 75626564 52205d67     ...[api_debug] R
    194b:	6d205254 20202063 61702020 74656b63     TR mc     packet
    195b:	25203a73 09000a64 70615b09 65645f69     s: %d....[api_de
    196b:	5d677562 52545220 64706420 20636d20     bug] RTR dpd mc 
    197b:	6b636170 3a737465 0a642520 5b090900     packets: %d....[
    198b:	5f697061 75626564 49205d67 74205253     api_debug] ISR t
    199b:	776f7268 6170206e 74656b63 25203a73     hrown packets: %
    19ab:	09000a64 70615b09 65645f69 5d677562     d....[api_debug]
    19bb:	414d4420 72756220 3a737473 64252020      DMA bursts:  %d
    19cb:	0909000a 6970615b 7261775f 77205d6e     ....[api_warn] w
    19db:	696e7261 203a676e 6b736174 65757120     arning: task que
    19eb:	66206575 206c6c75 29752528 0909000a     ue full (%u)....
    19fb:	6970615b 7261775f 77205d6e 696e7261     [api_warn] warni
    1a0b:	203a676e 20414d44 75657571 75662065     ng: DMA queue fu
    1a1b:	28206c6c 0a297525 5b090900 5f697061     ll (%u)....[api_
    1a2b:	6e726177 6177205d 6e696e72 70203a67     warn] warning: p
    1a3b:	656b6361 75712074 20657565 6c6c7566     acket queue full
    1a4b:	75252820 00000a29                                 (%u)..
